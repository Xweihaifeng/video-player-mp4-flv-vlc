{"version":3,"sources":["node_modules/_browser-pack@6.1.0@browser-pack/_prelude.js","node_modules/_es6-promise@4.2.8@es6-promise/dist/node_modules/es6-promise/dist/es6-promise.js","node_modules/_events@1.1.1@events/events.js","node_modules/_process@0.11.10@process/browser.js","node_modules/_webworkify@1.5.0@webworkify/index.js","src/config.js","src/core/features.js","src/core/media-info.js","src/core/media-segment-info.js","src/core/mse-controller.js","src/core/mse-events.js","src/core/transmuxer.js","src/core/transmuxing-controller.js","src/core/transmuxing-events.js","src/core/transmuxing-worker.js","src/demux/amf-parser.js","src/demux/demux-errors.js","src/demux/exp-golomb.js","src/demux/flv-demuxer.js","src/demux/sps-parser.js","src/flv.js","src/index.js","src/io/fetch-stream-loader.js","src/io/io-controller.js","src/io/loader.js","src/io/param-seek-handler.js","src/io/range-seek-handler.js","src/io/speed-sampler.js","src/io/websocket-loader.js","src/io/xhr-moz-chunked-loader.js","src/io/xhr-msstream-loader.js","src/io/xhr-range-loader.js","src/player/flv-player.js","src/player/native-player.js","src/player/player-errors.js","src/player/player-events.js","src/remux/aac-silent.js","src/remux/mp4-generator.js","src/remux/mp4-remuxer.js","src/utils/browser.js","src/utils/exception.js","src/utils/logger.js","src/utils/logging-control.js","src/utils/polyfill.js","src/utils/utf8-conv.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","flvjs","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","_dereq_","factory","ES6Promise","objectOrFunction","x","type","isFunction","setScheduler","scheduleFn","customSchedulerFn","setAsap","asapFn","asap","useVertxTimer","vertxNext","flush","useSetTimeout","globalSetTimeout","setTimeout","len","callback","queue","undefined","then","onFulfillment","onRejection","parent","child","constructor","noop","PROMISE_ID","makePromise","_state","arguments","invokeCallback","_result","subscribe","resolve$1","object","Constructor","promise","resolve","selfFulfillment","TypeError","cannotReturnOwn","tryThen","then$$1","value","fulfillmentHandler","rejectionHandler","handleForeignThenable","thenable","sealed","error","fulfill","reason","reject","_label","handleOwnThenable","FULFILLED","REJECTED","handleMaybeThenable","maybeThenable","publishRejection","_onerror","publish","PENDING","_subscribers","subscribers","settled","detail","hasCallback","succeeded","initializePromise","resolver","nextId","id","validationError","all","entries","Enumerator","race","isArray","_","reject$1","needsResolver","needsNew","polyfill","local","Function","P","Promise","promiseToString","Object","prototype","toString","cast","Promise$1","_isArray","Array","arg","scheduleFlush","browserWindow","browserGlobal","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","isNode","process","isWorker","Uint8ClampedArray","importScripts","MessageChannel","nextTick","iterations","observer","node","document","createTextNode","observe","characterData","data","channel","port1","onmessage","port2","postMessage","vertx","runOnLoop","runOnContext","Math","random","substring","input","_instanceConstructor","_remaining","_enumerate","_eachEntry","entry","resolve$$1","_then","didError","_settledAt","_willSettleAt","state","enumerator","catch","finally","_setScheduler","_setAsap","_asap","EventEmitter","_events","_maxListeners","isNumber","isObject","isUndefined","defaultMaxListeners","setMaxListeners","isNaN","emit","er","handler","args","listeners","err","context","slice","apply","addListener","listener","m","newListener","push","warned","console","trace","on","once","removeListener","fired","list","position","splice","removeAllListeners","key","listenerCount","evlistener","emitter","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","concat","queueIndex","drainQueue","timeout","run","Item","array","title","browser","env","argv","version","versions","off","prependListener","prependOnceListener","name","binding","cwd","chdir","dir","umask","bundleFn","sources","cache","stringify","JSON","fn","options","resolveSources","workerSources","depPath","depKey","wkey","cacheKeys","keys","l","exp","default","floor","pow","wcache","skey","scache","src","map","join","URL","webkitURL","mozURL","msURL","blob","Blob","bare","workerUrl","createObjectURL","worker","Worker","objectURL","createDefaultConfig","assign","defaultConfig","enableWorker","enableStashBuffer","stashInitialSize","isLive","lazyLoad","lazyLoadMaxDuration","lazyLoadRecoverDuration","deferLoadAfterSourceOpen","autoCleanupMaxBackwardDuration","autoCleanupMinBackwardDuration","statisticsInfoReportInterval","fixAudioTimestampGap","accurateSeek","seekType","seekParamStart","seekParamEnd","rangeLoadZeroStart","customSeekHandler","reuseRedirectedURL","headers","customLoader","_ioController","_config","Features","MediaSource","isTypeSupported","ioctl","_ioController2","loaderType","destroy","mimeType","videoElement","createElement","canPlay","canPlayType","features","mseFlvPlayback","mseLiveFlvPlayback","networkStreamIO","networkLoaderName","nativeMP4H264Playback","nativeWebmVP8Playback","nativeWebmVP9Playback","supportMSEH264Playback","supportNetworkStreamIO","getNetworkLoaderTypeName","supportNativeMediaPlayback","MediaInfo","_classCallCheck","duration","hasAudio","hasVideo","audioCodec","videoCodec","audioDataRate","videoDataRate","audioSampleRate","audioChannelCount","width","height","fps","profile","level","refFrames","chromaFormat","sarNum","sarDen","metadata","segments","segmentCount","hasKeyframesIndex","keyframesIndex","audioInfoComplete","videoInfoComplete","milliseconds","table","keyframeIdx","_search","times","index","fileposition","filepositions","idx","last","mid","lbound","ubound","SampleInfo","dts","pts","originalDts","isSync","isSyncPoint","MediaSegmentInfo","beginDts","endDts","beginPts","endPts","originalBeginDts","originalEndDts","syncPoints","firstSample","lastSample","sampleInfo","IDRSampleList","_list","clear","MediaSegmentInfoList","_type","_lastAppendLocation","_searchNearestSegmentBefore","mediaSegmentInfo","msi","lastAppendIdx","insertIdx","segment","getLastSegmentBefore","segmentIdx","_logger","_browser","_mseEvents","_mediaSegmentInfo","_exception","MSEController","config","TAG","_emitter","_events2","autoCleanupSourceBuffer","onSourceOpen","_onSourceOpen","bind","onSourceEnded","_onSourceEnded","onSourceClose","_onSourceClose","onSourceBufferError","_onSourceBufferError","onSourceBufferUpdateEnd","_onSourceBufferUpdateEnd","_mediaSource","_mediaSourceObjectURL","_mediaElement","_isBufferFull","_hasPendingEos","_requireSetMediaDuration","_pendingMediaDuration","_pendingSourceBufferInit","_mimeTypes","video","audio","_sourceBuffers","_lastInitSegments","_pendingSegments","_pendingRemoveRanges","_idrList","detachMediaElement","event","mediaElement","IllegalStateException","ms","addEventListener","ps","sb","readyState","removeSourceBuffer","_logger2","message","removeEventListener","endOfStream","removeAttribute","revokeObjectURL","initSegment","deferred","is","container","codec","firstInitSegment","v","addSourceBuffer","_mseEvents2","ERROR","msg","updating","_doAppendSegments","_browser2","safari","mediaDuration","_updateMediaSourceDuration","mediaSegment","_needCleanupSourceBuffer","_doCleanupSourceBuffer","_hasPendingRemoveRanges","seconds","abort","buffered","start","end","_doRemoveRanges","lastInitSegment","_hasPendingSegments","getLastSyncPointBeforeDts","currentTime","doRemove","removeEnd","current","target","ranges","range","shift","remove","pendingSegments","timestampOffset","currentOffset","targetOffset","delta","abs","byteLength","appendBuffer","hasOwnProperty","appendArray","info","unshift","BUFFER_FULL","pendings","appendInitSegment","SOURCE_OPEN","prr","UPDATE_END","MSEEvents","_loggingControl","_transmuxingController","_transmuxingEvents","_transmuxingWorker","_mediaInfo","Transmuxer","mediaDataSource","work","_worker","_transmuxingWorker2","_workerDestroying","_onWorkerMessage","cmd","param","onLoggingConfigChanged","_onLoggingConfigChanged","_loggingControl2","registerListener","getConfig","_controller","_transmuxingController2","ctl","_transmuxingEvents2","IO_ERROR","_onIOError","DEMUX_ERROR","_onDemuxError","INIT_SEGMENT","_onInitSegment","MEDIA_SEGMENT","_onMediaSegment","LOADING_COMPLETE","_onLoadingComplete","RECOVERED_EARLY_EOF","_onRecoveredEarlyEof","MEDIA_INFO","_onMediaInfo","METADATA_ARRIVED","_onMetaDataArrived","SCRIPTDATA_ARRIVED","_onScriptDataArrived","STATISTICS_INFO","_onStatisticsInfo","RECOMMEND_SEEKPOINT","_onRecommendSeekpoint","stop","seek","pause","resume","_this","_this2","_this3","_this4","mediaInfo","_this5","_this6","_this7","statisticsInfo","_this8","_this9","_this10","_this11","terminate","setPrototypeOf","_mediaInfo2","logcat","_flvDemuxer","_mp4Remuxer","_demuxErrors","TransmuxingController","filesize","url","cors","withCredentials","_mediaDataSource","_currentSegmentIndex","totalDuration","forEach","timestampBase","referrerPolicy","_demuxer","_remuxer","_ioctl","_pendingSeekTime","_pendingResolveSeekPoint","_statisticsReporter","_disableStatisticsReporter","_loadSegment","_enableStatisticsReporter","segmentIndex","optionalFrom","dataSource","onError","_onIOException","onSeeked","_onIOSeeked","onComplete","_onIOComplete","onRedirect","_onIORedirect","onRecoveredEarlyEof","_onIORecoveredEarlyEof","bindDataSource","onDataArrival","_onInitChunkArrival","open","_internalAbort","isWorking","isPaused","isSeekable","targetSegmentIndex","_searchSegmentIndexContains","segmentInfo","keyframe","getNearestKeyframe","targetSegmentInfo","insertDiscontinuity","_keyframe","resetMediaInfo","_reportSegmentMediaInfo","byteStart","probeData","consumed","parseChunks","_flvDemuxer2","probe","match","_mp4Remuxer2","mds","overridedDuration","overridedHasAudio","overridedHasVideo","_onDemuxException","onMediaInfo","onMetaDataArrived","onScriptDataArrived","onInitSegment","_onRemuxerInitSegmentArrival","onMediaSegment","_onRemuxerMediaSegmentArrival","_demuxErrors2","FORMAT_UNSUPPORTED","extraData","nextSegmentIndex","flushStashedSamples","redirectedURL","seekpoint","setInterval","_reportStatisticsInfo","clearInterval","exportInfo","currentURL","hasRedirect","currentRedirectedURL","speed","currentSpeed","currentSegmentIndex","totalSegmentCount","TransmuxingEvents","_polyfill","TransmuxingWorker","obj","onLoadingComplete","onStatisticsInfo","statInfo","onIOError","onDemuxError","onRecommendSeekpoint","onLogcatCallback","str","controller","logcatListener","_polyfill2","install","applyConfig","enableCallback","addLogListener","removeLogListener","_utf8Conv","le","buf","ArrayBuffer","DataView","setInt16","Int16Array","AMF","arrayBuffer","dataOffset","dataSize","parseValue","size","parseString","isObjectEnd","objectEnd","parseObject","getUint16","_utf8Conv2","Uint8Array","getUint32","timestamp","getFloat64","getInt16","Date","offset","getUint8","amfstr","terminal","amfobj","_terminal","amfvar","parseVariable","strictArrayLength","val","date","parseDate","amfLongStr","w","DemuxErrors","OK","FORMAT_ERROR","CODEC_UNSUPPORTED","ExpGolomb","uint8array","_buffer","_buffer_index","_total_bytes","_total_bits","_current_word","_current_word_bits_left","buffer_bytes_left","bytes_read","min","word","set","subarray","buffer","bits","InvalidArgumentException","result","bits_need_left","_fillCurrentWord","bits_read_next","result2","readBits","zero_count","_skipLeadingZero","leading_zeros","readUEG","ReadBig32","_amfParser","_spsParser","FLVDemuxer","_onError","_onTrackMetadata","_onDataAvailable","_dataOffset","_firstParse","_dispatch","_hasAudio","hasAudioTrack","_hasVideo","hasVideoTrack","_hasAudioFlagOverrided","_hasVideoFlagOverrided","_audioInitialMetadataDispatched","_videoInitialMetadataDispatched","_metadata","_audioMetadata","_videoMetadata","_naluLengthSize","_timestampBase","_timescale","_duration","_durationOverrided","_referenceFrameRate","fixed","fps_num","fps_den","_flvSoundRateTable","_mpegSamplingRates","_mpegAudioV10SampleRateTable","_mpegAudioV20SampleRateTable","_mpegAudioV25SampleRateTable","_mpegAudioL1BitRateTable","_mpegAudioL2BitRateTable","_mpegAudioL3BitRateTable","_videoTrack","sequenceNumber","samples","_audioTrack","_littleEndian","loader","chunk","_v","tagType","ts2","ts1","ts0","ts3","_parseAudioData","_parseVideoData","_parseScriptData","prevTagSize","_isInitialMetadataDispatched","scriptData","_amfParser2","parseScriptData","onMetaData","_typeof","audiodatarate","videodatarate","framerate","keyframes","_parseKeyframesIndex","isComplete","time","tagTimestamp","soundSpec","soundFormat","soundRate","soundRateIndex","soundType","meta","track","timescale","channelCount","aacData","_parseAACAudioData","packetType","misc","samplingRate","originalCodec","refSampleDuration","mi","aacSample","unit","_misc","_parseMP3AudioData","_mi","bitRate","_dts","mp3Sample","_parseAACAudioSpecificConfig","audioObjectType","originalAudioObjectType","samplingIndex","extensionSamplingIndex","samplingFrequence","channelConfig","userAgent","navigator","toLowerCase","indexOf","requestHeader","ver","layer","bitrate_index","sampling_freq_index","channel_mode","channel_count","sample_rate","bit_rate","tagPosition","spec","frameType","codecId","_parseAVCVideoPacket","cts_unsigned","cts","_parseAVCDecoderConfigurationRecord","_parseAVCVideoData","avcc","avcProfile","spsCount","sps","_spsParser2","parseSPS","codecWidth","codec_size","codecHeight","presentWidth","present_size","presentHeight","profile_string","level_string","bitDepth","bit_depth","chroma_format","sarRatio","sar_ratio","frameRate","frame_rate","codecArray","codecString","j","h","ref_frames","chroma_format_string","ppsCount","_i","_len","units","lengthSize","naluSize","unitType","avcSample","isKeyframe","base","mismatch","_expGolomb","SPSParser","src_length","dst","dst_idx","rbsp","_ebsp2rbsp","gb","_expGolomb2","readByte","profile_idc","level_idc","getProfileString","getLevelString","chroma_format_idc","chroma_format_table","readBool","scaling_list_count","_skipScalingList","pic_order_cnt_type","readSEG","num_ref_frames_in_pic_order_cnt_cycle","pic_width_in_mbs_minus1","pic_height_in_map_units_minus1","frame_mbs_only_flag","frame_crop_left_offset","frame_crop_right_offset","frame_crop_top_offset","frame_crop_bottom_offset","sar_width","sar_height","fps_fixed","aspect_ratio_idc","sar_w_table","sar_h_table","num_units_in_tick","time_scale","sarScale","crop_unit_x","crop_unit_y","sub_wc","sub_hc","codec_width","codec_height","present_width","ceil","getChromaFormatString","count","last_scale","next_scale","delta_scale","toFixed","chroma","createPlayer","optionalConfig","_flvPlayer2","_nativePlayer2","isSupported","_features2","getFeatureList","_features","_loader","_flvPlayer","_nativePlayer","_playerEvents","_playerErrors","BaseLoader","LoaderStatus","LoaderErrors","Events","_playerEvents2","ErrorTypes","ErrorDetails","FlvPlayer","NativePlayer","LoggingControl","defineProperty","enumerable","get","FetchStreamLoader","seekHandler","_possibleConstructorReturn","__proto__","getPrototypeOf","_seekHandler","_needStash","_requestAbort","_contentLength","_receivedLength","isWorkWellEdge","msedge","minor","browserNotBlacklisted","fetch","ReadableStream","_get","_dataSource","_range","sourceURL","seekConfig","Headers","configHeaders","append","params","method","mode","_key","credentials","_status","kConnecting","res","kIdle","ok","status","_onURLRedirect","removeURLParameters","lengthHeader","parseInt","_onContentLengthKnown","_pump","body","getReader","kError","RuntimeException","statusText","HTTP_STATUS_CODE_INVALID","EXCEPTION","reader","read","done","EARLY_EOF","kComplete","_onComplete","from","cancel","kBuffering","_onDataArrival","_speedSampler","_fetchStreamLoader","_xhrMozChunkedLoader","_xhrMsstreamLoader","_xhrRangeLoader","_websocketLoader","_rangeSeekHandler","_paramSeekHandler","IOController","_extraData","_stashInitialSize","_stashUsed","_stashSize","_bufferSize","_stashBuffer","_stashByteStart","_enableStash","_loaderClass","_isWebSocketURL","test","_refTotalLength","_totalLength","_fullRequestFlag","_currentRange","_redirectedURL","_speedNormalized","_speedSampler2","_speedNormalizeList","_isEarlyEofReconnecting","_paused","_resumeFrom","_onSeeked","_onRedirect","_selectSeekHandler","_selectLoader","_createLoader","_rangeSeekHandler2","paramStart","paramEnd","_paramSeekHandler2","_websocketLoader2","_fetchStreamLoader2","_xhrMozChunkedLoader2","_xhrRangeLoader2","needStashBuffer","onContentLengthKnown","onURLRedirect","_onLoaderChunkArrival","_onLoaderComplete","_onLoaderError","to","reset","bytes","_internalSeek","dropUnconsumed","_flushStashBuffer","requestRange","expectedBytes","bufferNewSize","newBuffer","stashOldArray","normalized","stashSizeKB","bufferSize","_expandBuffer","chunks","contentLength","receivedLength","addBytes","KBps","lastSecondKBps","_normalizeSpeed","_adjustStashSize","_stashArray2","_stashArray3","_consumed2","_dispatchChunks","_remainArray","_consumed3","_remain","remain","stashArray","_stashArray","_consumed","remainArray","UNRECOVERABLE_EARLY_EOF","nextFrom","CONNECTING_TIMEOUT","typeName","NotImplementedException","ParamSeekHandler","_startName","_endName","baseUrl","needAnd","seekedURL","baseURL","split","queryIndex","resultParams","pairs","pair","requireAnd","RangeSeekHandler","zeroStart","_zeroStart","SpeedSampler","_firstCheckpoint","_lastCheckpoint","_intervalBytes","_totalBytes","_lastSecondBytes","performance","now","_now","durationSeconds","currentKBps","WebSocketLoader","_ws","WebSocket","ws","binaryType","onopen","_onWebSocketOpen","onclose","_onWebSocketClose","_onWebSocketMessage","onerror","_onWebSocketError","close","_dispatchArrayBuffer","FileReader","onload","readAsArrayBuffer","arraybuffer","MozChunkedLoader","_xhr","xhr","XMLHttpRequest","responseType","onreadystatechange","onprogress","onloadend","_requestURL","_onReadyStateChange","_onProgress","_onLoadEnd","_onXhrError","setRequestHeader","_headers","send","responseURL","total","response","loaded","MSStreamLoader","_reader","_totalRange","_currentRequestURL","_currentRedirectedURL","_bufferLimit","_lastTimeBufferSize","_isReconnecting","MSStream","MSStreamReader","_internalOpen","isSubrange","_msrOnProgress","_msrOnLoad","_msrOnError","_xhrOnReadyStateChange","_xhrOnError","getResponseHeader","msstream","bigbuffer","_doReconnectIfNeeded","RangeLoader","_chunkSizeKBList","_currentChunkSizeKB","_currentSpeedNormalized","_zeroSpeedChunkCount","_waitForTotalLength","_totalLengthReceived","_currentRequestRange","_lastTimeLoaded","useRefTotalLength","_openSubRange","chunkSize","_onLoad","openNextRange","reportComplete","_transmuxer","_mseController","onvLoadedMetadata","_onvLoadedMetadata","onvSeeking","_onvSeeking","onvCanPlay","_onvCanPlay","onvStalled","_onvStalled","onvProgress","_onvProgress","_requestSetTime","_seekpointRecord","_progressChecker","_msectl","_mseSourceOpened","_hasPendingLoad","_receivedCanPlay","_statisticsInfo","chromeNeedIDRFix","chrome","major","build","_alwaysSeekKeyframe","msie","unload","_mseController2","_onmseUpdateEnd","_onmseBufferFull","load","MEDIA_ERROR","MEDIA_MSE_ERROR","attachMediaElement","_transmuxer2","appendMediaSegment","_suspendTransmuxer","NETWORK_ERROR","_fillStatisticsInfo","play","playerType","HTMLVideoElement","hasQualityInfo","decoded","dropped","getVideoPlaybackQuality","quality","totalVideoFrames","droppedVideoFrames","webkitDecodedFrameCount","webkitDroppedFrameCount","decodedFrames","droppedFrames","currentRangeEnd","_checkProgressAndResume","needResume","directSeek","_isTimepointBuffered","directSeekBegin","directSeekBeginTime","videoBeginTime","idr","recordTime","_checkAndApplyUnbufferedSeekpoint","stalled","media","seekPoint","_checkAndResumeStuckPlayback","volume","muted","preload","mediaPrefix","HTMLAudioElement","videoWidth","videoHeight","OTHER_ERROR","NETWORK_EXCEPTION","NETWORK_STATUS_CODE_INVALID","NETWORK_TIMEOUT","NETWORK_UNRECOVERABLE_EARLY_EOF","MEDIA_FORMAT_ERROR","MEDIA_FORMAT_UNSUPPORTED","MEDIA_CODEC_UNSUPPORTED","PlayerEvents","AAC","MP4","types","avc1","avcC","btrt","dinf","dref","esds","ftyp","hdlr","mdat","mdhd","mdia","mfhd","minf","moof","moov","mp4a","mvex","mvhd","sdtp","stbl","stco","stsc","stsd","stsz","stts","tfdt","tfhd","traf","trak","trun","trex","tkhd","vmhd","smhd",".mp3","charCodeAt","constants","FTYP","STSD_PREFIX","STTS","STSC","STCO","STSZ","HDLR_VIDEO","HDLR_AUDIO","DREF","SMHD","VMHD","datas","arrayCount","box","trackId","xmhd","mp3","sampleRate","configSize","baseMediaDecodeTime","sampleCount","flags","isLeading","dependsOn","isDependedOn","hasRedundancy","isNonSync","init","_mp4Generator","_aacSilent","MP4Remuxer","_isLive","_dtsBase","_dtsBaseInited","_audioDtsBase","Infinity","_videoDtsBase","_audioNextDts","_videoNextDts","_audioStashedLastSample","_videoStashedLastSample","_audioMeta","_videoMeta","_audioSegmentInfoList","_videoSegmentInfoList","_forceFirstIDR","_fillSilentAfterSeek","_mp3UseMpegAudio","firefox","_fillAudioTimestampGap","producer","onDataAvailable","remux","onTrackMetadata","_onTrackMetadataReceived","audioTrack","videoTrack","_calculateDtsBase","_remuxVideo","_remuxAudio","metabox","_mp4Generator2","generateInitSegment","videoSample","audioSample","force","dtsCorrection","firstDts","lastDts","mpegRawTrack","firstSegmentAfterSeek","insertPrefixSilentFrame","mdatbox","mdatBytes","pop","sample","firstSampleOriginalDts","isEmpty","_lastSample","getLastSampleBefore","distance","expectedDts","firstSampleDts","videoSegment","silentUnit","_aacSilent2","getSilentFrame","silentFrameDuration","mp4Samples","_sample","sampleDuration","_nextDts","needFillSilentFrames","silentFrames","frameCount","currentDts","round","_silentUnit","intDts","previousFrame","frame","lastFrame","_unit","latest","moofbox","_mergeBoxes","firstPts","lastPts","_lastSample2","_sample2","_nextDts2","syncPoint","appendSyncPoint","_i2","Browser","ua","exec","platform_match","matched","majorVersion","platform","versionArray","string","opr","webkit","rv","iemobile","edge","android","_message","Log","tag","FORCE_GLOBAL_TAG","GLOBAL_TAG","ENABLE_CALLBACK","ENABLE_ERROR","warn","log","ENABLE_INFO","ENABLE_WARN","ENABLE_DEBUG","debug","ENABLE_VERBOSE","globalTag","forceGlobalTag","enableVerbose","enableDebug","enableInfo","enableWarn","enableError","_notifyChange","enable","Polyfill","proto","output","source","checkContinuation","checkLength","decodeUTF8","out","String","fromCharCode","ucs4","_ucs","_ucs2"],"mappings":"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","file":"flv.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   v4.2.8+1e68dce6\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\n\n\nvar _isArray = void 0;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = void 0;\nvar customSchedulerFn = void 0;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var vertx = Function('return this')().require('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = void 0;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n\n  if (_state) {\n    var callback = arguments[_state - 1];\n    asap(function () {\n      return invokeCallback(_state, child, callback, parent._result);\n    });\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(2);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then$$1.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then$$1) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then$$1, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$1) {\n  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$1 === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$1)) {\n      handleForeignThenable(promise, maybeThenable, then$$1);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    var then$$1 = void 0;\n    try {\n      then$$1 = value.then;\n    } catch (error) {\n      reject(promise, error);\n      return;\n    }\n    handleMaybeThenable(promise, value, then$$1);\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = void 0,\n      callback = void 0,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = void 0,\n      error = void 0,\n      succeeded = true;\n\n  if (hasCallback) {\n    try {\n      value = callback(detail);\n    } catch (e) {\n      succeeded = false;\n      error = e;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n    resolve(promise, value);\n  } else if (succeeded === false) {\n    reject(promise, error);\n  } else if (settled === FULFILLED) {\n    fulfill(promise, value);\n  } else if (settled === REJECTED) {\n    reject(promise, value);\n  }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n}\n\nvar Enumerator = function () {\n  function Enumerator(Constructor, input) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop);\n\n    if (!this.promise[PROMISE_ID]) {\n      makePromise(this.promise);\n    }\n\n    if (isArray(input)) {\n      this.length = input.length;\n      this._remaining = input.length;\n\n      this._result = new Array(this.length);\n\n      if (this.length === 0) {\n        fulfill(this.promise, this._result);\n      } else {\n        this.length = this.length || 0;\n        this._enumerate(input);\n        if (this._remaining === 0) {\n          fulfill(this.promise, this._result);\n        }\n      }\n    } else {\n      reject(this.promise, validationError());\n    }\n  }\n\n  Enumerator.prototype._enumerate = function _enumerate(input) {\n    for (var i = 0; this._state === PENDING && i < input.length; i++) {\n      this._eachEntry(input[i], i);\n    }\n  };\n\n  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {\n    var c = this._instanceConstructor;\n    var resolve$$1 = c.resolve;\n\n\n    if (resolve$$1 === resolve$1) {\n      var _then = void 0;\n      var error = void 0;\n      var didError = false;\n      try {\n        _then = entry.then;\n      } catch (e) {\n        didError = true;\n        error = e;\n      }\n\n      if (_then === then && entry._state !== PENDING) {\n        this._settledAt(entry._state, i, entry._result);\n      } else if (typeof _then !== 'function') {\n        this._remaining--;\n        this._result[i] = entry;\n      } else if (c === Promise$1) {\n        var promise = new c(noop);\n        if (didError) {\n          reject(promise, error);\n        } else {\n          handleMaybeThenable(promise, entry, _then);\n        }\n        this._willSettleAt(promise, i);\n      } else {\n        this._willSettleAt(new c(function (resolve$$1) {\n          return resolve$$1(entry);\n        }), i);\n      }\n    } else {\n      this._willSettleAt(resolve$$1(entry), i);\n    }\n  };\n\n  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {\n    var promise = this.promise;\n\n\n    if (promise._state === PENDING) {\n      this._remaining--;\n\n      if (state === REJECTED) {\n        reject(promise, value);\n      } else {\n        this._result[i] = value;\n      }\n    }\n\n    if (this._remaining === 0) {\n      fulfill(promise, this._result);\n    }\n  };\n\n  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {\n    var enumerator = this;\n\n    subscribe(promise, undefined, function (value) {\n      return enumerator._settledAt(FULFILLED, i, value);\n    }, function (reason) {\n      return enumerator._settledAt(REJECTED, i, reason);\n    });\n  };\n\n  return Enumerator;\n}();\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {Function} resolver\n  Useful for tooling.\n  @constructor\n*/\n\nvar Promise$1 = function () {\n  function Promise(resolver) {\n    this[PROMISE_ID] = nextId();\n    this._result = this._state = undefined;\n    this._subscribers = [];\n\n    if (noop !== resolver) {\n      typeof resolver !== 'function' && needsResolver();\n      this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n    }\n  }\n\n  /**\n  The primary way of interacting with a promise is through its `then` method,\n  which registers callbacks to receive either a promise's eventual value or the\n  reason why the promise cannot be fulfilled.\n   ```js\n  findUser().then(function(user){\n    // user is available\n  }, function(reason){\n    // user is unavailable, and you are given the reason why\n  });\n  ```\n   Chaining\n  --------\n   The return value of `then` is itself a promise.  This second, 'downstream'\n  promise is resolved with the return value of the first promise's fulfillment\n  or rejection handler, or rejected if the handler throws an exception.\n   ```js\n  findUser().then(function (user) {\n    return user.name;\n  }, function (reason) {\n    return 'default name';\n  }).then(function (userName) {\n    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n    // will be `'default name'`\n  });\n   findUser().then(function (user) {\n    throw new Error('Found user, but still unhappy');\n  }, function (reason) {\n    throw new Error('`findUser` rejected and we're unhappy');\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n  });\n  ```\n  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n   ```js\n  findUser().then(function (user) {\n    throw new PedagogicalException('Upstream error');\n  }).then(function (value) {\n    // never reached\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // The `PedgagocialException` is propagated all the way down to here\n  });\n  ```\n   Assimilation\n  ------------\n   Sometimes the value you want to propagate to a downstream promise can only be\n  retrieved asynchronously. This can be achieved by returning a promise in the\n  fulfillment or rejection handler. The downstream promise will then be pending\n  until the returned promise is settled. This is called *assimilation*.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // The user's comments are now available\n  });\n  ```\n   If the assimliated promise rejects, then the downstream promise will also reject.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // If `findCommentsByAuthor` fulfills, we'll have the value here\n  }, function (reason) {\n    // If `findCommentsByAuthor` rejects, we'll have the reason here\n  });\n  ```\n   Simple Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let result;\n   try {\n    result = findResult();\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n  findResult(function(result, err){\n    if (err) {\n      // failure\n    } else {\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findResult().then(function(result){\n    // success\n  }, function(reason){\n    // failure\n  });\n  ```\n   Advanced Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let author, books;\n   try {\n    author = findAuthor();\n    books  = findBooksByAuthor(author);\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n   function foundBooks(books) {\n   }\n   function failure(reason) {\n   }\n   findAuthor(function(author, err){\n    if (err) {\n      failure(err);\n      // failure\n    } else {\n      try {\n        findBoooksByAuthor(author, function(books, err) {\n          if (err) {\n            failure(err);\n          } else {\n            try {\n              foundBooks(books);\n            } catch(reason) {\n              failure(reason);\n            }\n          }\n        });\n      } catch(error) {\n        failure(err);\n      }\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findAuthor().\n    then(findBooksByAuthor).\n    then(function(books){\n      // found books\n  }).catch(function(reason){\n    // something went wrong\n  });\n  ```\n   @method then\n  @param {Function} onFulfilled\n  @param {Function} onRejected\n  Useful for tooling.\n  @return {Promise}\n  */\n\n  /**\n  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n  as the catch block of a try/catch statement.\n  ```js\n  function findAuthor(){\n  throw new Error('couldn't find that author');\n  }\n  // synchronous\n  try {\n  findAuthor();\n  } catch(reason) {\n  // something went wrong\n  }\n  // async with promises\n  findAuthor().catch(function(reason){\n  // something went wrong\n  });\n  ```\n  @method catch\n  @param {Function} onRejection\n  Useful for tooling.\n  @return {Promise}\n  */\n\n\n  Promise.prototype.catch = function _catch(onRejection) {\n    return this.then(null, onRejection);\n  };\n\n  /**\n    `finally` will be invoked regardless of the promise's fate just as native\n    try/catch/finally behaves\n  \n    Synchronous example:\n  \n    ```js\n    findAuthor() {\n      if (Math.random() > 0.5) {\n        throw new Error();\n      }\n      return new Author();\n    }\n  \n    try {\n      return findAuthor(); // succeed or fail\n    } catch(error) {\n      return findOtherAuther();\n    } finally {\n      // always runs\n      // doesn't affect the return value\n    }\n    ```\n  \n    Asynchronous example:\n  \n    ```js\n    findAuthor().catch(function(reason){\n      return findOtherAuther();\n    }).finally(function(){\n      // author was either found, or not\n    });\n    ```\n  \n    @method finally\n    @param {Function} callback\n    @return {Promise}\n  */\n\n\n  Promise.prototype.finally = function _finally(callback) {\n    var promise = this;\n    var constructor = promise.constructor;\n\n    if (isFunction(callback)) {\n      return promise.then(function (value) {\n        return constructor.resolve(callback()).then(function () {\n          return value;\n        });\n      }, function (reason) {\n        return constructor.resolve(callback()).then(function () {\n          throw reason;\n        });\n      });\n    }\n\n    return promise.then(callback, callback);\n  };\n\n  return Promise;\n}();\n\nPromise$1.prototype.then = then;\nPromise$1.all = all;\nPromise$1.race = race;\nPromise$1.resolve = resolve$1;\nPromise$1.reject = reject$1;\nPromise$1._setScheduler = setScheduler;\nPromise$1._setAsap = setAsap;\nPromise$1._asap = asap;\n\n/*global self*/\nfunction polyfill() {\n  var local = void 0;\n\n  if (typeof global !== 'undefined') {\n    local = global;\n  } else if (typeof self !== 'undefined') {\n    local = self;\n  } else {\n    try {\n      local = Function('return this')();\n    } catch (e) {\n      throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n  }\n\n  var P = local.Promise;\n\n  if (P) {\n    var promiseToString = null;\n    try {\n      promiseToString = Object.prototype.toString.call(P.resolve());\n    } catch (e) {\n      // silently ignored\n    }\n\n    if (promiseToString === '[object Promise]' && !P.cast) {\n      return;\n    }\n  }\n\n  local.Promise = Promise$1;\n}\n\n// Strange compat..\nPromise$1.polyfill = polyfill;\nPromise$1.Promise = Promise$1;\n\nreturn Promise$1;\n\n})));\n\n\n\n//# sourceMappingURL=es6-promise.map\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var bundleFn = arguments[3];\nvar sources = arguments[4];\nvar cache = arguments[5];\n\nvar stringify = JSON.stringify;\n\nmodule.exports = function (fn, options) {\n    var wkey;\n    var cacheKeys = Object.keys(cache);\n\n    for (var i = 0, l = cacheKeys.length; i < l; i++) {\n        var key = cacheKeys[i];\n        var exp = cache[key].exports;\n        // Using babel as a transpiler to use esmodule, the export will always\n        // be an object with the default export as a property of it. To ensure\n        // the existing api and babel esmodule exports are both supported we\n        // check for both\n        if (exp === fn || exp && exp.default === fn) {\n            wkey = key;\n            break;\n        }\n    }\n\n    if (!wkey) {\n        wkey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n        var wcache = {};\n        for (var i = 0, l = cacheKeys.length; i < l; i++) {\n            var key = cacheKeys[i];\n            wcache[key] = key;\n        }\n        sources[wkey] = [\n            'function(require,module,exports){' + fn + '(self); }',\n            wcache\n        ];\n    }\n    var skey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n\n    var scache = {}; scache[wkey] = wkey;\n    sources[skey] = [\n        'function(require,module,exports){' +\n            // try to call default if defined to also support babel esmodule exports\n            'var f = require(' + stringify(wkey) + ');' +\n            '(f.default ? f.default : f)(self);' +\n        '}',\n        scache\n    ];\n\n    var workerSources = {};\n    resolveSources(skey);\n\n    function resolveSources(key) {\n        workerSources[key] = true;\n\n        for (var depPath in sources[key][1]) {\n            var depKey = sources[key][1][depPath];\n            if (!workerSources[depKey]) {\n                resolveSources(depKey);\n            }\n        }\n    }\n\n    var src = '(' + bundleFn + ')({'\n        + Object.keys(workerSources).map(function (key) {\n            return stringify(key) + ':['\n                + sources[key][0]\n                + ',' + stringify(sources[key][1]) + ']'\n            ;\n        }).join(',')\n        + '},{},[' + stringify(skey) + '])'\n    ;\n\n    var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n\n    var blob = new Blob([src], { type: 'text/javascript' });\n    if (options && options.bare) { return blob; }\n    var workerUrl = URL.createObjectURL(blob);\n    var worker = new Worker(workerUrl);\n    worker.objectURL = workerUrl;\n    return worker;\n};\n","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport const defaultConfig = {\r\n    enableWorker: false,\r\n    enableStashBuffer: true,\r\n    stashInitialSize: undefined,\r\n\r\n    isLive: false,\r\n\r\n    lazyLoad: true,\r\n    lazyLoadMaxDuration: 3 * 60,\r\n    lazyLoadRecoverDuration: 30,\r\n    deferLoadAfterSourceOpen: true,\r\n\r\n    // autoCleanupSourceBuffer: default as false, leave unspecified\r\n    autoCleanupMaxBackwardDuration: 3 * 60,\r\n    autoCleanupMinBackwardDuration: 2 * 60,\r\n\r\n    statisticsInfoReportInterval: 600,\r\n\r\n    fixAudioTimestampGap: true,\r\n\r\n    accurateSeek: false,\r\n    seekType: 'range',  // [range, param, custom]\r\n    seekParamStart: 'bstart',\r\n    seekParamEnd: 'bend',\r\n    rangeLoadZeroStart: false,\r\n    customSeekHandler: undefined,\r\n    reuseRedirectedURL: false,\r\n    // referrerPolicy: leave as unspecified\r\n\r\n    headers: undefined,\r\n    customLoader: undefined\r\n};\r\n\r\nexport function createDefaultConfig() {\r\n    return Object.assign({}, defaultConfig);\r\n}","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport IOController from '../io/io-controller.js';\r\nimport {createDefaultConfig} from '../config.js';\r\n\r\nclass Features {\r\n\r\n    static supportMSEH264Playback() {\r\n        return window.MediaSource &&\r\n               window.MediaSource.isTypeSupported('video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"');\r\n    }\r\n\r\n    static supportNetworkStreamIO() {\r\n        let ioctl = new IOController({}, createDefaultConfig());\r\n        let loaderType = ioctl.loaderType;\r\n        ioctl.destroy();\r\n        return loaderType == 'fetch-stream-loader' || loaderType == 'xhr-moz-chunked-loader';\r\n    }\r\n\r\n    static getNetworkLoaderTypeName() {\r\n        let ioctl = new IOController({}, createDefaultConfig());\r\n        let loaderType = ioctl.loaderType;\r\n        ioctl.destroy();\r\n        return loaderType;\r\n    }\r\n\r\n    static supportNativeMediaPlayback(mimeType) {\r\n        if (Features.videoElement == undefined) {\r\n            Features.videoElement = window.document.createElement('video');\r\n        }\r\n        let canPlay = Features.videoElement.canPlayType(mimeType);\r\n        return canPlay === 'probably' || canPlay == 'maybe';\r\n    }\r\n\r\n    static getFeatureList() {\r\n        let features = {\r\n            mseFlvPlayback: false,\r\n            mseLiveFlvPlayback: false,\r\n            networkStreamIO: false,\r\n            networkLoaderName: '',\r\n            nativeMP4H264Playback: false,\r\n            nativeWebmVP8Playback: false,\r\n            nativeWebmVP9Playback: false\r\n        };\r\n\r\n        features.mseFlvPlayback = Features.supportMSEH264Playback();\r\n        features.networkStreamIO = Features.supportNetworkStreamIO();\r\n        features.networkLoaderName = Features.getNetworkLoaderTypeName();\r\n        features.mseLiveFlvPlayback = features.mseFlvPlayback && features.networkStreamIO;\r\n        features.nativeMP4H264Playback = Features.supportNativeMediaPlayback('video/mp4; codecs=\"avc1.42001E, mp4a.40.2\"');\r\n        features.nativeWebmVP8Playback = Features.supportNativeMediaPlayback('video/webm; codecs=\"vp8.0, vorbis\"');\r\n        features.nativeWebmVP9Playback = Features.supportNativeMediaPlayback('video/webm; codecs=\"vp9\"');\r\n\r\n        return features;\r\n    }\r\n\r\n}\r\n\r\nexport default Features;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nclass MediaInfo {\r\n\r\n    constructor() {\r\n        this.mimeType = null;\r\n        this.duration = null;\r\n\r\n        this.hasAudio = null;\r\n        this.hasVideo = null;\r\n        this.audioCodec = null;\r\n        this.videoCodec = null;\r\n        this.audioDataRate = null;\r\n        this.videoDataRate = null;\r\n\r\n        this.audioSampleRate = null;\r\n        this.audioChannelCount = null;\r\n\r\n        this.width = null;\r\n        this.height = null;\r\n        this.fps = null;\r\n        this.profile = null;\r\n        this.level = null;\r\n        this.refFrames = null;\r\n        this.chromaFormat = null;\r\n        this.sarNum = null;\r\n        this.sarDen = null;\r\n\r\n        this.metadata = null;\r\n        this.segments = null;  // MediaInfo[]\r\n        this.segmentCount = null;\r\n        this.hasKeyframesIndex = null;\r\n        this.keyframesIndex = null;\r\n    }\r\n\r\n    isComplete() {\r\n        let audioInfoComplete = (this.hasAudio === false) ||\r\n                                (this.hasAudio === true &&\r\n                                 this.audioCodec != null &&\r\n                                 this.audioSampleRate != null &&\r\n                                 this.audioChannelCount != null);\r\n\r\n        let videoInfoComplete = (this.hasVideo === false) ||\r\n                                (this.hasVideo === true &&\r\n                                 this.videoCodec != null &&\r\n                                 this.width != null &&\r\n                                 this.height != null &&\r\n                                 this.fps != null &&\r\n                                 this.profile != null &&\r\n                                 this.level != null &&\r\n                                 this.refFrames != null &&\r\n                                 this.chromaFormat != null &&\r\n                                 this.sarNum != null &&\r\n                                 this.sarDen != null);\r\n\r\n        // keyframesIndex may not be present\r\n        return this.mimeType != null &&\r\n               this.duration != null &&\r\n               this.metadata != null &&\r\n               this.hasKeyframesIndex != null &&\r\n               audioInfoComplete &&\r\n               videoInfoComplete;\r\n    }\r\n\r\n    isSeekable() {\r\n        return this.hasKeyframesIndex === true;\r\n    }\r\n\r\n    getNearestKeyframe(milliseconds) {\r\n        if (this.keyframesIndex == null) {\r\n            return null;\r\n        }\r\n\r\n        let table = this.keyframesIndex;\r\n        let keyframeIdx = this._search(table.times, milliseconds);\r\n\r\n        return {\r\n            index: keyframeIdx,\r\n            milliseconds: table.times[keyframeIdx],\r\n            fileposition: table.filepositions[keyframeIdx]\r\n        };\r\n    }\r\n\r\n    _search(list, value) {\r\n        let idx = 0;\r\n\r\n        let last = list.length - 1;\r\n        let mid = 0;\r\n        let lbound = 0;\r\n        let ubound = last;\r\n\r\n        if (value < list[0]) {\r\n            idx = 0;\r\n            lbound = ubound + 1;  // skip search\r\n        }\r\n\r\n        while (lbound <= ubound) {\r\n            mid = lbound + Math.floor((ubound - lbound) / 2);\r\n            if (mid === last || (value >= list[mid] && value < list[mid + 1])) {\r\n                idx = mid;\r\n                break;\r\n            } else if (list[mid] < value) {\r\n                lbound = mid + 1;\r\n            } else {\r\n                ubound = mid - 1;\r\n            }\r\n        }\r\n\r\n        return idx;\r\n    }\r\n\r\n}\r\n\r\nexport default MediaInfo;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n// Represents an media sample (audio / video)\r\nexport class SampleInfo {\r\n\r\n    constructor(dts, pts, duration, originalDts, isSync) {\r\n        this.dts = dts;\r\n        this.pts = pts;\r\n        this.duration = duration;\r\n        this.originalDts = originalDts;\r\n        this.isSyncPoint = isSync;\r\n        this.fileposition = null;\r\n    }\r\n\r\n}\r\n\r\n// Media Segment concept is defined in Media Source Extensions spec.\r\n// Particularly in ISO BMFF format, an Media Segment contains a moof box followed by a mdat box.\r\nexport class MediaSegmentInfo {\r\n\r\n    constructor() {\r\n        this.beginDts = 0;\r\n        this.endDts = 0;\r\n        this.beginPts = 0;\r\n        this.endPts = 0;\r\n        this.originalBeginDts = 0;\r\n        this.originalEndDts = 0;\r\n        this.syncPoints = [];     // SampleInfo[n], for video IDR frames only\r\n        this.firstSample = null;  // SampleInfo\r\n        this.lastSample = null;   // SampleInfo\r\n    }\r\n\r\n    appendSyncPoint(sampleInfo) {  // also called Random Access Point\r\n        sampleInfo.isSyncPoint = true;\r\n        this.syncPoints.push(sampleInfo);\r\n    }\r\n\r\n}\r\n\r\n// Ordered list for recording video IDR frames, sorted by originalDts\r\nexport class IDRSampleList {\r\n\r\n    constructor() {\r\n        this._list = [];\r\n    }\r\n\r\n    clear() {\r\n        this._list = [];\r\n    }\r\n\r\n    appendArray(syncPoints) {\r\n        let list = this._list;\r\n\r\n        if (syncPoints.length === 0) {\r\n            return;\r\n        }\r\n\r\n        if (list.length > 0 && syncPoints[0].originalDts < list[list.length - 1].originalDts) {\r\n            this.clear();\r\n        }\r\n\r\n        Array.prototype.push.apply(list, syncPoints);\r\n    }\r\n\r\n    getLastSyncPointBeforeDts(dts) {\r\n        if (this._list.length == 0) {\r\n            return null;\r\n        }\r\n\r\n        let list = this._list;\r\n        let idx = 0;\r\n        let last = list.length - 1;\r\n        let mid = 0;\r\n        let lbound = 0;\r\n        let ubound = last;\r\n\r\n        if (dts < list[0].dts) {\r\n            idx = 0;\r\n            lbound = ubound + 1;\r\n        }\r\n\r\n        while (lbound <= ubound) {\r\n            mid = lbound + Math.floor((ubound - lbound) / 2);\r\n            if (mid === last || (dts >= list[mid].dts && dts < list[mid + 1].dts)) {\r\n                idx = mid;\r\n                break;\r\n            } else if (list[mid].dts < dts) {\r\n                lbound = mid + 1;\r\n            } else {\r\n                ubound = mid - 1;\r\n            }\r\n        }\r\n        return this._list[idx];\r\n    }\r\n\r\n}\r\n\r\n// Data structure for recording information of media segments in single track.\r\nexport class MediaSegmentInfoList {\r\n\r\n    constructor(type) {\r\n        this._type = type;\r\n        this._list = [];\r\n        this._lastAppendLocation = -1;  // cached last insert location\r\n    }\r\n\r\n    get type() {\r\n        return this._type;\r\n    }\r\n\r\n    get length() {\r\n        return this._list.length;\r\n    }\r\n\r\n    isEmpty() {\r\n        return this._list.length === 0;\r\n    }\r\n\r\n    clear() {\r\n        this._list = [];\r\n        this._lastAppendLocation = -1;\r\n    }\r\n\r\n    _searchNearestSegmentBefore(originalBeginDts) {\r\n        let list = this._list;\r\n        if (list.length === 0) {\r\n            return -2;\r\n        }\r\n        let last = list.length - 1;\r\n        let mid = 0;\r\n        let lbound = 0;\r\n        let ubound = last;\r\n\r\n        let idx = 0;\r\n\r\n        if (originalBeginDts < list[0].originalBeginDts) {\r\n            idx = -1;\r\n            return idx;\r\n        }\r\n\r\n        while (lbound <= ubound) {\r\n            mid = lbound + Math.floor((ubound - lbound) / 2);\r\n            if (mid === last || (originalBeginDts > list[mid].lastSample.originalDts &&\r\n                                (originalBeginDts < list[mid + 1].originalBeginDts))) {\r\n                idx = mid;\r\n                break;\r\n            } else if (list[mid].originalBeginDts < originalBeginDts) {\r\n                lbound = mid + 1;\r\n            } else {\r\n                ubound = mid - 1;\r\n            }\r\n        }\r\n        return idx;\r\n    }\r\n\r\n    _searchNearestSegmentAfter(originalBeginDts) {\r\n        return this._searchNearestSegmentBefore(originalBeginDts) + 1;\r\n    }\r\n\r\n    append(mediaSegmentInfo) {\r\n        let list = this._list;\r\n        let msi = mediaSegmentInfo;\r\n        let lastAppendIdx = this._lastAppendLocation;\r\n        let insertIdx = 0;\r\n\r\n        if (lastAppendIdx !== -1 && lastAppendIdx < list.length &&\r\n                                    msi.originalBeginDts >= list[lastAppendIdx].lastSample.originalDts &&\r\n                                    ((lastAppendIdx === list.length - 1) ||\r\n                                    (lastAppendIdx < list.length - 1 &&\r\n                                    msi.originalBeginDts < list[lastAppendIdx + 1].originalBeginDts))) {\r\n            insertIdx = lastAppendIdx + 1;  // use cached location idx\r\n        } else {\r\n            if (list.length > 0) {\r\n                insertIdx = this._searchNearestSegmentBefore(msi.originalBeginDts) + 1;\r\n            }\r\n        }\r\n\r\n        this._lastAppendLocation = insertIdx;\r\n        this._list.splice(insertIdx, 0, msi);\r\n    }\r\n\r\n    getLastSegmentBefore(originalBeginDts) {\r\n        let idx = this._searchNearestSegmentBefore(originalBeginDts);\r\n        if (idx >= 0) {\r\n            return this._list[idx];\r\n        } else {  // -1\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getLastSampleBefore(originalBeginDts) {\r\n        let segment = this.getLastSegmentBefore(originalBeginDts);\r\n        if (segment != null) {\r\n            return segment.lastSample;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getLastSyncPointBefore(originalBeginDts) {\r\n        let segmentIdx = this._searchNearestSegmentBefore(originalBeginDts);\r\n        let syncPoints = this._list[segmentIdx].syncPoints;\r\n        while (syncPoints.length === 0 && segmentIdx > 0) {\r\n            segmentIdx--;\r\n            syncPoints = this._list[segmentIdx].syncPoints;\r\n        }\r\n        if (syncPoints.length > 0) {\r\n            return syncPoints[syncPoints.length - 1];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport EventEmitter from 'events';\r\nimport Log from '../utils/logger.js';\r\nimport Browser from '../utils/browser.js';\r\nimport MSEEvents from './mse-events.js';\r\nimport {SampleInfo, IDRSampleList} from './media-segment-info.js';\r\nimport {IllegalStateException} from '../utils/exception.js';\r\n\r\n// Media Source Extensions controller\r\nclass MSEController {\r\n\r\n    constructor(config) {\r\n        this.TAG = 'MSEController';\r\n\r\n        this._config = config;\r\n        this._emitter = new EventEmitter();\r\n\r\n        if (this._config.isLive && this._config.autoCleanupSourceBuffer == undefined) {\r\n            // For live stream, do auto cleanup by default\r\n            this._config.autoCleanupSourceBuffer = true;\r\n        }\r\n\r\n        this.e = {\r\n            onSourceOpen: this._onSourceOpen.bind(this),\r\n            onSourceEnded: this._onSourceEnded.bind(this),\r\n            onSourceClose: this._onSourceClose.bind(this),\r\n            onSourceBufferError: this._onSourceBufferError.bind(this),\r\n            onSourceBufferUpdateEnd: this._onSourceBufferUpdateEnd.bind(this)\r\n        };\r\n\r\n        this._mediaSource = null;\r\n        this._mediaSourceObjectURL = null;\r\n        this._mediaElement = null;\r\n\r\n        this._isBufferFull = false;\r\n        this._hasPendingEos = false;\r\n\r\n        this._requireSetMediaDuration = false;\r\n        this._pendingMediaDuration = 0;\r\n\r\n        this._pendingSourceBufferInit = [];\r\n        this._mimeTypes = {\r\n            video: null,\r\n            audio: null\r\n        };\r\n        this._sourceBuffers = {\r\n            video: null,\r\n            audio: null\r\n        };\r\n        this._lastInitSegments = {\r\n            video: null,\r\n            audio: null\r\n        };\r\n        this._pendingSegments = {\r\n            video: [],\r\n            audio: []\r\n        };\r\n        this._pendingRemoveRanges = {\r\n            video: [],\r\n            audio: []\r\n        };\r\n        this._idrList = new IDRSampleList();\r\n    }\r\n\r\n    destroy() {\r\n        if (this._mediaElement || this._mediaSource) {\r\n            this.detachMediaElement();\r\n        }\r\n        this.e = null;\r\n        this._emitter.removeAllListeners();\r\n        this._emitter = null;\r\n    }\r\n\r\n    on(event, listener) {\r\n        this._emitter.addListener(event, listener);\r\n    }\r\n\r\n    off(event, listener) {\r\n        this._emitter.removeListener(event, listener);\r\n    }\r\n\r\n    attachMediaElement(mediaElement) {\r\n        if (this._mediaSource) {\r\n            throw new IllegalStateException('MediaSource has been attached to an HTMLMediaElement!');\r\n        }\r\n        let ms = this._mediaSource = new window.MediaSource();\r\n        ms.addEventListener('sourceopen', this.e.onSourceOpen);\r\n        ms.addEventListener('sourceended', this.e.onSourceEnded);\r\n        ms.addEventListener('sourceclose', this.e.onSourceClose);\r\n\r\n        this._mediaElement = mediaElement;\r\n        this._mediaSourceObjectURL = window.URL.createObjectURL(this._mediaSource);\r\n        mediaElement.src = this._mediaSourceObjectURL;\r\n    }\r\n\r\n    detachMediaElement() {\r\n        if (this._mediaSource) {\r\n            let ms = this._mediaSource;\r\n            for (let type in this._sourceBuffers) {\r\n                // pending segments should be discard\r\n                let ps = this._pendingSegments[type];\r\n                ps.splice(0, ps.length);\r\n                this._pendingSegments[type] = null;\r\n                this._pendingRemoveRanges[type] = null;\r\n                this._lastInitSegments[type] = null;\r\n\r\n                // remove all sourcebuffers\r\n                let sb = this._sourceBuffers[type];\r\n                if (sb) {\r\n                    if (ms.readyState !== 'closed') {\r\n                        // ms edge can throw an error: Unexpected call to method or property access\r\n                        try {\r\n                            ms.removeSourceBuffer(sb);\r\n                        } catch (error) {\r\n                            Log.e(this.TAG, error.message);\r\n                        }\r\n                        sb.removeEventListener('error', this.e.onSourceBufferError);\r\n                        sb.removeEventListener('updateend', this.e.onSourceBufferUpdateEnd);\r\n                    }\r\n                    this._mimeTypes[type] = null;\r\n                    this._sourceBuffers[type] = null;\r\n                }\r\n            }\r\n            if (ms.readyState === 'open') {\r\n                try {\r\n                    ms.endOfStream();\r\n                } catch (error) {\r\n                    Log.e(this.TAG, error.message);\r\n                }\r\n            }\r\n            ms.removeEventListener('sourceopen', this.e.onSourceOpen);\r\n            ms.removeEventListener('sourceended', this.e.onSourceEnded);\r\n            ms.removeEventListener('sourceclose', this.e.onSourceClose);\r\n            this._pendingSourceBufferInit = [];\r\n            this._isBufferFull = false;\r\n            this._idrList.clear();\r\n            this._mediaSource = null;\r\n        }\r\n\r\n        if (this._mediaElement) {\r\n            this._mediaElement.src = '';\r\n            this._mediaElement.removeAttribute('src');\r\n            this._mediaElement = null;\r\n        }\r\n        if (this._mediaSourceObjectURL) {\r\n            window.URL.revokeObjectURL(this._mediaSourceObjectURL);\r\n            this._mediaSourceObjectURL = null;\r\n        }\r\n    }\r\n\r\n    appendInitSegment(initSegment, deferred) {\r\n        if (!this._mediaSource || this._mediaSource.readyState !== 'open') {\r\n            // sourcebuffer creation requires mediaSource.readyState === 'open'\r\n            // so we defer the sourcebuffer creation, until sourceopen event triggered\r\n            this._pendingSourceBufferInit.push(initSegment);\r\n            // make sure that this InitSegment is in the front of pending segments queue\r\n            this._pendingSegments[initSegment.type].push(initSegment);\r\n            return;\r\n        }\r\n\r\n        let is = initSegment;\r\n        let mimeType = `${is.container}`;\r\n        if (is.codec && is.codec.length > 0) {\r\n            mimeType += `;codecs=${is.codec}`;\r\n        }\r\n\r\n        let firstInitSegment = false;\r\n\r\n        Log.v(this.TAG, 'Received Initialization Segment, mimeType: ' + mimeType);\r\n        this._lastInitSegments[is.type] = is;\r\n\r\n        if (mimeType !== this._mimeTypes[is.type]) {\r\n            if (!this._mimeTypes[is.type]) {  // empty, first chance create sourcebuffer\r\n                firstInitSegment = true;\r\n                try {\r\n                    let sb = this._sourceBuffers[is.type] = this._mediaSource.addSourceBuffer(mimeType);\r\n                    sb.addEventListener('error', this.e.onSourceBufferError);\r\n                    sb.addEventListener('updateend', this.e.onSourceBufferUpdateEnd);\r\n                } catch (error) {\r\n                    Log.e(this.TAG, error.message);\r\n                    this._emitter.emit(MSEEvents.ERROR, {code: error.code, msg: error.message});\r\n                    return;\r\n                }\r\n            } else {\r\n                Log.v(this.TAG, `Notice: ${is.type} mimeType changed, origin: ${this._mimeTypes[is.type]}, target: ${mimeType}`);\r\n            }\r\n            this._mimeTypes[is.type] = mimeType;\r\n        }\r\n\r\n        if (!deferred) {\r\n            // deferred means this InitSegment has been pushed to pendingSegments queue\r\n            this._pendingSegments[is.type].push(is);\r\n        }\r\n        if (!firstInitSegment) {  // append immediately only if init segment in subsequence\r\n            if (this._sourceBuffers[is.type] && !this._sourceBuffers[is.type].updating) {\r\n                this._doAppendSegments();\r\n            }\r\n        }\r\n        if (Browser.safari && is.container === 'audio/mpeg' && is.mediaDuration > 0) {\r\n            // 'audio/mpeg' track under Safari may cause MediaElement's duration to be NaN\r\n            // Manually correct MediaSource.duration to make progress bar seekable, and report right duration\r\n            this._requireSetMediaDuration = true;\r\n            this._pendingMediaDuration = is.mediaDuration / 1000;  // in seconds\r\n            this._updateMediaSourceDuration();\r\n        }\r\n    }\r\n\r\n    appendMediaSegment(mediaSegment) {\r\n        let ms = mediaSegment;\r\n        this._pendingSegments[ms.type].push(ms);\r\n\r\n        if (this._config.autoCleanupSourceBuffer && this._needCleanupSourceBuffer()) {\r\n            this._doCleanupSourceBuffer();\r\n        }\r\n\r\n        let sb = this._sourceBuffers[ms.type];\r\n        if (sb && !sb.updating && !this._hasPendingRemoveRanges()) {\r\n            this._doAppendSegments();\r\n        }\r\n    }\r\n\r\n    seek(seconds) {\r\n        // remove all appended buffers\r\n        for (let type in this._sourceBuffers) {\r\n            if (!this._sourceBuffers[type]) {\r\n                continue;\r\n            }\r\n\r\n            // abort current buffer append algorithm\r\n            let sb = this._sourceBuffers[type];\r\n            if (this._mediaSource.readyState === 'open') {\r\n                try {\r\n                    // If range removal algorithm is running, InvalidStateError will be throwed\r\n                    // Ignore it.\r\n                    sb.abort();\r\n                } catch (error) {\r\n                    Log.e(this.TAG, error.message);\r\n                }\r\n            }\r\n\r\n            // IDRList should be clear\r\n            this._idrList.clear();\r\n\r\n            // pending segments should be discard\r\n            let ps = this._pendingSegments[type];\r\n            ps.splice(0, ps.length);\r\n\r\n            if (this._mediaSource.readyState === 'closed') {\r\n                // Parent MediaSource object has been detached from HTMLMediaElement\r\n                continue;\r\n            }\r\n\r\n            // record ranges to be remove from SourceBuffer\r\n            for (let i = 0; i < sb.buffered.length; i++) {\r\n                let start = sb.buffered.start(i);\r\n                let end = sb.buffered.end(i);\r\n                this._pendingRemoveRanges[type].push({start, end});\r\n            }\r\n\r\n            // if sb is not updating, let's remove ranges now!\r\n            if (!sb.updating) {\r\n                this._doRemoveRanges();\r\n            }\r\n\r\n            // Safari 10 may get InvalidStateError in the later appendBuffer() after SourceBuffer.remove() call\r\n            // Internal parser's state may be invalid at this time. Re-append last InitSegment to workaround.\r\n            // Related issue: https://bugs.webkit.org/show_bug.cgi?id=159230\r\n            if (Browser.safari) {\r\n                let lastInitSegment = this._lastInitSegments[type];\r\n                if (lastInitSegment) {\r\n                    this._pendingSegments[type].push(lastInitSegment);\r\n                    if (!sb.updating) {\r\n                        this._doAppendSegments();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    endOfStream() {\r\n        let ms = this._mediaSource;\r\n        let sb = this._sourceBuffers;\r\n        if (!ms || ms.readyState !== 'open') {\r\n            if (ms && ms.readyState === 'closed' && this._hasPendingSegments()) {\r\n                // If MediaSource hasn't turned into open state, and there're pending segments\r\n                // Mark pending endOfStream, defer call until all pending segments appended complete\r\n                this._hasPendingEos = true;\r\n            }\r\n            return;\r\n        }\r\n        if (sb.video && sb.video.updating || sb.audio && sb.audio.updating) {\r\n            // If any sourcebuffer is updating, defer endOfStream operation\r\n            // See _onSourceBufferUpdateEnd()\r\n            this._hasPendingEos = true;\r\n        } else {\r\n            this._hasPendingEos = false;\r\n            // Notify media data loading complete\r\n            // This is helpful for correcting total duration to match last media segment\r\n            // Otherwise MediaElement's ended event may not be triggered\r\n            ms.endOfStream();\r\n        }\r\n    }\r\n\r\n    getNearestKeyframe(dts) {\r\n        return this._idrList.getLastSyncPointBeforeDts(dts);\r\n    }\r\n\r\n    _needCleanupSourceBuffer() {\r\n        if (!this._config.autoCleanupSourceBuffer) {\r\n            return false;\r\n        }\r\n\r\n        let currentTime = this._mediaElement.currentTime;\r\n\r\n        for (let type in this._sourceBuffers) {\r\n            let sb = this._sourceBuffers[type];\r\n            if (sb) {\r\n                let buffered = sb.buffered;\r\n                if (buffered.length >= 1) {\r\n                    if (currentTime - buffered.start(0) >= this._config.autoCleanupMaxBackwardDuration) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    _doCleanupSourceBuffer() {\r\n        let currentTime = this._mediaElement.currentTime;\r\n\r\n        for (let type in this._sourceBuffers) {\r\n            let sb = this._sourceBuffers[type];\r\n            if (sb) {\r\n                let buffered = sb.buffered;\r\n                let doRemove = false;\r\n\r\n                for (let i = 0; i < buffered.length; i++) {\r\n                    let start = buffered.start(i);\r\n                    let end = buffered.end(i);\r\n\r\n                    if (start <= currentTime && currentTime < end + 3) {  // padding 3 seconds\r\n                        if (currentTime - start >= this._config.autoCleanupMaxBackwardDuration) {\r\n                            doRemove = true;\r\n                            let removeEnd = currentTime - this._config.autoCleanupMinBackwardDuration;\r\n                            this._pendingRemoveRanges[type].push({start: start, end: removeEnd});\r\n                        }\r\n                    } else if (end < currentTime) {\r\n                        doRemove = true;\r\n                        this._pendingRemoveRanges[type].push({start: start, end: end});\r\n                    }\r\n                }\r\n\r\n                if (doRemove && !sb.updating) {\r\n                    this._doRemoveRanges();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _updateMediaSourceDuration() {\r\n        let sb = this._sourceBuffers;\r\n        if (this._mediaElement.readyState === 0 || this._mediaSource.readyState !== 'open') {\r\n            return;\r\n        }\r\n        if ((sb.video && sb.video.updating) || (sb.audio && sb.audio.updating)) {\r\n            return;\r\n        }\r\n\r\n        let current = this._mediaSource.duration;\r\n        let target = this._pendingMediaDuration;\r\n\r\n        if (target > 0 && (isNaN(current) || target > current)) {\r\n            Log.v(this.TAG, `Update MediaSource duration from ${current} to ${target}`);\r\n            this._mediaSource.duration = target;\r\n        }\r\n\r\n        this._requireSetMediaDuration = false;\r\n        this._pendingMediaDuration = 0;\r\n    }\r\n\r\n    _doRemoveRanges() {\r\n        for (let type in this._pendingRemoveRanges) {\r\n            if (!this._sourceBuffers[type] || this._sourceBuffers[type].updating) {\r\n                continue;\r\n            }\r\n            let sb = this._sourceBuffers[type];\r\n            let ranges = this._pendingRemoveRanges[type];\r\n            while (ranges.length && !sb.updating) {\r\n                let range = ranges.shift();\r\n                sb.remove(range.start, range.end);\r\n            }\r\n        }\r\n    }\r\n\r\n    _doAppendSegments() {\r\n        let pendingSegments = this._pendingSegments;\r\n\r\n        for (let type in pendingSegments) {\r\n            if (!this._sourceBuffers[type] || this._sourceBuffers[type].updating) {\r\n                continue;\r\n            }\r\n\r\n            if (pendingSegments[type].length > 0) {\r\n                let segment = pendingSegments[type].shift();\r\n\r\n                if (segment.timestampOffset) {\r\n                    // For MPEG audio stream in MSE, if unbuffered-seeking occurred\r\n                    // We need explicitly set timestampOffset to the desired point in timeline for mpeg SourceBuffer.\r\n                    let currentOffset = this._sourceBuffers[type].timestampOffset;\r\n                    let targetOffset = segment.timestampOffset / 1000;  // in seconds\r\n\r\n                    let delta = Math.abs(currentOffset - targetOffset);\r\n                    if (delta > 0.1) {  // If time delta > 100ms\r\n                        Log.v(this.TAG, `Update MPEG audio timestampOffset from ${currentOffset} to ${targetOffset}`);\r\n                        this._sourceBuffers[type].timestampOffset = targetOffset;\r\n                    }\r\n                    delete segment.timestampOffset;\r\n                }\r\n\r\n                if (!segment.data || segment.data.byteLength === 0) {\r\n                    // Ignore empty buffer\r\n                    continue;\r\n                }\r\n\r\n                try {\r\n                    this._sourceBuffers[type].appendBuffer(segment.data);\r\n                    this._isBufferFull = false;\r\n                    if (type === 'video' && segment.hasOwnProperty('info')) {\r\n                        this._idrList.appendArray(segment.info.syncPoints);\r\n                    }\r\n                } catch (error) {\r\n                    this._pendingSegments[type].unshift(segment);\r\n                    if (error.code === 22) {  // QuotaExceededError\r\n                        /* Notice that FireFox may not throw QuotaExceededError if SourceBuffer is full\r\n                         * Currently we can only do lazy-load to avoid SourceBuffer become scattered.\r\n                         * SourceBuffer eviction policy may be changed in future version of FireFox.\r\n                         *\r\n                         * Related issues:\r\n                         * https://bugzilla.mozilla.org/show_bug.cgi?id=1279885\r\n                         * https://bugzilla.mozilla.org/show_bug.cgi?id=1280023\r\n                         */\r\n\r\n                        // report buffer full, abort network IO\r\n                        if (!this._isBufferFull) {\r\n                            this._emitter.emit(MSEEvents.BUFFER_FULL);\r\n                        }\r\n                        this._isBufferFull = true;\r\n                    } else {\r\n                        Log.e(this.TAG, error.message);\r\n                        this._emitter.emit(MSEEvents.ERROR, {code: error.code, msg: error.message});\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _onSourceOpen() {\r\n        Log.v(this.TAG, 'MediaSource onSourceOpen');\r\n        this._mediaSource.removeEventListener('sourceopen', this.e.onSourceOpen);\r\n        // deferred sourcebuffer creation / initialization\r\n        if (this._pendingSourceBufferInit.length > 0) {\r\n            let pendings = this._pendingSourceBufferInit;\r\n            while (pendings.length) {\r\n                let segment = pendings.shift();\r\n                this.appendInitSegment(segment, true);\r\n            }\r\n        }\r\n        // there may be some pending media segments, append them\r\n        if (this._hasPendingSegments()) {\r\n            this._doAppendSegments();\r\n        }\r\n        this._emitter.emit(MSEEvents.SOURCE_OPEN);\r\n    }\r\n\r\n    _onSourceEnded() {\r\n        // fired on endOfStream\r\n        Log.v(this.TAG, 'MediaSource onSourceEnded');\r\n    }\r\n\r\n    _onSourceClose() {\r\n        // fired on detaching from media element\r\n        Log.v(this.TAG, 'MediaSource onSourceClose');\r\n        if (this._mediaSource && this.e != null) {\r\n            this._mediaSource.removeEventListener('sourceopen', this.e.onSourceOpen);\r\n            this._mediaSource.removeEventListener('sourceended', this.e.onSourceEnded);\r\n            this._mediaSource.removeEventListener('sourceclose', this.e.onSourceClose);\r\n        }\r\n    }\r\n\r\n    _hasPendingSegments() {\r\n        let ps = this._pendingSegments;\r\n        return ps.video.length > 0 || ps.audio.length > 0;\r\n    }\r\n\r\n    _hasPendingRemoveRanges() {\r\n        let prr = this._pendingRemoveRanges;\r\n        return prr.video.length > 0 || prr.audio.length > 0;\r\n    }\r\n\r\n    _onSourceBufferUpdateEnd() {\r\n        if (this._requireSetMediaDuration) {\r\n            this._updateMediaSourceDuration();\r\n        } else if (this._hasPendingRemoveRanges()) {\r\n            this._doRemoveRanges();\r\n        } else if (this._hasPendingSegments()) {\r\n            this._doAppendSegments();\r\n        } else if (this._hasPendingEos) {\r\n            this.endOfStream();\r\n        }\r\n        this._emitter.emit(MSEEvents.UPDATE_END);\r\n    }\r\n\r\n    _onSourceBufferError(e) {\r\n        Log.e(this.TAG, `SourceBuffer Error: ${e}`);\r\n        // this error might not always be fatal, just ignore it\r\n    }\r\n\r\n}\r\n\r\nexport default MSEController;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nconst MSEEvents = {\r\n    ERROR: 'error',\r\n    SOURCE_OPEN: 'source_open',\r\n    UPDATE_END: 'update_end',\r\n    BUFFER_FULL: 'buffer_full'\r\n};\r\n\r\nexport default MSEEvents;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport EventEmitter from 'events';\r\nimport Log from '../utils/logger.js';\r\nimport LoggingControl from '../utils/logging-control.js';\r\nimport TransmuxingController from './transmuxing-controller.js';\r\nimport TransmuxingEvents from './transmuxing-events.js';\r\nimport TransmuxingWorker from './transmuxing-worker.js';\r\nimport MediaInfo from './media-info.js';\r\n\r\nclass Transmuxer {\r\n\r\n    constructor(mediaDataSource, config) {\r\n        this.TAG = 'Transmuxer';\r\n        this._emitter = new EventEmitter();\r\n\r\n        if (config.enableWorker && typeof (Worker) !== 'undefined') {\r\n            try {\r\n                let work = require('webworkify');\r\n                this._worker = work(TransmuxingWorker);\r\n                this._workerDestroying = false;\r\n                this._worker.addEventListener('message', this._onWorkerMessage.bind(this));\r\n                this._worker.postMessage({cmd: 'init', param: [mediaDataSource, config]});\r\n                this.e = {\r\n                    onLoggingConfigChanged: this._onLoggingConfigChanged.bind(this)\r\n                };\r\n                LoggingControl.registerListener(this.e.onLoggingConfigChanged);\r\n                this._worker.postMessage({cmd: 'logging_config', param: LoggingControl.getConfig()});\r\n            } catch (error) {\r\n                Log.e(this.TAG, 'Error while initialize transmuxing worker, fallback to inline transmuxing');\r\n                this._worker = null;\r\n                this._controller = new TransmuxingController(mediaDataSource, config);\r\n            }\r\n        } else {\r\n            this._controller = new TransmuxingController(mediaDataSource, config);\r\n        }\r\n\r\n        if (this._controller) {\r\n            let ctl = this._controller;\r\n            ctl.on(TransmuxingEvents.IO_ERROR, this._onIOError.bind(this));\r\n            ctl.on(TransmuxingEvents.DEMUX_ERROR, this._onDemuxError.bind(this));\r\n            ctl.on(TransmuxingEvents.INIT_SEGMENT, this._onInitSegment.bind(this));\r\n            ctl.on(TransmuxingEvents.MEDIA_SEGMENT, this._onMediaSegment.bind(this));\r\n            ctl.on(TransmuxingEvents.LOADING_COMPLETE, this._onLoadingComplete.bind(this));\r\n            ctl.on(TransmuxingEvents.RECOVERED_EARLY_EOF, this._onRecoveredEarlyEof.bind(this));\r\n            ctl.on(TransmuxingEvents.MEDIA_INFO, this._onMediaInfo.bind(this));\r\n            ctl.on(TransmuxingEvents.METADATA_ARRIVED, this._onMetaDataArrived.bind(this));\r\n            ctl.on(TransmuxingEvents.SCRIPTDATA_ARRIVED, this._onScriptDataArrived.bind(this));\r\n            ctl.on(TransmuxingEvents.STATISTICS_INFO, this._onStatisticsInfo.bind(this));\r\n            ctl.on(TransmuxingEvents.RECOMMEND_SEEKPOINT, this._onRecommendSeekpoint.bind(this));\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        if (this._worker) {\r\n            if (!this._workerDestroying) {\r\n                this._workerDestroying = true;\r\n                this._worker.postMessage({cmd: 'destroy'});\r\n                LoggingControl.removeListener(this.e.onLoggingConfigChanged);\r\n                this.e = null;\r\n            }\r\n        } else {\r\n            this._controller.destroy();\r\n            this._controller = null;\r\n        }\r\n        this._emitter.removeAllListeners();\r\n        this._emitter = null;\r\n    }\r\n\r\n    on(event, listener) {\r\n        this._emitter.addListener(event, listener);\r\n    }\r\n\r\n    off(event, listener) {\r\n        this._emitter.removeListener(event, listener);\r\n    }\r\n\r\n    hasWorker() {\r\n        return this._worker != null;\r\n    }\r\n\r\n    open() {\r\n        if (this._worker) {\r\n            this._worker.postMessage({cmd: 'start'});\r\n        } else {\r\n            this._controller.start();\r\n        }\r\n    }\r\n\r\n    close() {\r\n        if (this._worker) {\r\n            this._worker.postMessage({cmd: 'stop'});\r\n        } else {\r\n            this._controller.stop();\r\n        }\r\n    }\r\n\r\n    seek(milliseconds) {\r\n        if (this._worker) {\r\n            this._worker.postMessage({cmd: 'seek', param: milliseconds});\r\n        } else {\r\n            this._controller.seek(milliseconds);\r\n        }\r\n    }\r\n\r\n    pause() {\r\n        if (this._worker) {\r\n            this._worker.postMessage({cmd: 'pause'});\r\n        } else {\r\n            this._controller.pause();\r\n        }\r\n    }\r\n\r\n    resume() {\r\n        if (this._worker) {\r\n            this._worker.postMessage({cmd: 'resume'});\r\n        } else {\r\n            this._controller.resume();\r\n        }\r\n    }\r\n\r\n    _onInitSegment(type, initSegment) {\r\n        // do async invoke\r\n        Promise.resolve().then(() => {\r\n            this._emitter.emit(TransmuxingEvents.INIT_SEGMENT, type, initSegment);\r\n        });\r\n    }\r\n\r\n    _onMediaSegment(type, mediaSegment) {\r\n        Promise.resolve().then(() => {\r\n            this._emitter.emit(TransmuxingEvents.MEDIA_SEGMENT, type, mediaSegment);\r\n        });\r\n    }\r\n\r\n    _onLoadingComplete() {\r\n        Promise.resolve().then(() => {\r\n            this._emitter.emit(TransmuxingEvents.LOADING_COMPLETE);\r\n        });\r\n    }\r\n\r\n    _onRecoveredEarlyEof() {\r\n        Promise.resolve().then(() => {\r\n            this._emitter.emit(TransmuxingEvents.RECOVERED_EARLY_EOF);\r\n        });\r\n    }\r\n\r\n    _onMediaInfo(mediaInfo) {\r\n        Promise.resolve().then(() => {\r\n            this._emitter.emit(TransmuxingEvents.MEDIA_INFO, mediaInfo);\r\n        });\r\n    }\r\n\r\n    _onMetaDataArrived(metadata) {\r\n        Promise.resolve().then(() => {\r\n            this._emitter.emit(TransmuxingEvents.METADATA_ARRIVED, metadata);\r\n        });\r\n    }\r\n\r\n    _onScriptDataArrived(data) {\r\n        Promise.resolve().then(() => {\r\n            this._emitter.emit(TransmuxingEvents.SCRIPTDATA_ARRIVED, data);\r\n        });\r\n    }\r\n\r\n    _onStatisticsInfo(statisticsInfo) {\r\n        Promise.resolve().then(() => {\r\n            this._emitter.emit(TransmuxingEvents.STATISTICS_INFO, statisticsInfo);\r\n        });\r\n    }\r\n\r\n    _onIOError(type, info) {\r\n        Promise.resolve().then(() => {\r\n            this._emitter.emit(TransmuxingEvents.IO_ERROR, type, info);\r\n        });\r\n    }\r\n\r\n    _onDemuxError(type, info) {\r\n        Promise.resolve().then(() => {\r\n            this._emitter.emit(TransmuxingEvents.DEMUX_ERROR, type, info);\r\n        });\r\n    }\r\n\r\n    _onRecommendSeekpoint(milliseconds) {\r\n        Promise.resolve().then(() => {\r\n            this._emitter.emit(TransmuxingEvents.RECOMMEND_SEEKPOINT, milliseconds);\r\n        });\r\n    }\r\n\r\n    _onLoggingConfigChanged(config) {\r\n        if (this._worker) {\r\n            this._worker.postMessage({cmd: 'logging_config', param: config});\r\n        }\r\n    }\r\n\r\n    _onWorkerMessage(e) {\r\n        let message = e.data;\r\n        let data = message.data;\r\n\r\n        if (message.msg === 'destroyed' || this._workerDestroying) {\r\n            this._workerDestroying = false;\r\n            this._worker.terminate();\r\n            this._worker = null;\r\n            return;\r\n        }\r\n\r\n        switch (message.msg) {\r\n            case TransmuxingEvents.INIT_SEGMENT:\r\n            case TransmuxingEvents.MEDIA_SEGMENT:\r\n                this._emitter.emit(message.msg, data.type, data.data);\r\n                break;\r\n            case TransmuxingEvents.LOADING_COMPLETE:\r\n            case TransmuxingEvents.RECOVERED_EARLY_EOF:\r\n                this._emitter.emit(message.msg);\r\n                break;\r\n            case TransmuxingEvents.MEDIA_INFO:\r\n                Object.setPrototypeOf(data, MediaInfo.prototype);\r\n                this._emitter.emit(message.msg, data);\r\n                break;\r\n            case TransmuxingEvents.METADATA_ARRIVED:\r\n            case TransmuxingEvents.SCRIPTDATA_ARRIVED:\r\n            case TransmuxingEvents.STATISTICS_INFO:\r\n                this._emitter.emit(message.msg, data);\r\n                break;\r\n            case TransmuxingEvents.IO_ERROR:\r\n            case TransmuxingEvents.DEMUX_ERROR:\r\n                this._emitter.emit(message.msg, data.type, data.info);\r\n                break;\r\n            case TransmuxingEvents.RECOMMEND_SEEKPOINT:\r\n                this._emitter.emit(message.msg, data);\r\n                break;\r\n            case 'logcat_callback':\r\n                Log.emitter.emit('log', data.type, data.logcat);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Transmuxer;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport EventEmitter from 'events';\r\nimport Log from '../utils/logger.js';\r\nimport Browser from '../utils/browser.js';\r\nimport MediaInfo from './media-info.js';\r\nimport FLVDemuxer from '../demux/flv-demuxer.js';\r\nimport MP4Remuxer from '../remux/mp4-remuxer.js';\r\nimport DemuxErrors from '../demux/demux-errors.js';\r\nimport IOController from '../io/io-controller.js';\r\nimport TransmuxingEvents from './transmuxing-events.js';\r\nimport {LoaderStatus, LoaderErrors} from '../io/loader.js';\r\n\r\n// Transmuxing (IO, Demuxing, Remuxing) controller, with multipart support\r\nclass TransmuxingController {\r\n\r\n    constructor(mediaDataSource, config) {\r\n        this.TAG = 'TransmuxingController';\r\n        this._emitter = new EventEmitter();\r\n\r\n        this._config = config;\r\n\r\n        // treat single part media as multipart media, which has only one segment\r\n        if (!mediaDataSource.segments) {\r\n            mediaDataSource.segments = [{\r\n                duration: mediaDataSource.duration,\r\n                filesize: mediaDataSource.filesize,\r\n                url: mediaDataSource.url\r\n            }];\r\n        }\r\n\r\n        // fill in default IO params if not exists\r\n        if (typeof mediaDataSource.cors !== 'boolean') {\r\n            mediaDataSource.cors = true;\r\n        }\r\n        if (typeof mediaDataSource.withCredentials !== 'boolean') {\r\n            mediaDataSource.withCredentials = false;\r\n        }\r\n\r\n        this._mediaDataSource = mediaDataSource;\r\n        this._currentSegmentIndex = 0;\r\n        let totalDuration = 0;\r\n\r\n        this._mediaDataSource.segments.forEach((segment) => {\r\n            // timestampBase for each segment, and calculate total duration\r\n            segment.timestampBase = totalDuration;\r\n            totalDuration += segment.duration;\r\n            // params needed by IOController\r\n            segment.cors = mediaDataSource.cors;\r\n            segment.withCredentials = mediaDataSource.withCredentials;\r\n            // referrer policy control, if exist\r\n            if (config.referrerPolicy) {\r\n                segment.referrerPolicy = config.referrerPolicy;\r\n            }\r\n        });\r\n\r\n        if (!isNaN(totalDuration) && this._mediaDataSource.duration !== totalDuration) {\r\n            this._mediaDataSource.duration = totalDuration;\r\n        }\r\n\r\n        this._mediaInfo = null;\r\n        this._demuxer = null;\r\n        this._remuxer = null;\r\n        this._ioctl = null;\r\n\r\n        this._pendingSeekTime = null;\r\n        this._pendingResolveSeekPoint = null;\r\n\r\n        this._statisticsReporter = null;\r\n    }\r\n\r\n    destroy() {\r\n        this._mediaInfo = null;\r\n        this._mediaDataSource = null;\r\n\r\n        if (this._statisticsReporter) {\r\n            this._disableStatisticsReporter();\r\n        }\r\n        if (this._ioctl) {\r\n            this._ioctl.destroy();\r\n            this._ioctl = null;\r\n        }\r\n        if (this._demuxer) {\r\n            this._demuxer.destroy();\r\n            this._demuxer = null;\r\n        }\r\n        if (this._remuxer) {\r\n            this._remuxer.destroy();\r\n            this._remuxer = null;\r\n        }\r\n\r\n        this._emitter.removeAllListeners();\r\n        this._emitter = null;\r\n    }\r\n\r\n    on(event, listener) {\r\n        this._emitter.addListener(event, listener);\r\n    }\r\n\r\n    off(event, listener) {\r\n        this._emitter.removeListener(event, listener);\r\n    }\r\n\r\n    start() {\r\n        this._loadSegment(0);\r\n        this._enableStatisticsReporter();\r\n    }\r\n\r\n    _loadSegment(segmentIndex, optionalFrom) {\r\n        this._currentSegmentIndex = segmentIndex;\r\n        let dataSource = this._mediaDataSource.segments[segmentIndex];\r\n\r\n        let ioctl = this._ioctl = new IOController(dataSource, this._config, segmentIndex);\r\n        ioctl.onError = this._onIOException.bind(this);\r\n        ioctl.onSeeked = this._onIOSeeked.bind(this);\r\n        ioctl.onComplete = this._onIOComplete.bind(this);\r\n        ioctl.onRedirect = this._onIORedirect.bind(this);\r\n        ioctl.onRecoveredEarlyEof = this._onIORecoveredEarlyEof.bind(this);\r\n\r\n        if (optionalFrom) {\r\n            this._demuxer.bindDataSource(this._ioctl);\r\n        } else {\r\n            ioctl.onDataArrival = this._onInitChunkArrival.bind(this);\r\n        }\r\n\r\n        ioctl.open(optionalFrom);\r\n    }\r\n\r\n    stop() {\r\n        this._internalAbort();\r\n        this._disableStatisticsReporter();\r\n    }\r\n\r\n    _internalAbort() {\r\n        if (this._ioctl) {\r\n            this._ioctl.destroy();\r\n            this._ioctl = null;\r\n        }\r\n    }\r\n\r\n    pause() {  // take a rest\r\n        if (this._ioctl && this._ioctl.isWorking()) {\r\n            this._ioctl.pause();\r\n            this._disableStatisticsReporter();\r\n        }\r\n    }\r\n\r\n    resume() {\r\n        if (this._ioctl && this._ioctl.isPaused()) {\r\n            this._ioctl.resume();\r\n            this._enableStatisticsReporter();\r\n        }\r\n    }\r\n\r\n    seek(milliseconds) {\r\n        if (this._mediaInfo == null || !this._mediaInfo.isSeekable()) {\r\n            return;\r\n        }\r\n\r\n        let targetSegmentIndex = this._searchSegmentIndexContains(milliseconds);\r\n\r\n        if (targetSegmentIndex === this._currentSegmentIndex) {\r\n            // intra-segment seeking\r\n            let segmentInfo = this._mediaInfo.segments[targetSegmentIndex];\r\n\r\n            if (segmentInfo == undefined) {\r\n                // current segment loading started, but mediainfo hasn't received yet\r\n                // wait for the metadata loaded, then seek to expected position\r\n                this._pendingSeekTime = milliseconds;\r\n            } else {\r\n                let keyframe = segmentInfo.getNearestKeyframe(milliseconds);\r\n                this._remuxer.seek(keyframe.milliseconds);\r\n                this._ioctl.seek(keyframe.fileposition);\r\n                // Will be resolved in _onRemuxerMediaSegmentArrival()\r\n                this._pendingResolveSeekPoint = keyframe.milliseconds;\r\n            }\r\n        } else {\r\n            // cross-segment seeking\r\n            let targetSegmentInfo = this._mediaInfo.segments[targetSegmentIndex];\r\n\r\n            if (targetSegmentInfo == undefined) {\r\n                // target segment hasn't been loaded. We need metadata then seek to expected time\r\n                this._pendingSeekTime = milliseconds;\r\n                this._internalAbort();\r\n                this._remuxer.seek();\r\n                this._remuxer.insertDiscontinuity();\r\n                this._loadSegment(targetSegmentIndex);\r\n                // Here we wait for the metadata loaded, then seek to expected position\r\n            } else {\r\n                // We have target segment's metadata, direct seek to target position\r\n                let keyframe = targetSegmentInfo.getNearestKeyframe(milliseconds);\r\n                this._internalAbort();\r\n                this._remuxer.seek(milliseconds);\r\n                this._remuxer.insertDiscontinuity();\r\n                this._demuxer.resetMediaInfo();\r\n                this._demuxer.timestampBase = this._mediaDataSource.segments[targetSegmentIndex].timestampBase;\r\n                this._loadSegment(targetSegmentIndex, keyframe.fileposition);\r\n                this._pendingResolveSeekPoint = keyframe.milliseconds;\r\n                this._reportSegmentMediaInfo(targetSegmentIndex);\r\n            }\r\n        }\r\n\r\n        this._enableStatisticsReporter();\r\n    }\r\n\r\n    _searchSegmentIndexContains(milliseconds) {\r\n        let segments = this._mediaDataSource.segments;\r\n        let idx = segments.length - 1;\r\n\r\n        for (let i = 0; i < segments.length; i++) {\r\n            if (milliseconds < segments[i].timestampBase) {\r\n                idx = i - 1;\r\n                break;\r\n            }\r\n        }\r\n        return idx;\r\n    }\r\n\r\n    _onInitChunkArrival(data, byteStart) {\r\n        let probeData = null;\r\n        let consumed = 0;\r\n\r\n        if (byteStart > 0) {\r\n            // IOController seeked immediately after opened, byteStart > 0 callback may received\r\n            this._demuxer.bindDataSource(this._ioctl);\r\n            this._demuxer.timestampBase = this._mediaDataSource.segments[this._currentSegmentIndex].timestampBase;\r\n\r\n            consumed = this._demuxer.parseChunks(data, byteStart);\r\n        } else if ((probeData = FLVDemuxer.probe(data)).match) {\r\n            // Always create new FLVDemuxer\r\n            this._demuxer = new FLVDemuxer(probeData, this._config);\r\n\r\n            if (!this._remuxer) {\r\n                this._remuxer = new MP4Remuxer(this._config);\r\n            }\r\n\r\n            let mds = this._mediaDataSource;\r\n            if (mds.duration != undefined && !isNaN(mds.duration)) {\r\n                this._demuxer.overridedDuration = mds.duration;\r\n            }\r\n            if (typeof mds.hasAudio === 'boolean') {\r\n                this._demuxer.overridedHasAudio = mds.hasAudio;\r\n            }\r\n            if (typeof mds.hasVideo === 'boolean') {\r\n                this._demuxer.overridedHasVideo = mds.hasVideo;\r\n            }\r\n\r\n            this._demuxer.timestampBase = mds.segments[this._currentSegmentIndex].timestampBase;\r\n\r\n            this._demuxer.onError = this._onDemuxException.bind(this);\r\n            this._demuxer.onMediaInfo = this._onMediaInfo.bind(this);\r\n            this._demuxer.onMetaDataArrived = this._onMetaDataArrived.bind(this);\r\n            this._demuxer.onScriptDataArrived = this._onScriptDataArrived.bind(this);\r\n\r\n            this._remuxer.bindDataSource(this._demuxer\r\n                         .bindDataSource(this._ioctl\r\n            ));\r\n\r\n            this._remuxer.onInitSegment = this._onRemuxerInitSegmentArrival.bind(this);\r\n            this._remuxer.onMediaSegment = this._onRemuxerMediaSegmentArrival.bind(this);\r\n\r\n            consumed = this._demuxer.parseChunks(data, byteStart);\r\n        } else {\r\n            probeData = null;\r\n            Log.e(this.TAG, 'Non-FLV, Unsupported media type!');\r\n            Promise.resolve().then(() => {\r\n                this._internalAbort();\r\n            });\r\n            this._emitter.emit(TransmuxingEvents.DEMUX_ERROR, DemuxErrors.FORMAT_UNSUPPORTED, 'Non-FLV, Unsupported media type');\r\n\r\n            consumed = 0;\r\n        }\r\n\r\n        return consumed;\r\n    }\r\n\r\n    _onMediaInfo(mediaInfo) {\r\n        if (this._mediaInfo == null) {\r\n            // Store first segment's mediainfo as global mediaInfo\r\n            this._mediaInfo = Object.assign({}, mediaInfo);\r\n            this._mediaInfo.keyframesIndex = null;\r\n            this._mediaInfo.segments = [];\r\n            this._mediaInfo.segmentCount = this._mediaDataSource.segments.length;\r\n            Object.setPrototypeOf(this._mediaInfo, MediaInfo.prototype);\r\n        }\r\n\r\n        let segmentInfo = Object.assign({}, mediaInfo);\r\n        Object.setPrototypeOf(segmentInfo, MediaInfo.prototype);\r\n        this._mediaInfo.segments[this._currentSegmentIndex] = segmentInfo;\r\n\r\n        // notify mediaInfo update\r\n        this._reportSegmentMediaInfo(this._currentSegmentIndex);\r\n\r\n        if (this._pendingSeekTime != null) {\r\n            Promise.resolve().then(() => {\r\n                let target = this._pendingSeekTime;\r\n                this._pendingSeekTime = null;\r\n                this.seek(target);\r\n            });\r\n        }\r\n    }\r\n\r\n    _onMetaDataArrived(metadata) {\r\n        this._emitter.emit(TransmuxingEvents.METADATA_ARRIVED, metadata);\r\n    }\r\n\r\n    _onScriptDataArrived(data) {\r\n        this._emitter.emit(TransmuxingEvents.SCRIPTDATA_ARRIVED, data);\r\n    }\r\n\r\n    _onIOSeeked() {\r\n        this._remuxer.insertDiscontinuity();\r\n    }\r\n\r\n    _onIOComplete(extraData) {\r\n        let segmentIndex = extraData;\r\n        let nextSegmentIndex = segmentIndex + 1;\r\n\r\n        if (nextSegmentIndex < this._mediaDataSource.segments.length) {\r\n            this._internalAbort();\r\n            this._remuxer.flushStashedSamples();\r\n            this._loadSegment(nextSegmentIndex);\r\n        } else {\r\n            this._remuxer.flushStashedSamples();\r\n            this._emitter.emit(TransmuxingEvents.LOADING_COMPLETE);\r\n            this._disableStatisticsReporter();\r\n        }\r\n    }\r\n\r\n    _onIORedirect(redirectedURL) {\r\n        let segmentIndex = this._ioctl.extraData;\r\n        this._mediaDataSource.segments[segmentIndex].redirectedURL = redirectedURL;\r\n    }\r\n\r\n    _onIORecoveredEarlyEof() {\r\n        this._emitter.emit(TransmuxingEvents.RECOVERED_EARLY_EOF);\r\n    }\r\n\r\n    _onIOException(type, info) {\r\n        Log.e(this.TAG, `IOException: type = ${type}, code = ${info.code}, msg = ${info.msg}`);\r\n        this._emitter.emit(TransmuxingEvents.IO_ERROR, type, info);\r\n        this._disableStatisticsReporter();\r\n    }\r\n\r\n    _onDemuxException(type, info) {\r\n        Log.e(this.TAG, `DemuxException: type = ${type}, info = ${info}`);\r\n        this._emitter.emit(TransmuxingEvents.DEMUX_ERROR, type, info);\r\n    }\r\n\r\n    _onRemuxerInitSegmentArrival(type, initSegment) {\r\n        this._emitter.emit(TransmuxingEvents.INIT_SEGMENT, type, initSegment);\r\n    }\r\n\r\n    _onRemuxerMediaSegmentArrival(type, mediaSegment) {\r\n        if (this._pendingSeekTime != null) {\r\n            // Media segments after new-segment cross-seeking should be dropped.\r\n            return;\r\n        }\r\n        this._emitter.emit(TransmuxingEvents.MEDIA_SEGMENT, type, mediaSegment);\r\n\r\n        // Resolve pending seekPoint\r\n        if (this._pendingResolveSeekPoint != null && type === 'video') {\r\n            let syncPoints = mediaSegment.info.syncPoints;\r\n            let seekpoint = this._pendingResolveSeekPoint;\r\n            this._pendingResolveSeekPoint = null;\r\n\r\n            // Safari: Pass PTS for recommend_seekpoint\r\n            if (Browser.safari && syncPoints.length > 0 && syncPoints[0].originalDts === seekpoint) {\r\n                seekpoint = syncPoints[0].pts;\r\n            }\r\n            // else: use original DTS (keyframe.milliseconds)\r\n\r\n            this._emitter.emit(TransmuxingEvents.RECOMMEND_SEEKPOINT, seekpoint);\r\n        }\r\n    }\r\n\r\n    _enableStatisticsReporter() {\r\n        if (this._statisticsReporter == null) {\r\n            this._statisticsReporter = self.setInterval(\r\n                this._reportStatisticsInfo.bind(this),\r\n            this._config.statisticsInfoReportInterval);\r\n        }\r\n    }\r\n\r\n    _disableStatisticsReporter() {\r\n        if (this._statisticsReporter) {\r\n            self.clearInterval(this._statisticsReporter);\r\n            this._statisticsReporter = null;\r\n        }\r\n    }\r\n\r\n    _reportSegmentMediaInfo(segmentIndex) {\r\n        let segmentInfo = this._mediaInfo.segments[segmentIndex];\r\n        let exportInfo = Object.assign({}, segmentInfo);\r\n\r\n        exportInfo.duration = this._mediaInfo.duration;\r\n        exportInfo.segmentCount = this._mediaInfo.segmentCount;\r\n        delete exportInfo.segments;\r\n        delete exportInfo.keyframesIndex;\r\n\r\n        this._emitter.emit(TransmuxingEvents.MEDIA_INFO, exportInfo);\r\n    }\r\n\r\n    _reportStatisticsInfo() {\r\n        let info = {};\r\n\r\n        info.url = this._ioctl.currentURL;\r\n        info.hasRedirect = this._ioctl.hasRedirect;\r\n        if (info.hasRedirect) {\r\n            info.redirectedURL = this._ioctl.currentRedirectedURL;\r\n        }\r\n\r\n        info.speed = this._ioctl.currentSpeed;\r\n        info.loaderType = this._ioctl.loaderType;\r\n        info.currentSegmentIndex = this._currentSegmentIndex;\r\n        info.totalSegmentCount = this._mediaDataSource.segments.length;\r\n\r\n        this._emitter.emit(TransmuxingEvents.STATISTICS_INFO, info);\r\n    }\r\n\r\n}\r\n\r\nexport default TransmuxingController;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nconst TransmuxingEvents = {\r\n    IO_ERROR: 'io_error',\r\n    DEMUX_ERROR: 'demux_error',\r\n    INIT_SEGMENT: 'init_segment',\r\n    MEDIA_SEGMENT: 'media_segment',\r\n    LOADING_COMPLETE: 'loading_complete',\r\n    RECOVERED_EARLY_EOF: 'recovered_early_eof',\r\n    MEDIA_INFO: 'media_info',\r\n    METADATA_ARRIVED: 'metadata_arrived',\r\n    SCRIPTDATA_ARRIVED: 'scriptdata_arrived',\r\n    STATISTICS_INFO: 'statistics_info',\r\n    RECOMMEND_SEEKPOINT: 'recommend_seekpoint'\r\n};\r\n\r\nexport default TransmuxingEvents;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Log from '../utils/logger.js';\r\nimport LoggingControl from '../utils/logging-control.js';\r\nimport Polyfill from '../utils/polyfill.js';\r\nimport TransmuxingController from './transmuxing-controller.js';\r\nimport TransmuxingEvents from './transmuxing-events.js';\r\n\r\n/* post message to worker:\r\n   data: {\r\n       cmd: string\r\n       param: any\r\n   }\r\n\r\n   receive message from worker:\r\n   data: {\r\n       msg: string,\r\n       data: any\r\n   }\r\n */\r\n\r\nlet TransmuxingWorker = function (self) {\r\n\r\n    let TAG = 'TransmuxingWorker';\r\n    let controller = null;\r\n    let logcatListener = onLogcatCallback.bind(this);\r\n\r\n    Polyfill.install();\r\n\r\n    self.addEventListener('message', function (e) {\r\n        switch (e.data.cmd) {\r\n            case 'init':\r\n                controller = new TransmuxingController(e.data.param[0], e.data.param[1]);\r\n                controller.on(TransmuxingEvents.IO_ERROR, onIOError.bind(this));\r\n                controller.on(TransmuxingEvents.DEMUX_ERROR, onDemuxError.bind(this));\r\n                controller.on(TransmuxingEvents.INIT_SEGMENT, onInitSegment.bind(this));\r\n                controller.on(TransmuxingEvents.MEDIA_SEGMENT, onMediaSegment.bind(this));\r\n                controller.on(TransmuxingEvents.LOADING_COMPLETE, onLoadingComplete.bind(this));\r\n                controller.on(TransmuxingEvents.RECOVERED_EARLY_EOF, onRecoveredEarlyEof.bind(this));\r\n                controller.on(TransmuxingEvents.MEDIA_INFO, onMediaInfo.bind(this));\r\n                controller.on(TransmuxingEvents.METADATA_ARRIVED, onMetaDataArrived.bind(this));\r\n                controller.on(TransmuxingEvents.SCRIPTDATA_ARRIVED, onScriptDataArrived.bind(this));\r\n                controller.on(TransmuxingEvents.STATISTICS_INFO, onStatisticsInfo.bind(this));\r\n                controller.on(TransmuxingEvents.RECOMMEND_SEEKPOINT, onRecommendSeekpoint.bind(this));\r\n                break;\r\n            case 'destroy':\r\n                if (controller) {\r\n                    controller.destroy();\r\n                    controller = null;\r\n                }\r\n                self.postMessage({msg: 'destroyed'});\r\n                break;\r\n            case 'start':\r\n                controller.start();\r\n                break;\r\n            case 'stop':\r\n                controller.stop();\r\n                break;\r\n            case 'seek':\r\n                controller.seek(e.data.param);\r\n                break;\r\n            case 'pause':\r\n                controller.pause();\r\n                break;\r\n            case 'resume':\r\n                controller.resume();\r\n                break;\r\n            case 'logging_config': {\r\n                let config = e.data.param;\r\n                LoggingControl.applyConfig(config);\r\n\r\n                if (config.enableCallback === true) {\r\n                    LoggingControl.addLogListener(logcatListener);\r\n                } else {\r\n                    LoggingControl.removeLogListener(logcatListener);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    });\r\n\r\n    function onInitSegment(type, initSegment) {\r\n        let obj = {\r\n            msg: TransmuxingEvents.INIT_SEGMENT,\r\n            data: {\r\n                type: type,\r\n                data: initSegment\r\n            }\r\n        };\r\n        self.postMessage(obj, [initSegment.data]);  // data: ArrayBuffer\r\n    }\r\n\r\n    function onMediaSegment(type, mediaSegment) {\r\n        let obj = {\r\n            msg: TransmuxingEvents.MEDIA_SEGMENT,\r\n            data: {\r\n                type: type,\r\n                data: mediaSegment\r\n            }\r\n        };\r\n        self.postMessage(obj, [mediaSegment.data]);  // data: ArrayBuffer\r\n    }\r\n\r\n    function onLoadingComplete() {\r\n        let obj = {\r\n            msg: TransmuxingEvents.LOADING_COMPLETE\r\n        };\r\n        self.postMessage(obj);\r\n    }\r\n\r\n    function onRecoveredEarlyEof() {\r\n        let obj = {\r\n            msg: TransmuxingEvents.RECOVERED_EARLY_EOF\r\n        };\r\n        self.postMessage(obj);\r\n    }\r\n\r\n    function onMediaInfo(mediaInfo) {\r\n        let obj = {\r\n            msg: TransmuxingEvents.MEDIA_INFO,\r\n            data: mediaInfo\r\n        };\r\n        self.postMessage(obj);\r\n    }\r\n\r\n    function onMetaDataArrived(metadata) {\r\n        let obj = {\r\n            msg: TransmuxingEvents.METADATA_ARRIVED,\r\n            data: metadata\r\n        };\r\n        self.postMessage(obj);\r\n    }\r\n\r\n    function onScriptDataArrived(data) {\r\n        let obj = {\r\n            msg: TransmuxingEvents.SCRIPTDATA_ARRIVED,\r\n            data: data\r\n        };\r\n        self.postMessage(obj);\r\n    }\r\n\r\n    function onStatisticsInfo(statInfo) {\r\n        let obj = {\r\n            msg: TransmuxingEvents.STATISTICS_INFO,\r\n            data: statInfo\r\n        };\r\n        self.postMessage(obj);\r\n    }\r\n\r\n    function onIOError(type, info) {\r\n        self.postMessage({\r\n            msg: TransmuxingEvents.IO_ERROR,\r\n            data: {\r\n                type: type,\r\n                info: info\r\n            }\r\n        });\r\n    }\r\n\r\n    function onDemuxError(type, info) {\r\n        self.postMessage({\r\n            msg: TransmuxingEvents.DEMUX_ERROR,\r\n            data: {\r\n                type: type,\r\n                info: info\r\n            }\r\n        });\r\n    }\r\n\r\n    function onRecommendSeekpoint(milliseconds) {\r\n        self.postMessage({\r\n            msg: TransmuxingEvents.RECOMMEND_SEEKPOINT,\r\n            data: milliseconds\r\n        });\r\n    }\r\n\r\n    function onLogcatCallback(type, str) {\r\n        self.postMessage({\r\n            msg: 'logcat_callback',\r\n            data: {\r\n                type: type,\r\n                logcat: str\r\n            }\r\n        });\r\n    }\r\n\r\n};\r\n\r\nexport default TransmuxingWorker;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Log from '../utils/logger.js';\r\nimport decodeUTF8 from '../utils/utf8-conv.js';\r\nimport {IllegalStateException} from '../utils/exception.js';\r\n\r\nlet le = (function () {\r\n    let buf = new ArrayBuffer(2);\r\n    (new DataView(buf)).setInt16(0, 256, true);  // little-endian write\r\n    return (new Int16Array(buf))[0] === 256;  // platform-spec read, if equal then LE\r\n})();\r\n\r\nclass AMF {\r\n\r\n    static parseScriptData(arrayBuffer, dataOffset, dataSize) {\r\n        let data = {};\r\n\r\n        try {\r\n            let name = AMF.parseValue(arrayBuffer, dataOffset, dataSize);\r\n            let value = AMF.parseValue(arrayBuffer, dataOffset + name.size, dataSize - name.size);\r\n\r\n            data[name.data] = value.data;\r\n        } catch (e) {\r\n            Log.e('AMF', e.toString());\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    static parseObject(arrayBuffer, dataOffset, dataSize) {\r\n        if (dataSize < 3) {\r\n            throw new IllegalStateException('Data not enough when parse ScriptDataObject');\r\n        }\r\n        let name = AMF.parseString(arrayBuffer, dataOffset, dataSize);\r\n        let value = AMF.parseValue(arrayBuffer, dataOffset + name.size, dataSize - name.size);\r\n        let isObjectEnd = value.objectEnd;\r\n\r\n        return {\r\n            data: {\r\n                name: name.data,\r\n                value: value.data\r\n            },\r\n            size: name.size + value.size,\r\n            objectEnd: isObjectEnd\r\n        };\r\n    }\r\n\r\n    static parseVariable(arrayBuffer, dataOffset, dataSize) {\r\n        return AMF.parseObject(arrayBuffer, dataOffset, dataSize);\r\n    }\r\n\r\n    static parseString(arrayBuffer, dataOffset, dataSize) {\r\n        if (dataSize < 2) {\r\n            throw new IllegalStateException('Data not enough when parse String');\r\n        }\r\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\r\n        let length = v.getUint16(0, !le);\r\n\r\n        let str;\r\n        if (length > 0) {\r\n            str = decodeUTF8(new Uint8Array(arrayBuffer, dataOffset + 2, length));\r\n        } else {\r\n            str = '';\r\n        }\r\n\r\n        return {\r\n            data: str,\r\n            size: 2 + length\r\n        };\r\n    }\r\n\r\n    static parseLongString(arrayBuffer, dataOffset, dataSize) {\r\n        if (dataSize < 4) {\r\n            throw new IllegalStateException('Data not enough when parse LongString');\r\n        }\r\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\r\n        let length = v.getUint32(0, !le);\r\n\r\n        let str;\r\n        if (length > 0) {\r\n            str = decodeUTF8(new Uint8Array(arrayBuffer, dataOffset + 4, length));\r\n        } else {\r\n            str = '';\r\n        }\r\n\r\n        return {\r\n            data: str,\r\n            size: 4 + length\r\n        };\r\n    }\r\n\r\n    static parseDate(arrayBuffer, dataOffset, dataSize) {\r\n        if (dataSize < 10) {\r\n            throw new IllegalStateException('Data size invalid when parse Date');\r\n        }\r\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\r\n        let timestamp = v.getFloat64(0, !le);\r\n        let localTimeOffset = v.getInt16(8, !le);\r\n        timestamp += localTimeOffset * 60 * 1000;  // get UTC time\r\n\r\n        return {\r\n            data: new Date(timestamp),\r\n            size: 8 + 2\r\n        };\r\n    }\r\n\r\n    static parseValue(arrayBuffer, dataOffset, dataSize) {\r\n        if (dataSize < 1) {\r\n            throw new IllegalStateException('Data not enough when parse Value');\r\n        }\r\n\r\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\r\n\r\n        let offset = 1;\r\n        let type = v.getUint8(0);\r\n        let value;\r\n        let objectEnd = false;\r\n\r\n        try {\r\n            switch (type) {\r\n                case 0:  // Number(Double) type\r\n                    value = v.getFloat64(1, !le);\r\n                    offset += 8;\r\n                    break;\r\n                case 1: {  // Boolean type\r\n                    let b = v.getUint8(1);\r\n                    value = b ? true : false;\r\n                    offset += 1;\r\n                    break;\r\n                }\r\n                case 2: {  // String type\r\n                    let amfstr = AMF.parseString(arrayBuffer, dataOffset + 1, dataSize - 1);\r\n                    value = amfstr.data;\r\n                    offset += amfstr.size;\r\n                    break;\r\n                }\r\n                case 3: { // Object(s) type\r\n                    value = {};\r\n                    let terminal = 0;  // workaround for malformed Objects which has missing ScriptDataObjectEnd\r\n                    if ((v.getUint32(dataSize - 4, !le) & 0x00FFFFFF) === 9) {\r\n                        terminal = 3;\r\n                    }\r\n                    while (offset < dataSize - 4) {  // 4 === type(UI8) + ScriptDataObjectEnd(UI24)\r\n                        let amfobj = AMF.parseObject(arrayBuffer, dataOffset + offset, dataSize - offset - terminal);\r\n                        if (amfobj.objectEnd)\r\n                            break;\r\n                        value[amfobj.data.name] = amfobj.data.value;\r\n                        offset += amfobj.size;\r\n                    }\r\n                    if (offset <= dataSize - 3) {\r\n                        let marker = v.getUint32(offset - 1, !le) & 0x00FFFFFF;\r\n                        if (marker === 9) {\r\n                            offset += 3;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case 8: { // ECMA array type (Mixed array)\r\n                    value = {};\r\n                    offset += 4;  // ECMAArrayLength(UI32)\r\n                    let terminal = 0;  // workaround for malformed MixedArrays which has missing ScriptDataObjectEnd\r\n                    if ((v.getUint32(dataSize - 4, !le) & 0x00FFFFFF) === 9) {\r\n                        terminal = 3;\r\n                    }\r\n                    while (offset < dataSize - 8) {  // 8 === type(UI8) + ECMAArrayLength(UI32) + ScriptDataVariableEnd(UI24)\r\n                        let amfvar = AMF.parseVariable(arrayBuffer, dataOffset + offset, dataSize - offset - terminal);\r\n                        if (amfvar.objectEnd)\r\n                            break;\r\n                        value[amfvar.data.name] = amfvar.data.value;\r\n                        offset += amfvar.size;\r\n                    }\r\n                    if (offset <= dataSize - 3) {\r\n                        let marker = v.getUint32(offset - 1, !le) & 0x00FFFFFF;\r\n                        if (marker === 9) {\r\n                            offset += 3;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case 9:  // ScriptDataObjectEnd\r\n                    value = undefined;\r\n                    offset = 1;\r\n                    objectEnd = true;\r\n                    break;\r\n                case 10: {  // Strict array type\r\n                    // ScriptDataValue[n]. NOTE: according to video_file_format_spec_v10_1.pdf\r\n                    value = [];\r\n                    let strictArrayLength = v.getUint32(1, !le);\r\n                    offset += 4;\r\n                    for (let i = 0; i < strictArrayLength; i++) {\r\n                        let val = AMF.parseValue(arrayBuffer, dataOffset + offset, dataSize - offset);\r\n                        value.push(val.data);\r\n                        offset += val.size;\r\n                    }\r\n                    break;\r\n                }\r\n                case 11: {  // Date type\r\n                    let date = AMF.parseDate(arrayBuffer, dataOffset + 1, dataSize - 1);\r\n                    value = date.data;\r\n                    offset += date.size;\r\n                    break;\r\n                }\r\n                case 12: {  // Long string type\r\n                    let amfLongStr = AMF.parseString(arrayBuffer, dataOffset + 1, dataSize - 1);\r\n                    value = amfLongStr.data;\r\n                    offset += amfLongStr.size;\r\n                    break;\r\n                }\r\n                default:\r\n                    // ignore and skip\r\n                    offset = dataSize;\r\n                    Log.w('AMF', 'Unsupported AMF value type ' + type);\r\n            }\r\n        } catch (e) {\r\n            Log.e('AMF', e.toString());\r\n        }\r\n\r\n        return {\r\n            data: value,\r\n            size: offset,\r\n            objectEnd: objectEnd\r\n        };\r\n    }\r\n\r\n}\r\n\r\nexport default AMF;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nconst DemuxErrors = {\r\n    OK: 'OK',\r\n    FORMAT_ERROR: 'FormatError',\r\n    FORMAT_UNSUPPORTED: 'FormatUnsupported',\r\n    CODEC_UNSUPPORTED: 'CodecUnsupported'\r\n};\r\n\r\nexport default DemuxErrors;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport {IllegalStateException, InvalidArgumentException} from '../utils/exception.js';\r\n\r\n// Exponential-Golomb buffer decoder\r\nclass ExpGolomb {\r\n\r\n    constructor(uint8array) {\r\n        this.TAG = 'ExpGolomb';\r\n\r\n        this._buffer = uint8array;\r\n        this._buffer_index = 0;\r\n        this._total_bytes = uint8array.byteLength;\r\n        this._total_bits = uint8array.byteLength * 8;\r\n        this._current_word = 0;\r\n        this._current_word_bits_left = 0;\r\n    }\r\n\r\n    destroy() {\r\n        this._buffer = null;\r\n    }\r\n\r\n    _fillCurrentWord() {\r\n        let buffer_bytes_left = this._total_bytes - this._buffer_index;\r\n        if (buffer_bytes_left <= 0)\r\n            throw new IllegalStateException('ExpGolomb: _fillCurrentWord() but no bytes available');\r\n\r\n        let bytes_read = Math.min(4, buffer_bytes_left);\r\n        let word = new Uint8Array(4);\r\n        word.set(this._buffer.subarray(this._buffer_index, this._buffer_index + bytes_read));\r\n        this._current_word = new DataView(word.buffer).getUint32(0, false);\r\n\r\n        this._buffer_index += bytes_read;\r\n        this._current_word_bits_left = bytes_read * 8;\r\n    }\r\n\r\n    readBits(bits) {\r\n        if (bits > 32)\r\n            throw new InvalidArgumentException('ExpGolomb: readBits() bits exceeded max 32bits!');\r\n\r\n        if (bits <= this._current_word_bits_left) {\r\n            let result = this._current_word >>> (32 - bits);\r\n            this._current_word <<= bits;\r\n            this._current_word_bits_left -= bits;\r\n            return result;\r\n        }\r\n\r\n        let result = this._current_word_bits_left ? this._current_word : 0;\r\n        result = result >>> (32 - this._current_word_bits_left);\r\n        let bits_need_left = bits - this._current_word_bits_left;\r\n\r\n        this._fillCurrentWord();\r\n        let bits_read_next = Math.min(bits_need_left, this._current_word_bits_left);\r\n\r\n        let result2 = this._current_word >>> (32 - bits_read_next);\r\n        this._current_word <<= bits_read_next;\r\n        this._current_word_bits_left -= bits_read_next;\r\n\r\n        result = (result << bits_read_next) | result2;\r\n        return result;\r\n    }\r\n\r\n    readBool() {\r\n        return this.readBits(1) === 1;\r\n    }\r\n\r\n    readByte() {\r\n        return this.readBits(8);\r\n    }\r\n\r\n    _skipLeadingZero() {\r\n        let zero_count;\r\n        for (zero_count = 0; zero_count < this._current_word_bits_left; zero_count++) {\r\n            if (0 !== (this._current_word & (0x80000000 >>> zero_count))) {\r\n                this._current_word <<= zero_count;\r\n                this._current_word_bits_left -= zero_count;\r\n                return zero_count;\r\n            }\r\n        }\r\n        this._fillCurrentWord();\r\n        return zero_count + this._skipLeadingZero();\r\n    }\r\n\r\n    readUEG() {  // unsigned exponential golomb\r\n        let leading_zeros = this._skipLeadingZero();\r\n        return this.readBits(leading_zeros + 1) - 1;\r\n    }\r\n\r\n    readSEG() {  // signed exponential golomb\r\n        let value = this.readUEG();\r\n        if (value & 0x01) {\r\n            return (value + 1) >>> 1;\r\n        } else {\r\n            return -1 * (value >>> 1);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default ExpGolomb;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Log from '../utils/logger.js';\r\nimport AMF from './amf-parser.js';\r\nimport SPSParser from './sps-parser.js';\r\nimport DemuxErrors from './demux-errors.js';\r\nimport MediaInfo from '../core/media-info.js';\r\nimport {IllegalStateException} from '../utils/exception.js';\r\n\r\nfunction Swap16(src) {\r\n    return (((src >>> 8) & 0xFF) |\r\n            ((src & 0xFF) << 8));\r\n}\r\n\r\nfunction Swap32(src) {\r\n    return (((src & 0xFF000000) >>> 24) |\r\n            ((src & 0x00FF0000) >>> 8)  |\r\n            ((src & 0x0000FF00) << 8)   |\r\n            ((src & 0x000000FF) << 24));\r\n}\r\n\r\nfunction ReadBig32(array, index) {\r\n    return ((array[index] << 24)     |\r\n            (array[index + 1] << 16) |\r\n            (array[index + 2] << 8)  |\r\n            (array[index + 3]));\r\n}\r\n\r\n\r\nclass FLVDemuxer {\r\n\r\n    constructor(probeData, config) {\r\n        this.TAG = 'FLVDemuxer';\r\n\r\n        this._config = config;\r\n\r\n        this._onError = null;\r\n        this._onMediaInfo = null;\r\n        this._onMetaDataArrived = null;\r\n        this._onScriptDataArrived = null;\r\n        this._onTrackMetadata = null;\r\n        this._onDataAvailable = null;\r\n\r\n        this._dataOffset = probeData.dataOffset;\r\n        this._firstParse = true;\r\n        this._dispatch = false;\r\n\r\n        this._hasAudio = probeData.hasAudioTrack;\r\n        this._hasVideo = probeData.hasVideoTrack;\r\n\r\n        this._hasAudioFlagOverrided = false;\r\n        this._hasVideoFlagOverrided = false;\r\n\r\n        this._audioInitialMetadataDispatched = false;\r\n        this._videoInitialMetadataDispatched = false;\r\n\r\n        this._mediaInfo = new MediaInfo();\r\n        this._mediaInfo.hasAudio = this._hasAudio;\r\n        this._mediaInfo.hasVideo = this._hasVideo;\r\n        this._metadata = null;\r\n        this._audioMetadata = null;\r\n        this._videoMetadata = null;\r\n\r\n        this._naluLengthSize = 4;\r\n        this._timestampBase = 0;  // int32, in milliseconds\r\n        this._timescale = 1000;\r\n        this._duration = 0;  // int32, in milliseconds\r\n        this._durationOverrided = false;\r\n        this._referenceFrameRate = {\r\n            fixed: true,\r\n            fps: 23.976,\r\n            fps_num: 23976,\r\n            fps_den: 1000\r\n        };\r\n\r\n        this._flvSoundRateTable = [5500, 11025, 22050, 44100, 48000];\r\n\r\n        this._mpegSamplingRates = [\r\n            96000, 88200, 64000, 48000, 44100, 32000,\r\n            24000, 22050, 16000, 12000, 11025, 8000, 7350\r\n        ];\r\n\r\n        this._mpegAudioV10SampleRateTable = [44100, 48000, 32000, 0];\r\n        this._mpegAudioV20SampleRateTable = [22050, 24000, 16000, 0];\r\n        this._mpegAudioV25SampleRateTable = [11025, 12000, 8000,  0];\r\n\r\n        this._mpegAudioL1BitRateTable = [0, 32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, -1];\r\n        this._mpegAudioL2BitRateTable = [0, 32, 48, 56,  64,  80,  96, 112, 128, 160, 192, 224, 256, 320, 384, -1];\r\n        this._mpegAudioL3BitRateTable = [0, 32, 40, 48,  56,  64,  80,  96, 112, 128, 160, 192, 224, 256, 320, -1];\r\n\r\n        this._videoTrack = {type: 'video', id: 1, sequenceNumber: 0, samples: [], length: 0};\r\n        this._audioTrack = {type: 'audio', id: 2, sequenceNumber: 0, samples: [], length: 0};\r\n\r\n        this._littleEndian = (function () {\r\n            let buf = new ArrayBuffer(2);\r\n            (new DataView(buf)).setInt16(0, 256, true);  // little-endian write\r\n            return (new Int16Array(buf))[0] === 256;  // platform-spec read, if equal then LE\r\n        })();\r\n    }\r\n\r\n    destroy() {\r\n        this._mediaInfo = null;\r\n        this._metadata = null;\r\n        this._audioMetadata = null;\r\n        this._videoMetadata = null;\r\n        this._videoTrack = null;\r\n        this._audioTrack = null;\r\n\r\n        this._onError = null;\r\n        this._onMediaInfo = null;\r\n        this._onMetaDataArrived = null;\r\n        this._onScriptDataArrived = null;\r\n        this._onTrackMetadata = null;\r\n        this._onDataAvailable = null;\r\n    }\r\n\r\n    static probe(buffer) {\r\n        let data = new Uint8Array(buffer);\r\n        let mismatch = {match: false};\r\n\r\n        if (data[0] !== 0x46 || data[1] !== 0x4C || data[2] !== 0x56 || data[3] !== 0x01) {\r\n            return mismatch;\r\n        }\r\n\r\n        let hasAudio = ((data[4] & 4) >>> 2) !== 0;\r\n        let hasVideo = (data[4] & 1) !== 0;\r\n\r\n        let offset = ReadBig32(data, 5);\r\n\r\n        if (offset < 9) {\r\n            return mismatch;\r\n        }\r\n\r\n        return {\r\n            match: true,\r\n            consumed: offset,\r\n            dataOffset: offset,\r\n            hasAudioTrack: hasAudio,\r\n            hasVideoTrack: hasVideo\r\n        };\r\n    }\r\n\r\n    bindDataSource(loader) {\r\n        loader.onDataArrival = this.parseChunks.bind(this);\r\n        return this;\r\n    }\r\n\r\n    // prototype: function(type: string, metadata: any): void\r\n    get onTrackMetadata() {\r\n        return this._onTrackMetadata;\r\n    }\r\n\r\n    set onTrackMetadata(callback) {\r\n        this._onTrackMetadata = callback;\r\n    }\r\n\r\n    // prototype: function(mediaInfo: MediaInfo): void\r\n    get onMediaInfo() {\r\n        return this._onMediaInfo;\r\n    }\r\n\r\n    set onMediaInfo(callback) {\r\n        this._onMediaInfo = callback;\r\n    }\r\n\r\n    get onMetaDataArrived() {\r\n        return this._onMetaDataArrived;\r\n    }\r\n\r\n    set onMetaDataArrived(callback) {\r\n        this._onMetaDataArrived = callback;\r\n    }\r\n\r\n    get onScriptDataArrived() {\r\n        return this._onScriptDataArrived;\r\n    }\r\n\r\n    set onScriptDataArrived(callback) {\r\n        this._onScriptDataArrived = callback;\r\n    }\r\n\r\n    // prototype: function(type: number, info: string): void\r\n    get onError() {\r\n        return this._onError;\r\n    }\r\n\r\n    set onError(callback) {\r\n        this._onError = callback;\r\n    }\r\n\r\n    // prototype: function(videoTrack: any, audioTrack: any): void\r\n    get onDataAvailable() {\r\n        return this._onDataAvailable;\r\n    }\r\n\r\n    set onDataAvailable(callback) {\r\n        this._onDataAvailable = callback;\r\n    }\r\n\r\n    // timestamp base for output samples, must be in milliseconds\r\n    get timestampBase() {\r\n        return this._timestampBase;\r\n    }\r\n\r\n    set timestampBase(base) {\r\n        this._timestampBase = base;\r\n    }\r\n\r\n    get overridedDuration() {\r\n        return this._duration;\r\n    }\r\n\r\n    // Force-override media duration. Must be in milliseconds, int32\r\n    set overridedDuration(duration) {\r\n        this._durationOverrided = true;\r\n        this._duration = duration;\r\n        this._mediaInfo.duration = duration;\r\n    }\r\n\r\n    // Force-override audio track present flag, boolean\r\n    set overridedHasAudio(hasAudio) {\r\n        this._hasAudioFlagOverrided = true;\r\n        this._hasAudio = hasAudio;\r\n        this._mediaInfo.hasAudio = hasAudio;\r\n    }\r\n\r\n    // Force-override video track present flag, boolean\r\n    set overridedHasVideo(hasVideo) {\r\n        this._hasVideoFlagOverrided = true;\r\n        this._hasVideo = hasVideo;\r\n        this._mediaInfo.hasVideo = hasVideo;\r\n    }\r\n\r\n    resetMediaInfo() {\r\n        this._mediaInfo = new MediaInfo();\r\n    }\r\n\r\n    _isInitialMetadataDispatched() {\r\n        if (this._hasAudio && this._hasVideo) {  // both audio & video\r\n            return this._audioInitialMetadataDispatched && this._videoInitialMetadataDispatched;\r\n        }\r\n        if (this._hasAudio && !this._hasVideo) {  // audio only\r\n            return this._audioInitialMetadataDispatched;\r\n        }\r\n        if (!this._hasAudio && this._hasVideo) {  // video only\r\n            return this._videoInitialMetadataDispatched;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // function parseChunks(chunk: ArrayBuffer, byteStart: number): number;\r\n    parseChunks(chunk, byteStart) {\r\n        if (!this._onError || !this._onMediaInfo || !this._onTrackMetadata || !this._onDataAvailable) {\r\n            throw new IllegalStateException('Flv: onError & onMediaInfo & onTrackMetadata & onDataAvailable callback must be specified');\r\n        }\r\n\r\n        let offset = 0;\r\n        let le = this._littleEndian;\r\n\r\n        if (byteStart === 0) {  // buffer with FLV header\r\n            if (chunk.byteLength > 13) {\r\n                let probeData = FLVDemuxer.probe(chunk);\r\n                offset = probeData.dataOffset;\r\n            } else {\r\n                return 0;\r\n            }\r\n        }\r\n\r\n        if (this._firstParse) {  // handle PreviousTagSize0 before Tag1\r\n            this._firstParse = false;\r\n            if (byteStart + offset !== this._dataOffset) {\r\n                Log.w(this.TAG, 'First time parsing but chunk byteStart invalid!');\r\n            }\r\n\r\n            let v = new DataView(chunk, offset);\r\n            let prevTagSize0 = v.getUint32(0, !le);\r\n            if (prevTagSize0 !== 0) {\r\n                Log.w(this.TAG, 'PrevTagSize0 !== 0 !!!');\r\n            }\r\n            offset += 4;\r\n        }\r\n\r\n        while (offset < chunk.byteLength) {\r\n            this._dispatch = true;\r\n\r\n            let v = new DataView(chunk, offset);\r\n\r\n            if (offset + 11 + 4 > chunk.byteLength) {\r\n                // data not enough for parsing an flv tag\r\n                break;\r\n            }\r\n\r\n            let tagType = v.getUint8(0);\r\n            let dataSize = v.getUint32(0, !le) & 0x00FFFFFF;\r\n\r\n            if (offset + 11 + dataSize + 4 > chunk.byteLength) {\r\n                // data not enough for parsing actual data body\r\n                break;\r\n            }\r\n\r\n            if (tagType !== 8 && tagType !== 9 && tagType !== 18) {\r\n                Log.w(this.TAG, `Unsupported tag type ${tagType}, skipped`);\r\n                // consume the whole tag (skip it)\r\n                offset += 11 + dataSize + 4;\r\n                continue;\r\n            }\r\n\r\n            let ts2 = v.getUint8(4);\r\n            let ts1 = v.getUint8(5);\r\n            let ts0 = v.getUint8(6);\r\n            let ts3 = v.getUint8(7);\r\n\r\n            let timestamp = ts0 | (ts1 << 8) | (ts2 << 16) | (ts3 << 24);\r\n\r\n            let streamId = v.getUint32(7, !le) & 0x00FFFFFF;\r\n            if (streamId !== 0) {\r\n                Log.w(this.TAG, 'Meet tag which has StreamID != 0!');\r\n            }\r\n\r\n            let dataOffset = offset + 11;\r\n\r\n            switch (tagType) {\r\n                case 8:  // Audio\r\n                    this._parseAudioData(chunk, dataOffset, dataSize, timestamp);\r\n                    break;\r\n                case 9:  // Video\r\n                    this._parseVideoData(chunk, dataOffset, dataSize, timestamp, byteStart + offset);\r\n                    break;\r\n                case 18:  // ScriptDataObject\r\n                    this._parseScriptData(chunk, dataOffset, dataSize);\r\n                    break;\r\n            }\r\n\r\n            let prevTagSize = v.getUint32(11 + dataSize, !le);\r\n            if (prevTagSize !== 11 + dataSize) {\r\n                Log.w(this.TAG, `Invalid PrevTagSize ${prevTagSize}`);\r\n            }\r\n\r\n            offset += 11 + dataSize + 4;  // tagBody + dataSize + prevTagSize\r\n        }\r\n\r\n        // dispatch parsed frames to consumer (typically, the remuxer)\r\n        if (this._isInitialMetadataDispatched()) {\r\n            if (this._dispatch && (this._audioTrack.length || this._videoTrack.length)) {\r\n                this._onDataAvailable(this._audioTrack, this._videoTrack);\r\n            }\r\n        }\r\n\r\n        return offset;  // consumed bytes, just equals latest offset index\r\n    }\r\n\r\n    _parseScriptData(arrayBuffer, dataOffset, dataSize) {\r\n        let scriptData = AMF.parseScriptData(arrayBuffer, dataOffset, dataSize);\r\n\r\n        if (scriptData.hasOwnProperty('onMetaData')) {\r\n            if (scriptData.onMetaData == null || typeof scriptData.onMetaData !== 'object') {\r\n                Log.w(this.TAG, 'Invalid onMetaData structure!');\r\n                return;\r\n            }\r\n            if (this._metadata) {\r\n                Log.w(this.TAG, 'Found another onMetaData tag!');\r\n            }\r\n            this._metadata = scriptData;\r\n            let onMetaData = this._metadata.onMetaData;\r\n\r\n            if (this._onMetaDataArrived) {\r\n                this._onMetaDataArrived(Object.assign({}, onMetaData));\r\n            }\r\n\r\n            if (typeof onMetaData.hasAudio === 'boolean') {  // hasAudio\r\n                if (this._hasAudioFlagOverrided === false) {\r\n                    this._hasAudio = onMetaData.hasAudio;\r\n                    this._mediaInfo.hasAudio = this._hasAudio;\r\n                }\r\n            }\r\n            if (typeof onMetaData.hasVideo === 'boolean') {  // hasVideo\r\n                if (this._hasVideoFlagOverrided === false) {\r\n                    this._hasVideo = onMetaData.hasVideo;\r\n                    this._mediaInfo.hasVideo = this._hasVideo;\r\n                }\r\n            }\r\n            if (typeof onMetaData.audiodatarate === 'number') {  // audiodatarate\r\n                this._mediaInfo.audioDataRate = onMetaData.audiodatarate;\r\n            }\r\n            if (typeof onMetaData.videodatarate === 'number') {  // videodatarate\r\n                this._mediaInfo.videoDataRate = onMetaData.videodatarate;\r\n            }\r\n            if (typeof onMetaData.width === 'number') {  // width\r\n                this._mediaInfo.width = onMetaData.width;\r\n            }\r\n            if (typeof onMetaData.height === 'number') {  // height\r\n                this._mediaInfo.height = onMetaData.height;\r\n            }\r\n            if (typeof onMetaData.duration === 'number') {  // duration\r\n                if (!this._durationOverrided) {\r\n                    let duration = Math.floor(onMetaData.duration * this._timescale);\r\n                    this._duration = duration;\r\n                    this._mediaInfo.duration = duration;\r\n                }\r\n            } else {\r\n                this._mediaInfo.duration = 0;\r\n            }\r\n            if (typeof onMetaData.framerate === 'number') {  // framerate\r\n                let fps_num = Math.floor(onMetaData.framerate * 1000);\r\n                if (fps_num > 0) {\r\n                    let fps = fps_num / 1000;\r\n                    this._referenceFrameRate.fixed = true;\r\n                    this._referenceFrameRate.fps = fps;\r\n                    this._referenceFrameRate.fps_num = fps_num;\r\n                    this._referenceFrameRate.fps_den = 1000;\r\n                    this._mediaInfo.fps = fps;\r\n                }\r\n            }\r\n            if (typeof onMetaData.keyframes === 'object') {  // keyframes\r\n                this._mediaInfo.hasKeyframesIndex = true;\r\n                let keyframes = onMetaData.keyframes;\r\n                this._mediaInfo.keyframesIndex = this._parseKeyframesIndex(keyframes);\r\n                onMetaData.keyframes = null;  // keyframes has been extracted, remove it\r\n            } else {\r\n                this._mediaInfo.hasKeyframesIndex = false;\r\n            }\r\n            this._dispatch = false;\r\n            this._mediaInfo.metadata = onMetaData;\r\n            Log.v(this.TAG, 'Parsed onMetaData');\r\n            if (this._mediaInfo.isComplete()) {\r\n                this._onMediaInfo(this._mediaInfo);\r\n            }\r\n        }\r\n\r\n        if (Object.keys(scriptData).length > 0) {\r\n            if (this._onScriptDataArrived) {\r\n                this._onScriptDataArrived(Object.assign({}, scriptData));\r\n            }\r\n        }\r\n    }\r\n\r\n    _parseKeyframesIndex(keyframes) {\r\n        let times = [];\r\n        let filepositions = [];\r\n\r\n        // ignore first keyframe which is actually AVC Sequence Header (AVCDecoderConfigurationRecord)\r\n        for (let i = 1; i < keyframes.times.length; i++) {\r\n            let time = this._timestampBase + Math.floor(keyframes.times[i] * 1000);\r\n            times.push(time);\r\n            filepositions.push(keyframes.filepositions[i]);\r\n        }\r\n\r\n        return {\r\n            times: times,\r\n            filepositions: filepositions\r\n        };\r\n    }\r\n\r\n    _parseAudioData(arrayBuffer, dataOffset, dataSize, tagTimestamp) {\r\n        if (dataSize <= 1) {\r\n            Log.w(this.TAG, 'Flv: Invalid audio packet, missing SoundData payload!');\r\n            return;\r\n        }\r\n\r\n        if (this._hasAudioFlagOverrided === true && this._hasAudio === false) {\r\n            // If hasAudio: false indicated explicitly in MediaDataSource,\r\n            // Ignore all the audio packets\r\n            return;\r\n        }\r\n\r\n        let le = this._littleEndian;\r\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\r\n\r\n        let soundSpec = v.getUint8(0);\r\n\r\n        let soundFormat = soundSpec >>> 4;\r\n        if (soundFormat !== 2 && soundFormat !== 10) {  // MP3 or AAC\r\n            this._onError(DemuxErrors.CODEC_UNSUPPORTED, 'Flv: Unsupported audio codec idx: ' + soundFormat);\r\n            return;\r\n        }\r\n\r\n        let soundRate = 0;\r\n        let soundRateIndex = (soundSpec & 12) >>> 2;\r\n        if (soundRateIndex >= 0 && soundRateIndex <= 4) {\r\n            soundRate = this._flvSoundRateTable[soundRateIndex];\r\n        } else {\r\n            this._onError(DemuxErrors.FORMAT_ERROR, 'Flv: Invalid audio sample rate idx: ' + soundRateIndex);\r\n            return;\r\n        }\r\n\r\n        let soundSize = (soundSpec & 2) >>> 1;  // unused\r\n        let soundType = (soundSpec & 1);\r\n\r\n\r\n        let meta = this._audioMetadata;\r\n        let track = this._audioTrack;\r\n\r\n        if (!meta) {\r\n            if (this._hasAudio === false && this._hasAudioFlagOverrided === false) {\r\n                this._hasAudio = true;\r\n                this._mediaInfo.hasAudio = true;\r\n            }\r\n\r\n            // initial metadata\r\n            meta = this._audioMetadata = {};\r\n            meta.type = 'audio';\r\n            meta.id = track.id;\r\n            meta.timescale = this._timescale;\r\n            meta.duration = this._duration;\r\n            meta.audioSampleRate = soundRate;\r\n            meta.channelCount = (soundType === 0 ? 1 : 2);\r\n        }\r\n\r\n        if (soundFormat === 10) {  // AAC\r\n            let aacData = this._parseAACAudioData(arrayBuffer, dataOffset + 1, dataSize - 1);\r\n            if (aacData == undefined) {\r\n                return;\r\n            }\r\n\r\n            if (aacData.packetType === 0) {  // AAC sequence header (AudioSpecificConfig)\r\n                if (meta.config) {\r\n                    Log.w(this.TAG, 'Found another AudioSpecificConfig!');\r\n                }\r\n                let misc = aacData.data;\r\n                meta.audioSampleRate = misc.samplingRate;\r\n                meta.channelCount = misc.channelCount;\r\n                meta.codec = misc.codec;\r\n                meta.originalCodec = misc.originalCodec;\r\n                meta.config = misc.config;\r\n                // The decode result of an aac sample is 1024 PCM samples\r\n                meta.refSampleDuration = 1024 / meta.audioSampleRate * meta.timescale;\r\n                Log.v(this.TAG, 'Parsed AudioSpecificConfig');\r\n\r\n                if (this._isInitialMetadataDispatched()) {\r\n                    // Non-initial metadata, force dispatch (or flush) parsed frames to remuxer\r\n                    if (this._dispatch && (this._audioTrack.length || this._videoTrack.length)) {\r\n                        this._onDataAvailable(this._audioTrack, this._videoTrack);\r\n                    }\r\n                } else {\r\n                    this._audioInitialMetadataDispatched = true;\r\n                }\r\n                // then notify new metadata\r\n                this._dispatch = false;\r\n                this._onTrackMetadata('audio', meta);\r\n\r\n                let mi = this._mediaInfo;\r\n                mi.audioCodec = meta.originalCodec;\r\n                mi.audioSampleRate = meta.audioSampleRate;\r\n                mi.audioChannelCount = meta.channelCount;\r\n                if (mi.hasVideo) {\r\n                    if (mi.videoCodec != null) {\r\n                        mi.mimeType = 'video/x-flv; codecs=\"' + mi.videoCodec + ',' + mi.audioCodec + '\"';\r\n                    }\r\n                } else {\r\n                    mi.mimeType = 'video/x-flv; codecs=\"' + mi.audioCodec + '\"';\r\n                }\r\n                if (mi.isComplete()) {\r\n                    this._onMediaInfo(mi);\r\n                }\r\n            } else if (aacData.packetType === 1) {  // AAC raw frame data\r\n                let dts = this._timestampBase + tagTimestamp;\r\n                let aacSample = {unit: aacData.data, length: aacData.data.byteLength, dts: dts, pts: dts};\r\n                track.samples.push(aacSample);\r\n                track.length += aacData.data.length;\r\n            } else {\r\n                Log.e(this.TAG, `Flv: Unsupported AAC data type ${aacData.packetType}`);\r\n            }\r\n        } else if (soundFormat === 2) {  // MP3\r\n            if (!meta.codec) {\r\n                // We need metadata for mp3 audio track, extract info from frame header\r\n                let misc = this._parseMP3AudioData(arrayBuffer, dataOffset + 1, dataSize - 1, true);\r\n                if (misc == undefined) {\r\n                    return;\r\n                }\r\n                meta.audioSampleRate = misc.samplingRate;\r\n                meta.channelCount = misc.channelCount;\r\n                meta.codec = misc.codec;\r\n                meta.originalCodec = misc.originalCodec;\r\n                // The decode result of an mp3 sample is 1152 PCM samples\r\n                meta.refSampleDuration = 1152 / meta.audioSampleRate * meta.timescale;\r\n                Log.v(this.TAG, 'Parsed MPEG Audio Frame Header');\r\n\r\n                this._audioInitialMetadataDispatched = true;\r\n                this._onTrackMetadata('audio', meta);\r\n\r\n                let mi = this._mediaInfo;\r\n                mi.audioCodec = meta.codec;\r\n                mi.audioSampleRate = meta.audioSampleRate;\r\n                mi.audioChannelCount = meta.channelCount;\r\n                mi.audioDataRate = misc.bitRate;\r\n                if (mi.hasVideo) {\r\n                    if (mi.videoCodec != null) {\r\n                        mi.mimeType = 'video/x-flv; codecs=\"' + mi.videoCodec + ',' + mi.audioCodec + '\"';\r\n                    }\r\n                } else {\r\n                    mi.mimeType = 'video/x-flv; codecs=\"' + mi.audioCodec + '\"';\r\n                }\r\n                if (mi.isComplete()) {\r\n                    this._onMediaInfo(mi);\r\n                }\r\n            }\r\n\r\n            // This packet is always a valid audio packet, extract it\r\n            let data = this._parseMP3AudioData(arrayBuffer, dataOffset + 1, dataSize - 1, false);\r\n            if (data == undefined) {\r\n                return;\r\n            }\r\n            let dts = this._timestampBase + tagTimestamp;\r\n            let mp3Sample = {unit: data, length: data.byteLength, dts: dts, pts: dts};\r\n            track.samples.push(mp3Sample);\r\n            track.length += data.length;\r\n        }\r\n    }\r\n\r\n    _parseAACAudioData(arrayBuffer, dataOffset, dataSize) {\r\n        if (dataSize <= 1) {\r\n            Log.w(this.TAG, 'Flv: Invalid AAC packet, missing AACPacketType or/and Data!');\r\n            return;\r\n        }\r\n\r\n        let result = {};\r\n        let array = new Uint8Array(arrayBuffer, dataOffset, dataSize);\r\n\r\n        result.packetType = array[0];\r\n\r\n        if (array[0] === 0) {\r\n            result.data = this._parseAACAudioSpecificConfig(arrayBuffer, dataOffset + 1, dataSize - 1);\r\n        } else {\r\n            result.data = array.subarray(1);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    _parseAACAudioSpecificConfig(arrayBuffer, dataOffset, dataSize) {\r\n        let array = new Uint8Array(arrayBuffer, dataOffset, dataSize);\r\n        let config = null;\r\n\r\n        /* Audio Object Type:\r\n           0: Null\r\n           1: AAC Main\r\n           2: AAC LC\r\n           3: AAC SSR (Scalable Sample Rate)\r\n           4: AAC LTP (Long Term Prediction)\r\n           5: HE-AAC / SBR (Spectral Band Replication)\r\n           6: AAC Scalable\r\n        */\r\n\r\n        let audioObjectType = 0;\r\n        let originalAudioObjectType = 0;\r\n        let audioExtensionObjectType = null;\r\n        let samplingIndex = 0;\r\n        let extensionSamplingIndex = null;\r\n\r\n        // 5 bits\r\n        audioObjectType = originalAudioObjectType = array[0] >>> 3;\r\n        // 4 bits\r\n        samplingIndex = ((array[0] & 0x07) << 1) | (array[1] >>> 7);\r\n        if (samplingIndex < 0 || samplingIndex >= this._mpegSamplingRates.length) {\r\n            this._onError(DemuxErrors.FORMAT_ERROR, 'Flv: AAC invalid sampling frequency index!');\r\n            return;\r\n        }\r\n\r\n        let samplingFrequence = this._mpegSamplingRates[samplingIndex];\r\n\r\n        // 4 bits\r\n        let channelConfig = (array[1] & 0x78) >>> 3;\r\n        if (channelConfig < 0 || channelConfig >= 8) {\r\n            this._onError(DemuxErrors.FORMAT_ERROR, 'Flv: AAC invalid channel configuration');\r\n            return;\r\n        }\r\n\r\n        if (audioObjectType === 5) {  // HE-AAC?\r\n            // 4 bits\r\n            extensionSamplingIndex = ((array[1] & 0x07) << 1) | (array[2] >>> 7);\r\n            // 5 bits\r\n            audioExtensionObjectType = (array[2] & 0x7C) >>> 2;\r\n        }\r\n\r\n        // workarounds for various browsers\r\n        let userAgent = self.navigator.userAgent.toLowerCase();\r\n\r\n        if (userAgent.indexOf('firefox') !== -1) {\r\n            // firefox: use SBR (HE-AAC) if freq less than 24kHz\r\n            if (samplingIndex >= 6) {\r\n                audioObjectType = 5;\r\n                config = new Array(4);\r\n                extensionSamplingIndex = samplingIndex - 3;\r\n            } else {  // use LC-AAC\r\n                audioObjectType = 2;\r\n                config = new Array(2);\r\n                extensionSamplingIndex = samplingIndex;\r\n            }\r\n        } else if (userAgent.indexOf('android') !== -1) {\r\n            // android: always use LC-AAC\r\n            audioObjectType = 2;\r\n            config = new Array(2);\r\n            extensionSamplingIndex = samplingIndex;\r\n        } else {\r\n            // for other browsers, e.g. chrome...\r\n            // Always use HE-AAC to make it easier to switch aac codec profile\r\n            audioObjectType = 5;\r\n            extensionSamplingIndex = samplingIndex;\r\n            config = new Array(4);\r\n\r\n            if (samplingIndex >= 6) {\r\n                extensionSamplingIndex = samplingIndex - 3;\r\n            } else if (channelConfig === 1) {  // Mono channel\r\n                audioObjectType = 2;\r\n                config = new Array(2);\r\n                extensionSamplingIndex = samplingIndex;\r\n            }\r\n        }\r\n\r\n        config[0]  = audioObjectType << 3;\r\n        config[0] |= (samplingIndex & 0x0F) >>> 1;\r\n        config[1]  = (samplingIndex & 0x0F) << 7;\r\n        config[1] |= (channelConfig & 0x0F) << 3;\r\n        if (audioObjectType === 5) {\r\n            config[1] |= ((extensionSamplingIndex & 0x0F) >>> 1);\r\n            config[2]  = (extensionSamplingIndex & 0x01) << 7;\r\n            // extended audio object type: force to 2 (LC-AAC)\r\n            config[2] |= (2 << 2);\r\n            config[3]  = 0;\r\n        }\r\n\r\n        return {\r\n            config: config,\r\n            samplingRate: samplingFrequence,\r\n            channelCount: channelConfig,\r\n            codec: 'mp4a.40.' + audioObjectType,\r\n            originalCodec: 'mp4a.40.' + originalAudioObjectType\r\n        };\r\n    }\r\n\r\n    _parseMP3AudioData(arrayBuffer, dataOffset, dataSize, requestHeader) {\r\n        if (dataSize < 4) {\r\n            Log.w(this.TAG, 'Flv: Invalid MP3 packet, header missing!');\r\n            return;\r\n        }\r\n\r\n        let le = this._littleEndian;\r\n        let array = new Uint8Array(arrayBuffer, dataOffset, dataSize);\r\n        let result = null;\r\n\r\n        if (requestHeader) {\r\n            if (array[0] !== 0xFF) {\r\n                return;\r\n            }\r\n            let ver = (array[1] >>> 3) & 0x03;\r\n            let layer = (array[1] & 0x06) >> 1;\r\n\r\n            let bitrate_index = (array[2] & 0xF0) >>> 4;\r\n            let sampling_freq_index = (array[2] & 0x0C) >>> 2;\r\n\r\n            let channel_mode = (array[3] >>> 6) & 0x03;\r\n            let channel_count = channel_mode !== 3 ? 2 : 1;\r\n\r\n            let sample_rate = 0;\r\n            let bit_rate = 0;\r\n            let object_type = 34;  // Layer-3, listed in MPEG-4 Audio Object Types\r\n\r\n            let codec = 'mp3';\r\n\r\n            switch (ver) {\r\n                case 0:  // MPEG 2.5\r\n                    sample_rate = this._mpegAudioV25SampleRateTable[sampling_freq_index];\r\n                    break;\r\n                case 2:  // MPEG 2\r\n                    sample_rate = this._mpegAudioV20SampleRateTable[sampling_freq_index];\r\n                    break;\r\n                case 3:  // MPEG 1\r\n                    sample_rate = this._mpegAudioV10SampleRateTable[sampling_freq_index];\r\n                    break;\r\n            }\r\n\r\n            switch (layer) {\r\n                case 1:  // Layer 3\r\n                    object_type = 34;\r\n                    if (bitrate_index < this._mpegAudioL3BitRateTable.length) {\r\n                        bit_rate = this._mpegAudioL3BitRateTable[bitrate_index];\r\n                    }\r\n                    break;\r\n                case 2:  // Layer 2\r\n                    object_type = 33;\r\n                    if (bitrate_index < this._mpegAudioL2BitRateTable.length) {\r\n                        bit_rate = this._mpegAudioL2BitRateTable[bitrate_index];\r\n                    }\r\n                    break;\r\n                case 3:  // Layer 1\r\n                    object_type = 32;\r\n                    if (bitrate_index < this._mpegAudioL1BitRateTable.length) {\r\n                        bit_rate = this._mpegAudioL1BitRateTable[bitrate_index];\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            result = {\r\n                bitRate: bit_rate,\r\n                samplingRate: sample_rate,\r\n                channelCount: channel_count,\r\n                codec: codec,\r\n                originalCodec: codec\r\n            };\r\n        } else {\r\n            result = array;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    _parseVideoData(arrayBuffer, dataOffset, dataSize, tagTimestamp, tagPosition) {\r\n        if (dataSize <= 1) {\r\n            Log.w(this.TAG, 'Flv: Invalid video packet, missing VideoData payload!');\r\n            return;\r\n        }\r\n\r\n        if (this._hasVideoFlagOverrided === true && this._hasVideo === false) {\r\n            // If hasVideo: false indicated explicitly in MediaDataSource,\r\n            // Ignore all the video packets\r\n            return;\r\n        }\r\n\r\n        let spec = (new Uint8Array(arrayBuffer, dataOffset, dataSize))[0];\r\n\r\n        let frameType = (spec & 240) >>> 4;\r\n        let codecId = spec & 15;\r\n\r\n        if (codecId !== 7) {\r\n            this._onError(DemuxErrors.CODEC_UNSUPPORTED, `Flv: Unsupported codec in video frame: ${codecId}`);\r\n            return;\r\n        }\r\n\r\n        this._parseAVCVideoPacket(arrayBuffer, dataOffset + 1, dataSize - 1, tagTimestamp, tagPosition, frameType);\r\n    }\r\n\r\n    _parseAVCVideoPacket(arrayBuffer, dataOffset, dataSize, tagTimestamp, tagPosition, frameType) {\r\n        if (dataSize < 4) {\r\n            Log.w(this.TAG, 'Flv: Invalid AVC packet, missing AVCPacketType or/and CompositionTime');\r\n            return;\r\n        }\r\n\r\n        let le = this._littleEndian;\r\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\r\n\r\n        let packetType = v.getUint8(0);\r\n        let cts_unsigned = v.getUint32(0, !le) & 0x00FFFFFF;\r\n        let cts = (cts_unsigned << 8) >> 8;  // convert to 24-bit signed int\r\n\r\n        if (packetType === 0) {  // AVCDecoderConfigurationRecord\r\n            this._parseAVCDecoderConfigurationRecord(arrayBuffer, dataOffset + 4, dataSize - 4);\r\n        } else if (packetType === 1) {  // One or more Nalus\r\n            this._parseAVCVideoData(arrayBuffer, dataOffset + 4, dataSize - 4, tagTimestamp, tagPosition, frameType, cts);\r\n        } else if (packetType === 2) {\r\n            // empty, AVC end of sequence\r\n        } else {\r\n            this._onError(DemuxErrors.FORMAT_ERROR, `Flv: Invalid video packet type ${packetType}`);\r\n            return;\r\n        }\r\n    }\r\n\r\n    _parseAVCDecoderConfigurationRecord(arrayBuffer, dataOffset, dataSize) {\r\n        if (dataSize < 7) {\r\n            Log.w(this.TAG, 'Flv: Invalid AVCDecoderConfigurationRecord, lack of data!');\r\n            return;\r\n        }\r\n\r\n        let meta = this._videoMetadata;\r\n        let track = this._videoTrack;\r\n        let le = this._littleEndian;\r\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\r\n\r\n        if (!meta) {\r\n            if (this._hasVideo === false && this._hasVideoFlagOverrided === false) {\r\n                this._hasVideo = true;\r\n                this._mediaInfo.hasVideo = true;\r\n            }\r\n\r\n            meta = this._videoMetadata = {};\r\n            meta.type = 'video';\r\n            meta.id = track.id;\r\n            meta.timescale = this._timescale;\r\n            meta.duration = this._duration;\r\n        } else {\r\n            if (typeof meta.avcc !== 'undefined') {\r\n                Log.w(this.TAG, 'Found another AVCDecoderConfigurationRecord!');\r\n            }\r\n        }\r\n\r\n        let version = v.getUint8(0);  // configurationVersion\r\n        let avcProfile = v.getUint8(1);  // avcProfileIndication\r\n        let profileCompatibility = v.getUint8(2);  // profile_compatibility\r\n        let avcLevel = v.getUint8(3);  // AVCLevelIndication\r\n\r\n        if (version !== 1 || avcProfile === 0) {\r\n            this._onError(DemuxErrors.FORMAT_ERROR, 'Flv: Invalid AVCDecoderConfigurationRecord');\r\n            return;\r\n        }\r\n\r\n        this._naluLengthSize = (v.getUint8(4) & 3) + 1;  // lengthSizeMinusOne\r\n        if (this._naluLengthSize !== 3 && this._naluLengthSize !== 4) {  // holy shit!!!\r\n            this._onError(DemuxErrors.FORMAT_ERROR, `Flv: Strange NaluLengthSizeMinusOne: ${this._naluLengthSize - 1}`);\r\n            return;\r\n        }\r\n\r\n        let spsCount = v.getUint8(5) & 31;  // numOfSequenceParameterSets\r\n        if (spsCount === 0) {\r\n            this._onError(DemuxErrors.FORMAT_ERROR, 'Flv: Invalid AVCDecoderConfigurationRecord: No SPS');\r\n            return;\r\n        } else if (spsCount > 1) {\r\n            Log.w(this.TAG, `Flv: Strange AVCDecoderConfigurationRecord: SPS Count = ${spsCount}`);\r\n        }\r\n\r\n        let offset = 6;\r\n\r\n        for (let i = 0; i < spsCount; i++) {\r\n            let len = v.getUint16(offset, !le);  // sequenceParameterSetLength\r\n            offset += 2;\r\n\r\n            if (len === 0) {\r\n                continue;\r\n            }\r\n\r\n            // Notice: Nalu without startcode header (00 00 00 01)\r\n            let sps = new Uint8Array(arrayBuffer, dataOffset + offset, len);\r\n            offset += len;\r\n\r\n            let config = SPSParser.parseSPS(sps);\r\n            if (i !== 0) {\r\n                // ignore other sps's config\r\n                continue;\r\n            }\r\n\r\n            meta.codecWidth = config.codec_size.width;\r\n            meta.codecHeight = config.codec_size.height;\r\n            meta.presentWidth = config.present_size.width;\r\n            meta.presentHeight = config.present_size.height;\r\n\r\n            meta.profile = config.profile_string;\r\n            meta.level = config.level_string;\r\n            meta.bitDepth = config.bit_depth;\r\n            meta.chromaFormat = config.chroma_format;\r\n            meta.sarRatio = config.sar_ratio;\r\n            meta.frameRate = config.frame_rate;\r\n\r\n            if (config.frame_rate.fixed === false ||\r\n                config.frame_rate.fps_num === 0 ||\r\n                config.frame_rate.fps_den === 0) {\r\n                meta.frameRate = this._referenceFrameRate;\r\n            }\r\n\r\n            let fps_den = meta.frameRate.fps_den;\r\n            let fps_num = meta.frameRate.fps_num;\r\n            meta.refSampleDuration = meta.timescale * (fps_den / fps_num);\r\n\r\n            let codecArray = sps.subarray(1, 4);\r\n            let codecString = 'avc1.';\r\n            for (let j = 0; j < 3; j++) {\r\n                let h = codecArray[j].toString(16);\r\n                if (h.length < 2) {\r\n                    h = '0' + h;\r\n                }\r\n                codecString += h;\r\n            }\r\n            meta.codec = codecString;\r\n\r\n            let mi = this._mediaInfo;\r\n            mi.width = meta.codecWidth;\r\n            mi.height = meta.codecHeight;\r\n            mi.fps = meta.frameRate.fps;\r\n            mi.profile = meta.profile;\r\n            mi.level = meta.level;\r\n            mi.refFrames = config.ref_frames;\r\n            mi.chromaFormat = config.chroma_format_string;\r\n            mi.sarNum = meta.sarRatio.width;\r\n            mi.sarDen = meta.sarRatio.height;\r\n            mi.videoCodec = codecString;\r\n\r\n            if (mi.hasAudio) {\r\n                if (mi.audioCodec != null) {\r\n                    mi.mimeType = 'video/x-flv; codecs=\"' + mi.videoCodec + ',' + mi.audioCodec + '\"';\r\n                }\r\n            } else {\r\n                mi.mimeType = 'video/x-flv; codecs=\"' + mi.videoCodec + '\"';\r\n            }\r\n            if (mi.isComplete()) {\r\n                this._onMediaInfo(mi);\r\n            }\r\n        }\r\n\r\n        let ppsCount = v.getUint8(offset);  // numOfPictureParameterSets\r\n        if (ppsCount === 0) {\r\n            this._onError(DemuxErrors.FORMAT_ERROR, 'Flv: Invalid AVCDecoderConfigurationRecord: No PPS');\r\n            return;\r\n        } else if (ppsCount > 1) {\r\n            Log.w(this.TAG, `Flv: Strange AVCDecoderConfigurationRecord: PPS Count = ${ppsCount}`);\r\n        }\r\n\r\n        offset++;\r\n\r\n        for (let i = 0; i < ppsCount; i++) {\r\n            let len = v.getUint16(offset, !le);  // pictureParameterSetLength\r\n            offset += 2;\r\n\r\n            if (len === 0) {\r\n                continue;\r\n            }\r\n\r\n            // pps is useless for extracting video information\r\n            offset += len;\r\n        }\r\n\r\n        meta.avcc = new Uint8Array(dataSize);\r\n        meta.avcc.set(new Uint8Array(arrayBuffer, dataOffset, dataSize), 0);\r\n        Log.v(this.TAG, 'Parsed AVCDecoderConfigurationRecord');\r\n\r\n        if (this._isInitialMetadataDispatched()) {\r\n            // flush parsed frames\r\n            if (this._dispatch && (this._audioTrack.length || this._videoTrack.length)) {\r\n                this._onDataAvailable(this._audioTrack, this._videoTrack);\r\n            }\r\n        } else {\r\n            this._videoInitialMetadataDispatched = true;\r\n        }\r\n        // notify new metadata\r\n        this._dispatch = false;\r\n        this._onTrackMetadata('video', meta);\r\n    }\r\n\r\n    _parseAVCVideoData(arrayBuffer, dataOffset, dataSize, tagTimestamp, tagPosition, frameType, cts) {\r\n        let le = this._littleEndian;\r\n        let v = new DataView(arrayBuffer, dataOffset, dataSize);\r\n\r\n        let units = [], length = 0;\r\n\r\n        let offset = 0;\r\n        const lengthSize = this._naluLengthSize;\r\n        let dts = this._timestampBase + tagTimestamp;\r\n        let keyframe = (frameType === 1);  // from FLV Frame Type constants\r\n\r\n        while (offset < dataSize) {\r\n            if (offset + 4 >= dataSize) {\r\n                Log.w(this.TAG, `Malformed Nalu near timestamp ${dts}, offset = ${offset}, dataSize = ${dataSize}`);\r\n                break;  // data not enough for next Nalu\r\n            }\r\n            // Nalu with length-header (AVC1)\r\n            let naluSize = v.getUint32(offset, !le);  // Big-Endian read\r\n            if (lengthSize === 3) {\r\n                naluSize >>>= 8;\r\n            }\r\n            if (naluSize > dataSize - lengthSize) {\r\n                Log.w(this.TAG, `Malformed Nalus near timestamp ${dts}, NaluSize > DataSize!`);\r\n                return;\r\n            }\r\n\r\n            let unitType = v.getUint8(offset + lengthSize) & 0x1F;\r\n\r\n            if (unitType === 5) {  // IDR\r\n                keyframe = true;\r\n            }\r\n\r\n            let data = new Uint8Array(arrayBuffer, dataOffset + offset, lengthSize + naluSize);\r\n            let unit = {type: unitType, data: data};\r\n            units.push(unit);\r\n            length += data.byteLength;\r\n\r\n            offset += lengthSize + naluSize;\r\n        }\r\n\r\n        if (units.length) {\r\n            let track = this._videoTrack;\r\n            let avcSample = {\r\n                units: units,\r\n                length: length,\r\n                isKeyframe: keyframe,\r\n                dts: dts,\r\n                cts: cts,\r\n                pts: (dts + cts)\r\n            };\r\n            if (keyframe) {\r\n                avcSample.fileposition = tagPosition;\r\n            }\r\n            track.samples.push(avcSample);\r\n            track.length += length;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default FLVDemuxer;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport ExpGolomb from './exp-golomb.js';\r\n\r\nclass SPSParser {\r\n\r\n    static _ebsp2rbsp(uint8array) {\r\n        let src = uint8array;\r\n        let src_length = src.byteLength;\r\n        let dst = new Uint8Array(src_length);\r\n        let dst_idx = 0;\r\n\r\n        for (let i = 0; i < src_length; i++) {\r\n            if (i >= 2) {\r\n                // Unescape: Skip 0x03 after 00 00\r\n                if (src[i] === 0x03 && src[i - 1] === 0x00 && src[i - 2] === 0x00) {\r\n                    continue;\r\n                }\r\n            }\r\n            dst[dst_idx] = src[i];\r\n            dst_idx++;\r\n        }\r\n\r\n        return new Uint8Array(dst.buffer, 0, dst_idx);\r\n    }\r\n\r\n    static parseSPS(uint8array) {\r\n        let rbsp = SPSParser._ebsp2rbsp(uint8array);\r\n        let gb = new ExpGolomb(rbsp);\r\n\r\n        gb.readByte();\r\n        let profile_idc = gb.readByte();  // profile_idc\r\n        gb.readByte();  // constraint_set_flags[5] + reserved_zero[3]\r\n        let level_idc = gb.readByte();  // level_idc\r\n        gb.readUEG();  // seq_parameter_set_id\r\n\r\n        let profile_string = SPSParser.getProfileString(profile_idc);\r\n        let level_string = SPSParser.getLevelString(level_idc);\r\n        let chroma_format_idc = 1;\r\n        let chroma_format = 420;\r\n        let chroma_format_table = [0, 420, 422, 444];\r\n        let bit_depth = 8;\r\n\r\n        if (profile_idc === 100 || profile_idc === 110 || profile_idc === 122 ||\r\n            profile_idc === 244 || profile_idc === 44 || profile_idc === 83 ||\r\n            profile_idc === 86 || profile_idc === 118 || profile_idc === 128 ||\r\n            profile_idc === 138 || profile_idc === 144) {\r\n\r\n            chroma_format_idc = gb.readUEG();\r\n            if (chroma_format_idc === 3) {\r\n                gb.readBits(1);  // separate_colour_plane_flag\r\n            }\r\n            if (chroma_format_idc <= 3) {\r\n                chroma_format = chroma_format_table[chroma_format_idc];\r\n            }\r\n\r\n            bit_depth = gb.readUEG() + 8;  // bit_depth_luma_minus8\r\n            gb.readUEG();  // bit_depth_chroma_minus8\r\n            gb.readBits(1);  // qpprime_y_zero_transform_bypass_flag\r\n            if (gb.readBool()) {  // seq_scaling_matrix_present_flag\r\n                let scaling_list_count = (chroma_format_idc !== 3) ? 8 : 12;\r\n                for (let i = 0; i < scaling_list_count; i++) {\r\n                    if (gb.readBool()) {  // seq_scaling_list_present_flag\r\n                        if (i < 6) {\r\n                            SPSParser._skipScalingList(gb, 16);\r\n                        } else {\r\n                            SPSParser._skipScalingList(gb, 64);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        gb.readUEG();  // log2_max_frame_num_minus4\r\n        let pic_order_cnt_type = gb.readUEG();\r\n        if (pic_order_cnt_type === 0) {\r\n            gb.readUEG();  // log2_max_pic_order_cnt_lsb_minus_4\r\n        } else if (pic_order_cnt_type === 1) {\r\n            gb.readBits(1);  // delta_pic_order_always_zero_flag\r\n            gb.readSEG();  // offset_for_non_ref_pic\r\n            gb.readSEG();  // offset_for_top_to_bottom_field\r\n            let num_ref_frames_in_pic_order_cnt_cycle = gb.readUEG();\r\n            for (let i = 0; i < num_ref_frames_in_pic_order_cnt_cycle; i++) {\r\n                gb.readSEG();  // offset_for_ref_frame\r\n            }\r\n        }\r\n        let ref_frames = gb.readUEG();  // max_num_ref_frames\r\n        gb.readBits(1);  // gaps_in_frame_num_value_allowed_flag\r\n\r\n        let pic_width_in_mbs_minus1 = gb.readUEG();\r\n        let pic_height_in_map_units_minus1 = gb.readUEG();\r\n\r\n        let frame_mbs_only_flag = gb.readBits(1);\r\n        if (frame_mbs_only_flag === 0) {\r\n            gb.readBits(1);  // mb_adaptive_frame_field_flag\r\n        }\r\n        gb.readBits(1);  // direct_8x8_inference_flag\r\n\r\n        let frame_crop_left_offset = 0;\r\n        let frame_crop_right_offset = 0;\r\n        let frame_crop_top_offset = 0;\r\n        let frame_crop_bottom_offset = 0;\r\n\r\n        let frame_cropping_flag = gb.readBool();\r\n        if (frame_cropping_flag) {\r\n            frame_crop_left_offset = gb.readUEG();\r\n            frame_crop_right_offset = gb.readUEG();\r\n            frame_crop_top_offset = gb.readUEG();\r\n            frame_crop_bottom_offset = gb.readUEG();\r\n        }\r\n\r\n        let sar_width = 1, sar_height = 1;\r\n        let fps = 0, fps_fixed = true, fps_num = 0, fps_den = 0;\r\n\r\n        let vui_parameters_present_flag = gb.readBool();\r\n        if (vui_parameters_present_flag) {\r\n            if (gb.readBool()) {  // aspect_ratio_info_present_flag\r\n                let aspect_ratio_idc = gb.readByte();\r\n                let sar_w_table = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2];\r\n                let sar_h_table = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33,  99, 3, 2, 1];\r\n\r\n                if (aspect_ratio_idc > 0 && aspect_ratio_idc < 16) {\r\n                    sar_width = sar_w_table[aspect_ratio_idc - 1];\r\n                    sar_height = sar_h_table[aspect_ratio_idc - 1];\r\n                } else if (aspect_ratio_idc === 255) {\r\n                    sar_width = gb.readByte() << 8 | gb.readByte();\r\n                    sar_height = gb.readByte() << 8 | gb.readByte();\r\n                }\r\n            }\r\n\r\n            if (gb.readBool()) {  // overscan_info_present_flag\r\n                gb.readBool();  // overscan_appropriate_flag\r\n            }\r\n            if (gb.readBool()) {  // video_signal_type_present_flag\r\n                gb.readBits(4);  // video_format & video_full_range_flag\r\n                if (gb.readBool()) {  // colour_description_present_flag\r\n                    gb.readBits(24);  // colour_primaries & transfer_characteristics & matrix_coefficients\r\n                }\r\n            }\r\n            if (gb.readBool()) {  // chroma_loc_info_present_flag\r\n                gb.readUEG();  // chroma_sample_loc_type_top_field\r\n                gb.readUEG();  // chroma_sample_loc_type_bottom_field\r\n            }\r\n            if (gb.readBool()) {  // timing_info_present_flag\r\n                let num_units_in_tick = gb.readBits(32);\r\n                let time_scale = gb.readBits(32);\r\n                fps_fixed = gb.readBool();  // fixed_frame_rate_flag\r\n\r\n                fps_num = time_scale;\r\n                fps_den = num_units_in_tick * 2;\r\n                fps = fps_num / fps_den;\r\n            }\r\n        }\r\n\r\n        let sarScale = 1;\r\n        if (sar_width !== 1 || sar_height !== 1) {\r\n            sarScale = sar_width / sar_height;\r\n        }\r\n\r\n        let crop_unit_x = 0, crop_unit_y = 0;\r\n        if (chroma_format_idc === 0) {\r\n            crop_unit_x = 1;\r\n            crop_unit_y = 2 - frame_mbs_only_flag;\r\n        } else {\r\n            let sub_wc = (chroma_format_idc === 3) ? 1 : 2;\r\n            let sub_hc = (chroma_format_idc === 1) ? 2 : 1;\r\n            crop_unit_x = sub_wc;\r\n            crop_unit_y = sub_hc * (2 - frame_mbs_only_flag);\r\n        }\r\n\r\n        let codec_width = (pic_width_in_mbs_minus1 + 1) * 16;\r\n        let codec_height = (2 - frame_mbs_only_flag) * ((pic_height_in_map_units_minus1 + 1) * 16);\r\n\r\n        codec_width -= (frame_crop_left_offset + frame_crop_right_offset) * crop_unit_x;\r\n        codec_height -= (frame_crop_top_offset + frame_crop_bottom_offset) * crop_unit_y;\r\n\r\n        let present_width = Math.ceil(codec_width * sarScale);\r\n\r\n        gb.destroy();\r\n        gb = null;\r\n\r\n        return {\r\n            profile_string: profile_string,  // baseline, high, high10, ...\r\n            level_string: level_string,  // 3, 3.1, 4, 4.1, 5, 5.1, ...\r\n            bit_depth: bit_depth,  // 8bit, 10bit, ...\r\n            ref_frames: ref_frames,\r\n            chroma_format: chroma_format,  // 4:2:0, 4:2:2, ...\r\n            chroma_format_string: SPSParser.getChromaFormatString(chroma_format),\r\n\r\n            frame_rate: {\r\n                fixed: fps_fixed,\r\n                fps: fps,\r\n                fps_den: fps_den,\r\n                fps_num: fps_num\r\n            },\r\n\r\n            sar_ratio: {\r\n                width: sar_width,\r\n                height: sar_height\r\n            },\r\n\r\n            codec_size: {\r\n                width: codec_width,\r\n                height: codec_height\r\n            },\r\n\r\n            present_size: {\r\n                width: present_width,\r\n                height: codec_height\r\n            }\r\n        };\r\n    }\r\n\r\n    static _skipScalingList(gb, count) {\r\n        let last_scale = 8, next_scale = 8;\r\n        let delta_scale = 0;\r\n        for (let i = 0; i < count; i++) {\r\n            if (next_scale !== 0) {\r\n                delta_scale = gb.readSEG();\r\n                next_scale = (last_scale + delta_scale + 256) % 256;\r\n            }\r\n            last_scale = (next_scale === 0) ? last_scale : next_scale;\r\n        }\r\n    }\r\n\r\n    static getProfileString(profile_idc) {\r\n        switch (profile_idc) {\r\n            case 66:\r\n                return 'Baseline';\r\n            case 77:\r\n                return 'Main';\r\n            case 88:\r\n                return 'Extended';\r\n            case 100:\r\n                return 'High';\r\n            case 110:\r\n                return 'High10';\r\n            case 122:\r\n                return 'High422';\r\n            case 244:\r\n                return 'High444';\r\n            default:\r\n                return 'Unknown';\r\n        }\r\n    }\r\n\r\n    static getLevelString(level_idc) {\r\n        return (level_idc / 10).toFixed(1);\r\n    }\r\n\r\n    static getChromaFormatString(chroma) {\r\n        switch (chroma) {\r\n            case 420:\r\n                return '4:2:0';\r\n            case 422:\r\n                return '4:2:2';\r\n            case 444:\r\n                return '4:4:4';\r\n            default:\r\n                return 'Unknown';\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default SPSParser;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Polyfill from './utils/polyfill.js';\r\nimport Features from './core/features.js';\r\nimport {BaseLoader, LoaderStatus, LoaderErrors} from './io/loader.js';\r\nimport FlvPlayer from './player/flv-player.js';\r\nimport NativePlayer from './player/native-player.js';\r\nimport PlayerEvents from './player/player-events.js';\r\nimport {ErrorTypes, ErrorDetails} from './player/player-errors.js';\r\nimport LoggingControl from './utils/logging-control.js';\r\nimport {InvalidArgumentException} from './utils/exception.js';\r\n\r\n// here are all the interfaces\r\n\r\n// install polyfills\r\nPolyfill.install();\r\n\r\n\r\n// factory method\r\nfunction createPlayer(mediaDataSource, optionalConfig) {\r\n    let mds = mediaDataSource;\r\n    if (mds == null || typeof mds !== 'object') {\r\n        throw new InvalidArgumentException('MediaDataSource must be an javascript object!');\r\n    }\r\n\r\n    if (!mds.hasOwnProperty('type')) {\r\n        throw new InvalidArgumentException('MediaDataSource must has type field to indicate video file type!');\r\n    }\r\n\r\n    switch (mds.type) {\r\n        case 'flv':\r\n            return new FlvPlayer(mds, optionalConfig);\r\n        default:\r\n            return new NativePlayer(mds, optionalConfig);\r\n    }\r\n}\r\n\r\n\r\n// feature detection\r\nfunction isSupported() {\r\n    return Features.supportMSEH264Playback();\r\n}\r\n\r\nfunction getFeatureList() {\r\n    return Features.getFeatureList();\r\n}\r\n\r\n\r\n// interfaces\r\nlet flvjs = {};\r\n\r\nflvjs.createPlayer = createPlayer;\r\nflvjs.isSupported = isSupported;\r\nflvjs.getFeatureList = getFeatureList;\r\n\r\nflvjs.BaseLoader = BaseLoader;\r\nflvjs.LoaderStatus = LoaderStatus;\r\nflvjs.LoaderErrors = LoaderErrors;\r\n\r\nflvjs.Events = PlayerEvents;\r\nflvjs.ErrorTypes = ErrorTypes;\r\nflvjs.ErrorDetails = ErrorDetails;\r\n\r\nflvjs.FlvPlayer = FlvPlayer;\r\nflvjs.NativePlayer = NativePlayer;\r\nflvjs.LoggingControl = LoggingControl;\r\n\r\nObject.defineProperty(flvjs, 'version', {\r\n    enumerable: true,\r\n    get: function () {\r\n        // replaced by browserify-versionify transform\r\n        return '__VERSION__';\r\n    }\r\n});\r\n\r\nexport default flvjs;","// entry/index file\r\n\r\n// make it compatible with browserify's umd wrapper\r\nmodule.exports = require('./flv.js').default;\r\n","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Log from '../utils/logger.js';\r\nimport Browser from '../utils/browser.js';\r\nimport {BaseLoader, LoaderStatus, LoaderErrors} from './loader.js';\r\nimport {RuntimeException} from '../utils/exception.js';\r\n\r\n/* fetch + stream IO loader. Currently working on chrome 43+.\r\n * fetch provides a better alternative http API to XMLHttpRequest\r\n *\r\n * fetch spec   https://fetch.spec.whatwg.org/\r\n * stream spec  https://streams.spec.whatwg.org/\r\n */\r\nclass FetchStreamLoader extends BaseLoader {\r\n\r\n    static isSupported() {\r\n        try {\r\n            // fetch + stream is broken on Microsoft Edge. Disable before build 15048.\r\n            // see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8196907/\r\n            // Fixed in Jan 10, 2017. Build 15048+ removed from blacklist.\r\n            let isWorkWellEdge = Browser.msedge && Browser.version.minor >= 15048;\r\n            let browserNotBlacklisted = Browser.msedge ? isWorkWellEdge : true;\r\n            return (self.fetch && self.ReadableStream && browserNotBlacklisted);\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    constructor(seekHandler, config) {\r\n        super('fetch-stream-loader');\r\n        this.TAG = 'FetchStreamLoader';\r\n\r\n        this._seekHandler = seekHandler;\r\n        this._config = config;\r\n        this._needStash = true;\r\n\r\n        this._requestAbort = false;\r\n        this._contentLength = null;\r\n        this._receivedLength = 0;\r\n    }\r\n\r\n    destroy() {\r\n        if (this.isWorking()) {\r\n            this.abort();\r\n        }\r\n        super.destroy();\r\n    }\r\n\r\n    open(dataSource, range) {\r\n        this._dataSource = dataSource;\r\n        this._range = range;\r\n\r\n        let sourceURL = dataSource.url;\r\n        if (this._config.reuseRedirectedURL && dataSource.redirectedURL != undefined) {\r\n            sourceURL = dataSource.redirectedURL;\r\n        }\r\n\r\n        let seekConfig = this._seekHandler.getConfig(sourceURL, range);\r\n\r\n        let headers = new self.Headers();\r\n\r\n        if (typeof seekConfig.headers === 'object') {\r\n            let configHeaders = seekConfig.headers;\r\n            for (let key in configHeaders) {\r\n                if (configHeaders.hasOwnProperty(key)) {\r\n                    headers.append(key, configHeaders[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        let params = {\r\n            method: 'GET',\r\n            headers: headers,\r\n            mode: 'cors',\r\n            cache: 'default',\r\n            // The default policy of Fetch API in the whatwg standard\r\n            // Safari incorrectly indicates 'no-referrer' as default policy, fuck it\r\n            referrerPolicy: 'no-referrer-when-downgrade'\r\n        };\r\n\r\n        // add additional headers\r\n        if (typeof this._config.headers === 'object') {\r\n            for (let key in this._config.headers) {\r\n                headers.append(key, this._config.headers[key]);\r\n            }\r\n        }\r\n\r\n        // cors is enabled by default\r\n        if (dataSource.cors === false) {\r\n            // no-cors means 'disregard cors policy', which can only be used in ServiceWorker\r\n            params.mode = 'same-origin';\r\n        }\r\n\r\n        // withCredentials is disabled by default\r\n        if (dataSource.withCredentials) {\r\n            params.credentials = 'include';\r\n        }\r\n\r\n        // referrerPolicy from config\r\n        if (dataSource.referrerPolicy) {\r\n            params.referrerPolicy = dataSource.referrerPolicy;\r\n        }\r\n\r\n        this._status = LoaderStatus.kConnecting;\r\n        self.fetch(seekConfig.url, params).then((res) => {\r\n            if (this._requestAbort) {\r\n                this._requestAbort = false;\r\n                this._status = LoaderStatus.kIdle;\r\n                return;\r\n            }\r\n            if (res.ok && (res.status >= 200 && res.status <= 299)) {\r\n                if (res.url !== seekConfig.url) {\r\n                    if (this._onURLRedirect) {\r\n                        let redirectedURL = this._seekHandler.removeURLParameters(res.url);\r\n                        this._onURLRedirect(redirectedURL);\r\n                    }\r\n                }\r\n\r\n                let lengthHeader = res.headers.get('Content-Length');\r\n                if (lengthHeader != null) {\r\n                    this._contentLength = parseInt(lengthHeader);\r\n                    if (this._contentLength !== 0) {\r\n                        if (this._onContentLengthKnown) {\r\n                            this._onContentLengthKnown(this._contentLength);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return this._pump.call(this, res.body.getReader());\r\n            } else {\r\n                this._status = LoaderStatus.kError;\r\n                if (this._onError) {\r\n                    this._onError(LoaderErrors.HTTP_STATUS_CODE_INVALID, {code: res.status, msg: res.statusText});\r\n                } else {\r\n                    throw new RuntimeException('FetchStreamLoader: Http code invalid, ' + res.status + ' ' + res.statusText);\r\n                }\r\n            }\r\n        }).catch((e) => {\r\n            this._status = LoaderStatus.kError;\r\n            if (this._onError) {\r\n                this._onError(LoaderErrors.EXCEPTION, {code: -1, msg: e.message});\r\n            } else {\r\n                throw e;\r\n            }\r\n        });\r\n    }\r\n\r\n    abort() {\r\n        this._requestAbort = true;\r\n    }\r\n\r\n    _pump(reader) {  // ReadableStreamReader\r\n        return reader.read().then((result) => {\r\n            if (result.done) {\r\n                // First check received length\r\n                if (this._contentLength !== null && this._receivedLength < this._contentLength) {\r\n                    // Report Early-EOF\r\n                    this._status = LoaderStatus.kError;\r\n                    let type = LoaderErrors.EARLY_EOF;\r\n                    let info = {code: -1, msg: 'Fetch stream meet Early-EOF'};\r\n                    if (this._onError) {\r\n                        this._onError(type, info);\r\n                    } else {\r\n                        throw new RuntimeException(info.msg);\r\n                    }\r\n                } else {\r\n                    // OK. Download complete\r\n                    this._status = LoaderStatus.kComplete;\r\n                    if (this._onComplete) {\r\n                        this._onComplete(this._range.from, this._range.from + this._receivedLength - 1);\r\n                    }\r\n                }\r\n            } else {\r\n                if (this._requestAbort === true) {\r\n                    this._requestAbort = false;\r\n                    this._status = LoaderStatus.kComplete;\r\n                    return reader.cancel();\r\n                }\r\n\r\n                this._status = LoaderStatus.kBuffering;\r\n\r\n                let chunk = result.value.buffer;\r\n                let byteStart = this._range.from + this._receivedLength;\r\n                this._receivedLength += chunk.byteLength;\r\n\r\n                if (this._onDataArrival) {\r\n                    this._onDataArrival(chunk, byteStart, this._receivedLength);\r\n                }\r\n\r\n                this._pump(reader);\r\n            }\r\n        }).catch((e) => {\r\n            if (e.code === 11 && Browser.msedge) {  // InvalidStateError on Microsoft Edge\r\n                // Workaround: Edge may throw InvalidStateError after ReadableStreamReader.cancel() call\r\n                // Ignore the unknown exception.\r\n                // Related issue: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11265202/\r\n                return;\r\n            }\r\n\r\n            this._status = LoaderStatus.kError;\r\n            let type = 0;\r\n            let info = null;\r\n\r\n            if ((e.code === 19 || e.message === 'network error') && // NETWORK_ERR\r\n                (this._contentLength === null ||\r\n                (this._contentLength !== null && this._receivedLength < this._contentLength))) {\r\n                type = LoaderErrors.EARLY_EOF;\r\n                info = {code: e.code, msg: 'Fetch stream meet Early-EOF'};\r\n            } else {\r\n                type = LoaderErrors.EXCEPTION;\r\n                info = {code: e.code, msg: e.message};\r\n            }\r\n\r\n            if (this._onError) {\r\n                this._onError(type, info);\r\n            } else {\r\n                throw new RuntimeException(info.msg);\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default FetchStreamLoader;\r\n","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Log from '../utils/logger.js';\r\nimport SpeedSampler from './speed-sampler.js';\r\nimport {LoaderStatus, LoaderErrors} from './loader.js';\r\nimport FetchStreamLoader from './fetch-stream-loader.js';\r\nimport MozChunkedLoader from './xhr-moz-chunked-loader.js';\r\nimport MSStreamLoader from './xhr-msstream-loader.js';\r\nimport RangeLoader from './xhr-range-loader.js';\r\nimport WebSocketLoader from './websocket-loader.js';\r\nimport RangeSeekHandler from './range-seek-handler.js';\r\nimport ParamSeekHandler from './param-seek-handler.js';\r\nimport {RuntimeException, IllegalStateException, InvalidArgumentException} from '../utils/exception.js';\r\n\r\n/**\r\n * DataSource: {\r\n *     url: string,\r\n *     filesize: number,\r\n *     cors: boolean,\r\n *     withCredentials: boolean\r\n * }\r\n * \r\n */\r\n\r\n// Manage IO Loaders\r\nclass IOController {\r\n\r\n    constructor(dataSource, config, extraData) {\r\n        this.TAG = 'IOController';\r\n\r\n        this._config = config;\r\n        this._extraData = extraData;\r\n\r\n        this._stashInitialSize = 1024 * 384;  // default initial size: 384KB\r\n        if (config.stashInitialSize != undefined && config.stashInitialSize > 0) {\r\n            // apply from config\r\n            this._stashInitialSize = config.stashInitialSize;\r\n        }\r\n\r\n        this._stashUsed = 0;\r\n        this._stashSize = this._stashInitialSize;\r\n        this._bufferSize = 1024 * 1024 * 3;  // initial size: 3MB\r\n        this._stashBuffer = new ArrayBuffer(this._bufferSize);\r\n        this._stashByteStart = 0;\r\n        this._enableStash = true;\r\n        if (config.enableStashBuffer === false) {\r\n            this._enableStash = false;\r\n        }\r\n\r\n        this._loader = null;\r\n        this._loaderClass = null;\r\n        this._seekHandler = null;\r\n\r\n        this._dataSource = dataSource;\r\n        this._isWebSocketURL = /wss?:\\/\\/(.+?)/.test(dataSource.url);\r\n        this._refTotalLength = dataSource.filesize ? dataSource.filesize : null;\r\n        this._totalLength = this._refTotalLength;\r\n        this._fullRequestFlag = false;\r\n        this._currentRange = null;\r\n        this._redirectedURL = null;\r\n\r\n        this._speedNormalized = 0;\r\n        this._speedSampler = new SpeedSampler();\r\n        this._speedNormalizeList = [64, 128, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096];\r\n\r\n        this._isEarlyEofReconnecting = false;\r\n\r\n        this._paused = false;\r\n        this._resumeFrom = 0;\r\n\r\n        this._onDataArrival = null;\r\n        this._onSeeked = null;\r\n        this._onError = null;\r\n        this._onComplete = null;\r\n        this._onRedirect = null;\r\n        this._onRecoveredEarlyEof = null;\r\n\r\n        this._selectSeekHandler();\r\n        this._selectLoader();\r\n        this._createLoader();\r\n    }\r\n\r\n    destroy() {\r\n        if (this._loader.isWorking()) {\r\n            this._loader.abort();\r\n        }\r\n        this._loader.destroy();\r\n        this._loader = null;\r\n        this._loaderClass = null;\r\n        this._dataSource = null;\r\n        this._stashBuffer = null;\r\n        this._stashUsed = this._stashSize = this._bufferSize = this._stashByteStart = 0;\r\n        this._currentRange = null;\r\n        this._speedSampler = null;\r\n\r\n        this._isEarlyEofReconnecting = false;\r\n\r\n        this._onDataArrival = null;\r\n        this._onSeeked = null;\r\n        this._onError = null;\r\n        this._onComplete = null;\r\n        this._onRedirect = null;\r\n        this._onRecoveredEarlyEof = null;\r\n\r\n        this._extraData = null;\r\n    }\r\n\r\n    isWorking() {\r\n        return this._loader && this._loader.isWorking() && !this._paused;\r\n    }\r\n\r\n    isPaused() {\r\n        return this._paused;\r\n    }\r\n\r\n    get status() {\r\n        return this._loader.status;\r\n    }\r\n\r\n    get extraData() {\r\n        return this._extraData;\r\n    }\r\n\r\n    set extraData(data) {\r\n        this._extraData = data;\r\n    }\r\n\r\n    // prototype: function onDataArrival(chunks: ArrayBuffer, byteStart: number): number\r\n    get onDataArrival() {\r\n        return this._onDataArrival;\r\n    }\r\n\r\n    set onDataArrival(callback) {\r\n        this._onDataArrival = callback;\r\n    }\r\n\r\n    get onSeeked() {\r\n        return this._onSeeked;\r\n    }\r\n\r\n    set onSeeked(callback) {\r\n        this._onSeeked = callback;\r\n    }\r\n\r\n    // prototype: function onError(type: number, info: {code: number, msg: string}): void\r\n    get onError() {\r\n        return this._onError;\r\n    }\r\n\r\n    set onError(callback) {\r\n        this._onError = callback;\r\n    }\r\n\r\n    get onComplete() {\r\n        return this._onComplete;\r\n    }\r\n\r\n    set onComplete(callback) {\r\n        this._onComplete = callback;\r\n    }\r\n\r\n    get onRedirect() {\r\n        return this._onRedirect;\r\n    }\r\n\r\n    set onRedirect(callback) {\r\n        this._onRedirect = callback;\r\n    }\r\n\r\n    get onRecoveredEarlyEof() {\r\n        return this._onRecoveredEarlyEof;\r\n    }\r\n\r\n    set onRecoveredEarlyEof(callback) {\r\n        this._onRecoveredEarlyEof = callback;\r\n    }\r\n\r\n    get currentURL() {\r\n        return this._dataSource.url;\r\n    }\r\n\r\n    get hasRedirect() {\r\n        return (this._redirectedURL != null || this._dataSource.redirectedURL != undefined);\r\n    }\r\n\r\n    get currentRedirectedURL() {\r\n        return this._redirectedURL || this._dataSource.redirectedURL;\r\n    }\r\n\r\n    // in KB/s\r\n    get currentSpeed() {\r\n        if (this._loaderClass === RangeLoader) {\r\n            // SpeedSampler is inaccuracy if loader is RangeLoader\r\n            return this._loader.currentSpeed;\r\n        }\r\n        return this._speedSampler.lastSecondKBps;\r\n    }\r\n\r\n    get loaderType() {\r\n        return this._loader.type;\r\n    }\r\n\r\n    _selectSeekHandler() {\r\n        let config = this._config;\r\n\r\n        if (config.seekType === 'range') {\r\n            this._seekHandler = new RangeSeekHandler(this._config.rangeLoadZeroStart);\r\n        } else if (config.seekType === 'param') {\r\n            let paramStart = config.seekParamStart || 'bstart';\r\n            let paramEnd = config.seekParamEnd || 'bend';\r\n\r\n            this._seekHandler = new ParamSeekHandler(paramStart, paramEnd);\r\n        } else if (config.seekType === 'custom') {\r\n            if (typeof config.customSeekHandler !== 'function') {\r\n                throw new InvalidArgumentException('Custom seekType specified in config but invalid customSeekHandler!');\r\n            }\r\n            this._seekHandler = new config.customSeekHandler();\r\n        } else {\r\n            throw new InvalidArgumentException(`Invalid seekType in config: ${config.seekType}`);\r\n        }\r\n    }\r\n\r\n    _selectLoader() {\r\n        if (this._config.customLoader != null) {\r\n            this._loaderClass = this._config.customLoader;\r\n        } else if (this._isWebSocketURL) {\r\n            this._loaderClass = WebSocketLoader;\r\n        } else if (FetchStreamLoader.isSupported()) {\r\n            this._loaderClass = FetchStreamLoader;\r\n        } else if (MozChunkedLoader.isSupported()) {\r\n            this._loaderClass = MozChunkedLoader;\r\n        } else if (RangeLoader.isSupported()) {\r\n            this._loaderClass = RangeLoader;\r\n        } else {\r\n            throw new RuntimeException('Your browser doesn\\'t support xhr with arraybuffer responseType!');\r\n        }\r\n    }\r\n\r\n    _createLoader() {\r\n        this._loader = new this._loaderClass(this._seekHandler, this._config);\r\n        if (this._loader.needStashBuffer === false) {\r\n            this._enableStash = false;\r\n        }\r\n        this._loader.onContentLengthKnown = this._onContentLengthKnown.bind(this);\r\n        this._loader.onURLRedirect = this._onURLRedirect.bind(this);\r\n        this._loader.onDataArrival = this._onLoaderChunkArrival.bind(this);\r\n        this._loader.onComplete = this._onLoaderComplete.bind(this);\r\n        this._loader.onError = this._onLoaderError.bind(this);\r\n    }\r\n\r\n    open(optionalFrom) {\r\n        this._currentRange = {from: 0, to: -1};\r\n        if (optionalFrom) {\r\n            this._currentRange.from = optionalFrom;\r\n        }\r\n\r\n        this._speedSampler.reset();\r\n        if (!optionalFrom) {\r\n            this._fullRequestFlag = true;\r\n        }\r\n\r\n        this._loader.open(this._dataSource, Object.assign({}, this._currentRange));\r\n    }\r\n\r\n    abort() {\r\n        this._loader.abort();\r\n\r\n        if (this._paused) {\r\n            this._paused = false;\r\n            this._resumeFrom = 0;\r\n        }\r\n    }\r\n\r\n    pause() {\r\n        if (this.isWorking()) {\r\n            this._loader.abort();\r\n\r\n            if (this._stashUsed !== 0) {\r\n                this._resumeFrom = this._stashByteStart;\r\n                this._currentRange.to = this._stashByteStart - 1;\r\n            } else {\r\n                this._resumeFrom = this._currentRange.to + 1;\r\n            }\r\n            this._stashUsed = 0;\r\n            this._stashByteStart = 0;\r\n            this._paused = true;\r\n        }\r\n    }\r\n\r\n    resume() {\r\n        if (this._paused) {\r\n            this._paused = false;\r\n            let bytes = this._resumeFrom;\r\n            this._resumeFrom = 0;\r\n            this._internalSeek(bytes, true);\r\n        }\r\n    }\r\n\r\n    seek(bytes) {\r\n        this._paused = false;\r\n        this._stashUsed = 0;\r\n        this._stashByteStart = 0;\r\n        this._internalSeek(bytes, true);\r\n    }\r\n\r\n    /**\r\n     * When seeking request is from media seeking, unconsumed stash data should be dropped\r\n     * However, stash data shouldn't be dropped if seeking requested from http reconnection\r\n     *\r\n     * @dropUnconsumed: Ignore and discard all unconsumed data in stash buffer\r\n     */\r\n    _internalSeek(bytes, dropUnconsumed) {\r\n        if (this._loader.isWorking()) {\r\n            this._loader.abort();\r\n        }\r\n\r\n        // dispatch & flush stash buffer before seek\r\n        this._flushStashBuffer(dropUnconsumed);\r\n\r\n        this._loader.destroy();\r\n        this._loader = null;\r\n\r\n        let requestRange = {from: bytes, to: -1};\r\n        this._currentRange = {from: requestRange.from, to: -1};\r\n\r\n        this._speedSampler.reset();\r\n        this._stashSize = this._stashInitialSize;\r\n        this._createLoader();\r\n        this._loader.open(this._dataSource, requestRange);\r\n\r\n        if (this._onSeeked) {\r\n            this._onSeeked();\r\n        }\r\n    }\r\n\r\n    updateUrl(url) {\r\n        if (!url || typeof url !== 'string' || url.length === 0) {\r\n            throw new InvalidArgumentException('Url must be a non-empty string!');\r\n        }\r\n\r\n        this._dataSource.url = url;\r\n\r\n        // TODO: replace with new url\r\n    }\r\n\r\n    _expandBuffer(expectedBytes) {\r\n        let bufferNewSize = this._stashSize;\r\n        while (bufferNewSize + 1024 * 1024 * 1 < expectedBytes) {\r\n            bufferNewSize *= 2;\r\n        }\r\n\r\n        bufferNewSize += 1024 * 1024 * 1;  // bufferSize = stashSize + 1MB\r\n        if (bufferNewSize === this._bufferSize) {\r\n            return;\r\n        }\r\n\r\n        let newBuffer = new ArrayBuffer(bufferNewSize);\r\n\r\n        if (this._stashUsed > 0) {  // copy existing data into new buffer\r\n            let stashOldArray = new Uint8Array(this._stashBuffer, 0, this._stashUsed);\r\n            let stashNewArray = new Uint8Array(newBuffer, 0, bufferNewSize);\r\n            stashNewArray.set(stashOldArray, 0);\r\n        }\r\n\r\n        this._stashBuffer = newBuffer;\r\n        this._bufferSize = bufferNewSize;\r\n    }\r\n\r\n    _normalizeSpeed(input) {\r\n        let list = this._speedNormalizeList;\r\n        let last = list.length - 1;\r\n        let mid = 0;\r\n        let lbound = 0;\r\n        let ubound = last;\r\n\r\n        if (input < list[0]) {\r\n            return list[0];\r\n        }\r\n\r\n        // binary search\r\n        while (lbound <= ubound) {\r\n            mid = lbound + Math.floor((ubound - lbound) / 2);\r\n            if (mid === last || (input >= list[mid] && input < list[mid + 1])) {\r\n                return list[mid];\r\n            } else if (list[mid] < input) {\r\n                lbound = mid + 1;\r\n            } else {\r\n                ubound = mid - 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    _adjustStashSize(normalized) {\r\n        let stashSizeKB = 0;\r\n\r\n        if (this._config.isLive) {\r\n            // live stream: always use single normalized speed for size of stashSizeKB\r\n            stashSizeKB = normalized;\r\n        } else {\r\n            if (normalized < 512) {\r\n                stashSizeKB = normalized;\r\n            } else if (normalized >= 512 && normalized <= 1024) {\r\n                stashSizeKB = Math.floor(normalized * 1.5);\r\n            } else {\r\n                stashSizeKB = normalized * 2;\r\n            }\r\n        }\r\n\r\n        if (stashSizeKB > 8192) {\r\n            stashSizeKB = 8192;\r\n        }\r\n\r\n        let bufferSize = stashSizeKB * 1024 + 1024 * 1024 * 1;  // stashSize + 1MB\r\n        if (this._bufferSize < bufferSize) {\r\n            this._expandBuffer(bufferSize);\r\n        }\r\n        this._stashSize = stashSizeKB * 1024;\r\n    }\r\n\r\n    _dispatchChunks(chunks, byteStart) {\r\n        this._currentRange.to = byteStart + chunks.byteLength - 1;\r\n        return this._onDataArrival(chunks, byteStart);\r\n    }\r\n\r\n    _onURLRedirect(redirectedURL) {\r\n        this._redirectedURL = redirectedURL;\r\n        if (this._onRedirect) {\r\n            this._onRedirect(redirectedURL);\r\n        }\r\n    }\r\n\r\n    _onContentLengthKnown(contentLength) {\r\n        if (contentLength && this._fullRequestFlag) {\r\n            this._totalLength = contentLength;\r\n            this._fullRequestFlag = false;\r\n        }\r\n    }\r\n\r\n    _onLoaderChunkArrival(chunk, byteStart, receivedLength) {\r\n        if (!this._onDataArrival) {\r\n            throw new IllegalStateException('IOController: No existing consumer (onDataArrival) callback!');\r\n        }\r\n        if (this._paused) {\r\n            return;\r\n        }\r\n        if (this._isEarlyEofReconnecting) {\r\n            // Auto-reconnect for EarlyEof succeed, notify to upper-layer by callback\r\n            this._isEarlyEofReconnecting = false;\r\n            if (this._onRecoveredEarlyEof) {\r\n                this._onRecoveredEarlyEof();\r\n            }\r\n        }\r\n\r\n        this._speedSampler.addBytes(chunk.byteLength);\r\n\r\n        // adjust stash buffer size according to network speed dynamically\r\n        let KBps = this._speedSampler.lastSecondKBps;\r\n        if (KBps !== 0) {\r\n            let normalized = this._normalizeSpeed(KBps);\r\n            if (this._speedNormalized !== normalized) {\r\n                this._speedNormalized = normalized;\r\n                this._adjustStashSize(normalized);\r\n            }\r\n        }\r\n\r\n        if (!this._enableStash) {  // disable stash\r\n            if (this._stashUsed === 0) {\r\n                // dispatch chunk directly to consumer;\r\n                // check ret value (consumed bytes) and stash unconsumed to stashBuffer\r\n                let consumed = this._dispatchChunks(chunk, byteStart);\r\n                if (consumed < chunk.byteLength) {  // unconsumed data remain.\r\n                    let remain = chunk.byteLength - consumed;\r\n                    if (remain > this._bufferSize) {\r\n                        this._expandBuffer(remain);\r\n                    }\r\n                    let stashArray = new Uint8Array(this._stashBuffer, 0, this._bufferSize);\r\n                    stashArray.set(new Uint8Array(chunk, consumed), 0);\r\n                    this._stashUsed += remain;\r\n                    this._stashByteStart = byteStart + consumed;\r\n                }\r\n            } else {\r\n                // else: Merge chunk into stashBuffer, and dispatch stashBuffer to consumer.\r\n                if (this._stashUsed + chunk.byteLength > this._bufferSize) {\r\n                    this._expandBuffer(this._stashUsed + chunk.byteLength);\r\n                }\r\n                let stashArray = new Uint8Array(this._stashBuffer, 0, this._bufferSize);\r\n                stashArray.set(new Uint8Array(chunk), this._stashUsed);\r\n                this._stashUsed += chunk.byteLength;\r\n                let consumed = this._dispatchChunks(this._stashBuffer.slice(0, this._stashUsed), this._stashByteStart);\r\n                if (consumed < this._stashUsed && consumed > 0) {  // unconsumed data remain\r\n                    let remainArray = new Uint8Array(this._stashBuffer, consumed);\r\n                    stashArray.set(remainArray, 0);\r\n                }\r\n                this._stashUsed -= consumed;\r\n                this._stashByteStart += consumed;\r\n            }\r\n        } else {  // enable stash\r\n            if (this._stashUsed === 0 && this._stashByteStart === 0) {  // seeked? or init chunk?\r\n                // This is the first chunk after seek action\r\n                this._stashByteStart = byteStart;\r\n            }\r\n            if (this._stashUsed + chunk.byteLength <= this._stashSize) {\r\n                // just stash\r\n                let stashArray = new Uint8Array(this._stashBuffer, 0, this._stashSize);\r\n                stashArray.set(new Uint8Array(chunk), this._stashUsed);\r\n                this._stashUsed += chunk.byteLength;\r\n            } else {  // stashUsed + chunkSize > stashSize, size limit exceeded\r\n                let stashArray = new Uint8Array(this._stashBuffer, 0, this._bufferSize);\r\n                if (this._stashUsed > 0) {  // There're stash datas in buffer\r\n                    // dispatch the whole stashBuffer, and stash remain data\r\n                    // then append chunk to stashBuffer (stash)\r\n                    let buffer = this._stashBuffer.slice(0, this._stashUsed);\r\n                    let consumed = this._dispatchChunks(buffer, this._stashByteStart);\r\n                    if (consumed < buffer.byteLength) {\r\n                        if (consumed > 0) {\r\n                            let remainArray = new Uint8Array(buffer, consumed);\r\n                            stashArray.set(remainArray, 0);\r\n                            this._stashUsed = remainArray.byteLength;\r\n                            this._stashByteStart += consumed;\r\n                        }\r\n                    } else {\r\n                        this._stashUsed = 0;\r\n                        this._stashByteStart += consumed;\r\n                    }\r\n                    if (this._stashUsed + chunk.byteLength > this._bufferSize) {\r\n                        this._expandBuffer(this._stashUsed + chunk.byteLength);\r\n                        stashArray = new Uint8Array(this._stashBuffer, 0, this._bufferSize);\r\n                    }\r\n                    stashArray.set(new Uint8Array(chunk), this._stashUsed);\r\n                    this._stashUsed += chunk.byteLength;\r\n                } else {  // stash buffer empty, but chunkSize > stashSize (oh, holy shit)\r\n                    // dispatch chunk directly and stash remain data\r\n                    let consumed = this._dispatchChunks(chunk, byteStart);\r\n                    if (consumed < chunk.byteLength) {\r\n                        let remain = chunk.byteLength - consumed;\r\n                        if (remain > this._bufferSize) {\r\n                            this._expandBuffer(remain);\r\n                            stashArray = new Uint8Array(this._stashBuffer, 0, this._bufferSize);\r\n                        }\r\n                        stashArray.set(new Uint8Array(chunk, consumed), 0);\r\n                        this._stashUsed += remain;\r\n                        this._stashByteStart = byteStart + consumed;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _flushStashBuffer(dropUnconsumed) {\r\n        if (this._stashUsed > 0) {\r\n            let buffer = this._stashBuffer.slice(0, this._stashUsed);\r\n            let consumed = this._dispatchChunks(buffer, this._stashByteStart);\r\n            let remain = buffer.byteLength - consumed;\r\n\r\n            if (consumed < buffer.byteLength) {\r\n                if (dropUnconsumed) {\r\n                    Log.w(this.TAG, `${remain} bytes unconsumed data remain when flush buffer, dropped`);\r\n                } else {\r\n                    if (consumed > 0) {\r\n                        let stashArray = new Uint8Array(this._stashBuffer, 0, this._bufferSize);\r\n                        let remainArray = new Uint8Array(buffer, consumed);\r\n                        stashArray.set(remainArray, 0);\r\n                        this._stashUsed = remainArray.byteLength;\r\n                        this._stashByteStart += consumed;\r\n                    }\r\n                    return 0;\r\n                }\r\n            }\r\n            this._stashUsed = 0;\r\n            this._stashByteStart = 0;\r\n            return remain;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    _onLoaderComplete(from, to) {\r\n        // Force-flush stash buffer, and drop unconsumed data\r\n        this._flushStashBuffer(true);\r\n\r\n        if (this._onComplete) {\r\n            this._onComplete(this._extraData);\r\n        }\r\n    }\r\n\r\n    _onLoaderError(type, data) {\r\n        Log.e(this.TAG, `Loader error, code = ${data.code}, msg = ${data.msg}`);\r\n\r\n        this._flushStashBuffer(false);\r\n\r\n        if (this._isEarlyEofReconnecting) {\r\n            // Auto-reconnect for EarlyEof failed, throw UnrecoverableEarlyEof error to upper-layer\r\n            this._isEarlyEofReconnecting = false;\r\n            type = LoaderErrors.UNRECOVERABLE_EARLY_EOF;\r\n        }\r\n\r\n        switch (type) {\r\n            case LoaderErrors.EARLY_EOF: {\r\n                if (!this._config.isLive) {\r\n                    // Do internal http reconnect if not live stream\r\n                    if (this._totalLength) {\r\n                        let nextFrom = this._currentRange.to + 1;\r\n                        if (nextFrom < this._totalLength) {\r\n                            Log.w(this.TAG, 'Connection lost, trying reconnect...');\r\n                            this._isEarlyEofReconnecting = true;\r\n                            this._internalSeek(nextFrom, false);\r\n                        }\r\n                        return;\r\n                    }\r\n                    // else: We don't know totalLength, throw UnrecoverableEarlyEof\r\n                }\r\n                // live stream: throw UnrecoverableEarlyEof error to upper-layer\r\n                type = LoaderErrors.UNRECOVERABLE_EARLY_EOF;\r\n                break;\r\n            }\r\n            case LoaderErrors.UNRECOVERABLE_EARLY_EOF:\r\n            case LoaderErrors.CONNECTING_TIMEOUT:\r\n            case LoaderErrors.HTTP_STATUS_CODE_INVALID:\r\n            case LoaderErrors.EXCEPTION:\r\n                break;\r\n        }\r\n\r\n        if (this._onError) {\r\n            this._onError(type, data);\r\n        } else {\r\n            throw new RuntimeException('IOException: ' + data.msg);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default IOController;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport {NotImplementedException} from '../utils/exception.js';\r\n\r\nexport const LoaderStatus = {\r\n    kIdle: 0,\r\n    kConnecting: 1,\r\n    kBuffering: 2,\r\n    kError: 3,\r\n    kComplete: 4\r\n};\r\n\r\nexport const LoaderErrors = {\r\n    OK: 'OK',\r\n    EXCEPTION: 'Exception',\r\n    HTTP_STATUS_CODE_INVALID: 'HttpStatusCodeInvalid',\r\n    CONNECTING_TIMEOUT: 'ConnectingTimeout',\r\n    EARLY_EOF: 'EarlyEof',\r\n    UNRECOVERABLE_EARLY_EOF: 'UnrecoverableEarlyEof'\r\n};\r\n\r\n/* Loader has callbacks which have following prototypes:\r\n *     function onContentLengthKnown(contentLength: number): void\r\n *     function onURLRedirect(url: string): void\r\n *     function onDataArrival(chunk: ArrayBuffer, byteStart: number, receivedLength: number): void\r\n *     function onError(errorType: number, errorInfo: {code: number, msg: string}): void\r\n *     function onComplete(rangeFrom: number, rangeTo: number): void\r\n */\r\nexport class BaseLoader {\r\n\r\n    constructor(typeName) {\r\n        this._type = typeName || 'undefined';\r\n        this._status = LoaderStatus.kIdle;\r\n        this._needStash = false;\r\n        // callbacks\r\n        this._onContentLengthKnown = null;\r\n        this._onURLRedirect = null;\r\n        this._onDataArrival = null;\r\n        this._onError = null;\r\n        this._onComplete = null;\r\n    }\r\n\r\n    destroy() {\r\n        this._status = LoaderStatus.kIdle;\r\n        this._onContentLengthKnown = null;\r\n        this._onURLRedirect = null;\r\n        this._onDataArrival = null;\r\n        this._onError = null;\r\n        this._onComplete = null;\r\n    }\r\n\r\n    isWorking() {\r\n        return this._status === LoaderStatus.kConnecting || this._status === LoaderStatus.kBuffering;\r\n    }\r\n\r\n    get type() {\r\n        return this._type;\r\n    }\r\n\r\n    get status() {\r\n        return this._status;\r\n    }\r\n\r\n    get needStashBuffer() {\r\n        return this._needStash;\r\n    }\r\n\r\n    get onContentLengthKnown() {\r\n        return this._onContentLengthKnown;\r\n    }\r\n\r\n    set onContentLengthKnown(callback) {\r\n        this._onContentLengthKnown = callback;\r\n    }\r\n\r\n    get onURLRedirect() {\r\n        return this._onURLRedirect;\r\n    }\r\n\r\n    set onURLRedirect(callback) {\r\n        this._onURLRedirect = callback;\r\n    }\r\n\r\n    get onDataArrival() {\r\n        return this._onDataArrival;\r\n    }\r\n\r\n    set onDataArrival(callback) {\r\n        this._onDataArrival = callback;\r\n    }\r\n\r\n    get onError() {\r\n        return this._onError;\r\n    }\r\n\r\n    set onError(callback) {\r\n        this._onError = callback;\r\n    }\r\n\r\n    get onComplete() {\r\n        return this._onComplete;\r\n    }\r\n\r\n    set onComplete(callback) {\r\n        this._onComplete = callback;\r\n    }\r\n\r\n    // pure virtual\r\n    open(dataSource, range) {\r\n        throw new NotImplementedException('Unimplemented abstract function!');\r\n    }\r\n\r\n    abort() {\r\n        throw new NotImplementedException('Unimplemented abstract function!');\r\n    }\r\n\r\n\r\n}","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nclass ParamSeekHandler {\r\n\r\n    constructor(paramStart, paramEnd) {\r\n        this._startName = paramStart;\r\n        this._endName = paramEnd;\r\n    }\r\n\r\n    getConfig(baseUrl, range) {\r\n        let url = baseUrl;\r\n\r\n        if (range.from !== 0 || range.to !== -1) {\r\n            let needAnd = true;\r\n            if (url.indexOf('?') === -1) {\r\n                url += '?';\r\n                needAnd = false;\r\n            }\r\n\r\n            if (needAnd) {\r\n                url += '&';\r\n            }\r\n\r\n            url += `${this._startName}=${range.from.toString()}`;\r\n\r\n            if (range.to !== -1) {\r\n                url += `&${this._endName}=${range.to.toString()}`;\r\n            }\r\n        }\r\n\r\n        return {\r\n            url: url,\r\n            headers: {}\r\n        };\r\n    }\r\n\r\n    removeURLParameters(seekedURL) {\r\n        let baseURL = seekedURL.split('?')[0];\r\n        let params = undefined;\r\n\r\n        let queryIndex = seekedURL.indexOf('?');\r\n        if (queryIndex !== -1) {\r\n            params = seekedURL.substring(queryIndex + 1);\r\n        }\r\n\r\n        let resultParams = '';\r\n\r\n        if (params != undefined && params.length > 0) {\r\n            let pairs = params.split('&');\r\n\r\n            for (let i = 0; i < pairs.length; i++) {\r\n                let pair = pairs[i].split('=');\r\n                let requireAnd = (i > 0);\r\n\r\n                if (pair[0] !== this._startName && pair[0] !== this._endName) {\r\n                    if (requireAnd) {\r\n                        resultParams += '&';\r\n                    }\r\n                    resultParams += pairs[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        return (resultParams.length === 0) ? baseURL : baseURL + '?' + resultParams;\r\n    }\r\n\r\n}\r\n\r\nexport default ParamSeekHandler;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nclass RangeSeekHandler {\r\n\r\n    constructor(zeroStart) {\r\n        this._zeroStart = zeroStart || false;\r\n    }\r\n\r\n    getConfig(url, range) {\r\n        let headers = {};\r\n\r\n        if (range.from !== 0 || range.to !== -1) {\r\n            let param;\r\n            if (range.to !== -1) {\r\n                param = `bytes=${range.from.toString()}-${range.to.toString()}`;\r\n            } else {\r\n                param = `bytes=${range.from.toString()}-`;\r\n            }\r\n            headers['Range'] = param;\r\n        } else if (this._zeroStart) {\r\n            headers['Range'] = 'bytes=0-';\r\n        }\r\n\r\n        return {\r\n            url: url,\r\n            headers: headers\r\n        };\r\n    }\r\n\r\n    removeURLParameters(seekedURL) {\r\n        return seekedURL;\r\n    }\r\n\r\n}\r\n\r\nexport default RangeSeekHandler;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n// Utility class to calculate realtime network I/O speed\r\nclass SpeedSampler {\r\n\r\n    constructor() {\r\n        // milliseconds\r\n        this._firstCheckpoint = 0;\r\n        this._lastCheckpoint = 0;\r\n        this._intervalBytes = 0;\r\n        this._totalBytes = 0;\r\n        this._lastSecondBytes = 0;\r\n\r\n        // compatibility detection\r\n        if (self.performance && self.performance.now) {\r\n            this._now = self.performance.now.bind(self.performance);\r\n        } else {\r\n            this._now = Date.now;\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this._firstCheckpoint = this._lastCheckpoint = 0;\r\n        this._totalBytes = this._intervalBytes = 0;\r\n        this._lastSecondBytes = 0;\r\n    }\r\n\r\n    addBytes(bytes) {\r\n        if (this._firstCheckpoint === 0) {\r\n            this._firstCheckpoint = this._now();\r\n            this._lastCheckpoint = this._firstCheckpoint;\r\n            this._intervalBytes += bytes;\r\n            this._totalBytes += bytes;\r\n        } else if (this._now() - this._lastCheckpoint < 1000) {\r\n            this._intervalBytes += bytes;\r\n            this._totalBytes += bytes;\r\n        } else {  // duration >= 1000\r\n            this._lastSecondBytes = this._intervalBytes;\r\n            this._intervalBytes = bytes;\r\n            this._totalBytes += bytes;\r\n            this._lastCheckpoint = this._now();\r\n        }\r\n    }\r\n\r\n    get currentKBps() {\r\n        this.addBytes(0);\r\n\r\n        let durationSeconds = (this._now() - this._lastCheckpoint) / 1000;\r\n        if (durationSeconds == 0) durationSeconds = 1;\r\n        return (this._intervalBytes / durationSeconds) / 1024;\r\n    }\r\n\r\n    get lastSecondKBps() {\r\n        this.addBytes(0);\r\n\r\n        if (this._lastSecondBytes !== 0) {\r\n            return this._lastSecondBytes / 1024;\r\n        } else {  // lastSecondBytes === 0\r\n            if (this._now() - this._lastCheckpoint >= 500) {\r\n                // if time interval since last checkpoint has exceeded 500ms\r\n                // the speed is nearly accurate\r\n                return this.currentKBps;\r\n            } else {\r\n                // We don't know\r\n                return 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    get averageKBps() {\r\n        let durationSeconds = (this._now() - this._firstCheckpoint) / 1000;\r\n        return (this._totalBytes / durationSeconds) / 1024;\r\n    }\r\n\r\n}\r\n\r\nexport default SpeedSampler;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Log from '../utils/logger.js';\r\nimport {BaseLoader, LoaderStatus, LoaderErrors} from './loader.js';\r\nimport {RuntimeException} from '../utils/exception.js';\r\n\r\n// For FLV over WebSocket live stream\r\nclass WebSocketLoader extends BaseLoader {\r\n\r\n    static isSupported() {\r\n        try {\r\n            return (typeof self.WebSocket !== 'undefined');\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    constructor() {\r\n        super('websocket-loader');\r\n        this.TAG = 'WebSocketLoader';\r\n\r\n        this._needStash = true;\r\n\r\n        this._ws = null;\r\n        this._requestAbort = false;\r\n        this._receivedLength = 0;\r\n    }\r\n\r\n    destroy() {\r\n        if (this._ws) {\r\n            this.abort();\r\n        }\r\n        super.destroy();\r\n    }\r\n\r\n    open(dataSource) {\r\n        try {\r\n            let ws = this._ws = new self.WebSocket(dataSource.url);\r\n            ws.binaryType = 'arraybuffer';\r\n            ws.onopen = this._onWebSocketOpen.bind(this);\r\n            ws.onclose = this._onWebSocketClose.bind(this);\r\n            ws.onmessage = this._onWebSocketMessage.bind(this);\r\n            ws.onerror = this._onWebSocketError.bind(this);\r\n\r\n            this._status = LoaderStatus.kConnecting;\r\n        } catch (e) {\r\n            this._status = LoaderStatus.kError;\r\n\r\n            let info = {code: e.code, msg: e.message};\r\n\r\n            if (this._onError) {\r\n                this._onError(LoaderErrors.EXCEPTION, info);\r\n            } else {\r\n                throw new RuntimeException(info.msg);\r\n            }\r\n        }\r\n    }\r\n\r\n    abort() {\r\n        let ws = this._ws;\r\n        if (ws && (ws.readyState === 0 || ws.readyState === 1)) {  // CONNECTING || OPEN\r\n            this._requestAbort = true;\r\n            ws.close();\r\n        }\r\n\r\n        this._ws = null;\r\n        this._status = LoaderStatus.kComplete;\r\n    }\r\n\r\n    _onWebSocketOpen(e) {\r\n        this._status = LoaderStatus.kBuffering;\r\n    }\r\n\r\n    _onWebSocketClose(e) {\r\n        if (this._requestAbort === true) {\r\n            this._requestAbort = false;\r\n            return;\r\n        }\r\n\r\n        this._status = LoaderStatus.kComplete;\r\n\r\n        if (this._onComplete) {\r\n            this._onComplete(0, this._receivedLength - 1);\r\n        }\r\n    }\r\n\r\n    _onWebSocketMessage(e) {\r\n        if (e.data instanceof ArrayBuffer) {\r\n            this._dispatchArrayBuffer(e.data);\r\n        } else if (e.data instanceof Blob) {\r\n            let reader = new FileReader();\r\n            reader.onload = () => {\r\n                this._dispatchArrayBuffer(reader.result);\r\n            };\r\n            reader.readAsArrayBuffer(e.data);\r\n        } else {\r\n            this._status = LoaderStatus.kError;\r\n            let info = {code: -1, msg: 'Unsupported WebSocket message type: ' + e.data.constructor.name};\r\n\r\n            if (this._onError) {\r\n                this._onError(LoaderErrors.EXCEPTION, info);\r\n            } else {\r\n                throw new RuntimeException(info.msg);\r\n            }\r\n        }\r\n    }\r\n\r\n    _dispatchArrayBuffer(arraybuffer) {\r\n        let chunk = arraybuffer;\r\n        let byteStart = this._receivedLength;\r\n        this._receivedLength += chunk.byteLength;\r\n\r\n        if (this._onDataArrival) {\r\n            this._onDataArrival(chunk, byteStart, this._receivedLength);\r\n        }\r\n    }\r\n\r\n    _onWebSocketError(e) {\r\n        this._status = LoaderStatus.kError;\r\n\r\n        let info = {\r\n            code: e.code,\r\n            msg: e.message\r\n        };\r\n\r\n        if (this._onError) {\r\n            this._onError(LoaderErrors.EXCEPTION, info);\r\n        } else {\r\n            throw new RuntimeException(info.msg);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default WebSocketLoader;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Log from '../utils/logger.js';\r\nimport {BaseLoader, LoaderStatus, LoaderErrors} from './loader.js';\r\nimport {RuntimeException} from '../utils/exception.js';\r\n\r\n// For FireFox browser which supports `xhr.responseType = 'moz-chunked-arraybuffer'`\r\nclass MozChunkedLoader extends BaseLoader {\r\n\r\n    static isSupported() {\r\n        try {\r\n            let xhr = new XMLHttpRequest();\r\n            // Firefox 37- requires .open() to be called before setting responseType\r\n            xhr.open('GET', 'https://example.com', true);\r\n            xhr.responseType = 'moz-chunked-arraybuffer';\r\n            return (xhr.responseType === 'moz-chunked-arraybuffer');\r\n        } catch (e) {\r\n            Log.w('MozChunkedLoader', e.message);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    constructor(seekHandler, config) {\r\n        super('xhr-moz-chunked-loader');\r\n        this.TAG = 'MozChunkedLoader';\r\n\r\n        this._seekHandler = seekHandler;\r\n        this._config = config;\r\n        this._needStash = true;\r\n\r\n        this._xhr = null;\r\n        this._requestAbort = false;\r\n        this._contentLength = null;\r\n        this._receivedLength = 0;\r\n    }\r\n\r\n    destroy() {\r\n        if (this.isWorking()) {\r\n            this.abort();\r\n        }\r\n        if (this._xhr) {\r\n            this._xhr.onreadystatechange = null;\r\n            this._xhr.onprogress = null;\r\n            this._xhr.onloadend = null;\r\n            this._xhr.onerror = null;\r\n            this._xhr = null;\r\n        }\r\n        super.destroy();\r\n    }\r\n\r\n    open(dataSource, range) {\r\n        this._dataSource = dataSource;\r\n        this._range = range;\r\n\r\n        let sourceURL = dataSource.url;\r\n        if (this._config.reuseRedirectedURL && dataSource.redirectedURL != undefined) {\r\n            sourceURL = dataSource.redirectedURL;\r\n        }\r\n\r\n        let seekConfig = this._seekHandler.getConfig(sourceURL, range);\r\n        this._requestURL = seekConfig.url;\r\n\r\n        let xhr = this._xhr = new XMLHttpRequest();\r\n        xhr.open('GET', seekConfig.url, true);\r\n        xhr.responseType = 'moz-chunked-arraybuffer';\r\n        xhr.onreadystatechange = this._onReadyStateChange.bind(this);\r\n        xhr.onprogress = this._onProgress.bind(this);\r\n        xhr.onloadend = this._onLoadEnd.bind(this);\r\n        xhr.onerror = this._onXhrError.bind(this);\r\n\r\n        // cors is auto detected and enabled by xhr\r\n\r\n        // withCredentials is disabled by default\r\n        if (dataSource.withCredentials) {\r\n            xhr.withCredentials = true;\r\n        }\r\n\r\n        if (typeof seekConfig.headers === 'object') {\r\n            let headers = seekConfig.headers;\r\n\r\n            for (let key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    xhr.setRequestHeader(key, headers[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        // add additional headers\r\n        if (typeof this._config.headers === 'object') {\r\n            let headers = this._config.headers;\r\n\r\n            for (let key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    xhr.setRequestHeader(key, headers[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        this._status = LoaderStatus.kConnecting;\r\n        xhr.send();\r\n    }\r\n\r\n    abort() {\r\n        this._requestAbort = true;\r\n        if (this._xhr) {\r\n            this._xhr.abort();\r\n        }\r\n        this._status = LoaderStatus.kComplete;\r\n    }\r\n\r\n    _onReadyStateChange(e) {\r\n        let xhr = e.target;\r\n\r\n        if (xhr.readyState === 2) {  // HEADERS_RECEIVED\r\n            if (xhr.responseURL != undefined && xhr.responseURL !== this._requestURL) {\r\n                if (this._onURLRedirect) {\r\n                    let redirectedURL = this._seekHandler.removeURLParameters(xhr.responseURL);\r\n                    this._onURLRedirect(redirectedURL);\r\n                }\r\n            }\r\n\r\n            if (xhr.status !== 0 && (xhr.status < 200 || xhr.status > 299)) {\r\n                this._status = LoaderStatus.kError;\r\n                if (this._onError) {\r\n                    this._onError(LoaderErrors.HTTP_STATUS_CODE_INVALID, {code: xhr.status, msg: xhr.statusText});\r\n                } else {\r\n                    throw new RuntimeException('MozChunkedLoader: Http code invalid, ' + xhr.status + ' ' + xhr.statusText);\r\n                }\r\n            } else {\r\n                this._status = LoaderStatus.kBuffering;\r\n            }\r\n        }\r\n    }\r\n\r\n    _onProgress(e) {\r\n        if (this._status === LoaderStatus.kError) {\r\n            // Ignore error response\r\n            return;\r\n        }\r\n\r\n        if (this._contentLength === null) {\r\n            if (e.total !== null && e.total !== 0) {\r\n                this._contentLength = e.total;\r\n                if (this._onContentLengthKnown) {\r\n                    this._onContentLengthKnown(this._contentLength);\r\n                }\r\n            }\r\n        }\r\n\r\n        let chunk = e.target.response;\r\n        let byteStart = this._range.from + this._receivedLength;\r\n        this._receivedLength += chunk.byteLength;\r\n\r\n        if (this._onDataArrival) {\r\n            this._onDataArrival(chunk, byteStart, this._receivedLength);\r\n        }\r\n    }\r\n\r\n    _onLoadEnd(e) {\r\n        if (this._requestAbort === true) {\r\n            this._requestAbort = false;\r\n            return;\r\n        } else if (this._status === LoaderStatus.kError) {\r\n            return;\r\n        }\r\n\r\n        this._status = LoaderStatus.kComplete;\r\n        if (this._onComplete) {\r\n            this._onComplete(this._range.from, this._range.from + this._receivedLength - 1);\r\n        }\r\n    }\r\n\r\n    _onXhrError(e) {\r\n        this._status = LoaderStatus.kError;\r\n        let type = 0;\r\n        let info = null;\r\n\r\n        if (this._contentLength && e.loaded < this._contentLength) {\r\n            type = LoaderErrors.EARLY_EOF;\r\n            info = {code: -1, msg: 'Moz-Chunked stream meet Early-Eof'};\r\n        } else {\r\n            type = LoaderErrors.EXCEPTION;\r\n            info = {code: -1, msg: e.constructor.name + ' ' + e.type};\r\n        }\r\n\r\n        if (this._onError) {\r\n            this._onError(type, info);\r\n        } else {\r\n            throw new RuntimeException(info.msg);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default MozChunkedLoader;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Log from '../utils/logger.js';\r\nimport {BaseLoader, LoaderStatus, LoaderErrors} from './loader.js';\r\nimport {RuntimeException} from '../utils/exception.js';\r\n\r\n/* Notice: ms-stream may cause IE/Edge browser crash if seek too frequently!!!\r\n * The browser may crash in wininet.dll. Disable for now.\r\n *\r\n * For IE11/Edge browser by microsoft which supports `xhr.responseType = 'ms-stream'`\r\n * Notice that ms-stream API sucks. The buffer is always expanding along with downloading.\r\n *\r\n * We need to abort the xhr if buffer size exceeded limit size (e.g. 16 MiB), then do reconnect.\r\n * in order to release previous ArrayBuffer to avoid memory leak\r\n *\r\n * Otherwise, the ArrayBuffer will increase to a terrible size that equals final file size.\r\n */\r\nclass MSStreamLoader extends BaseLoader {\r\n\r\n    static isSupported() {\r\n        try {\r\n            if (typeof self.MSStream === 'undefined' || typeof self.MSStreamReader === 'undefined') {\r\n                return false;\r\n            }\r\n\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.open('GET', 'https://example.com', true);\r\n            xhr.responseType = 'ms-stream';\r\n            return (xhr.responseType === 'ms-stream');\r\n        } catch (e) {\r\n            Log.w('MSStreamLoader', e.message);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    constructor(seekHandler, config) {\r\n        super('xhr-msstream-loader');\r\n        this.TAG = 'MSStreamLoader';\r\n\r\n        this._seekHandler = seekHandler;\r\n        this._config = config;\r\n        this._needStash = true;\r\n\r\n        this._xhr = null;\r\n        this._reader = null;  // MSStreamReader\r\n\r\n        this._totalRange = null;\r\n        this._currentRange = null;\r\n\r\n        this._currentRequestURL = null;\r\n        this._currentRedirectedURL = null;\r\n\r\n        this._contentLength = null;\r\n        this._receivedLength = 0;\r\n\r\n        this._bufferLimit = 16 * 1024 * 1024;  // 16MB\r\n        this._lastTimeBufferSize = 0;\r\n        this._isReconnecting = false;\r\n    }\r\n\r\n    destroy() {\r\n        if (this.isWorking()) {\r\n            this.abort();\r\n        }\r\n        if (this._reader) {\r\n            this._reader.onprogress = null;\r\n            this._reader.onload = null;\r\n            this._reader.onerror = null;\r\n            this._reader = null;\r\n        }\r\n        if (this._xhr) {\r\n            this._xhr.onreadystatechange = null;\r\n            this._xhr = null;\r\n        }\r\n        super.destroy();\r\n    }\r\n\r\n    open(dataSource, range) {\r\n        this._internalOpen(dataSource, range, false);\r\n    }\r\n\r\n    _internalOpen(dataSource, range, isSubrange) {\r\n        this._dataSource = dataSource;\r\n\r\n        if (!isSubrange) {\r\n            this._totalRange = range;\r\n        } else {\r\n            this._currentRange = range;\r\n        }\r\n\r\n        let sourceURL = dataSource.url;\r\n        if (this._config.reuseRedirectedURL) {\r\n            if (this._currentRedirectedURL != undefined) {\r\n                sourceURL = this._currentRedirectedURL;\r\n            } else if (dataSource.redirectedURL != undefined) {\r\n                sourceURL = dataSource.redirectedURL;\r\n            }\r\n        }\r\n\r\n        let seekConfig = this._seekHandler.getConfig(sourceURL, range);\r\n        this._currentRequestURL = seekConfig.url;\r\n\r\n        let reader = this._reader = new self.MSStreamReader();\r\n        reader.onprogress = this._msrOnProgress.bind(this);\r\n        reader.onload = this._msrOnLoad.bind(this);\r\n        reader.onerror = this._msrOnError.bind(this);\r\n\r\n        let xhr = this._xhr = new XMLHttpRequest();\r\n        xhr.open('GET', seekConfig.url, true);\r\n        xhr.responseType = 'ms-stream';\r\n        xhr.onreadystatechange = this._xhrOnReadyStateChange.bind(this);\r\n        xhr.onerror = this._xhrOnError.bind(this);\r\n\r\n        if (dataSource.withCredentials) {\r\n            xhr.withCredentials = true;\r\n        }\r\n\r\n        if (typeof seekConfig.headers === 'object') {\r\n            let headers = seekConfig.headers;\r\n\r\n            for (let key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    xhr.setRequestHeader(key, headers[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        // add additional headers\r\n        if (typeof this._config.headers === 'object') {\r\n            let headers = this._config.headers;\r\n\r\n            for (let key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    xhr.setRequestHeader(key, headers[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._isReconnecting) {\r\n            this._isReconnecting = false;\r\n        } else {\r\n            this._status = LoaderStatus.kConnecting;\r\n        }\r\n        xhr.send();\r\n    }\r\n\r\n    abort() {\r\n        this._internalAbort();\r\n        this._status = LoaderStatus.kComplete;\r\n    }\r\n\r\n    _internalAbort() {\r\n        if (this._reader) {\r\n            if (this._reader.readyState === 1) {  // LOADING\r\n                this._reader.abort();\r\n            }\r\n            this._reader.onprogress = null;\r\n            this._reader.onload = null;\r\n            this._reader.onerror = null;\r\n            this._reader = null;\r\n        }\r\n        if (this._xhr) {\r\n            this._xhr.abort();\r\n            this._xhr.onreadystatechange = null;\r\n            this._xhr = null;\r\n        }\r\n    }\r\n\r\n    _xhrOnReadyStateChange(e) {\r\n        let xhr = e.target;\r\n\r\n        if (xhr.readyState === 2) {  // HEADERS_RECEIVED\r\n            if (xhr.status >= 200 && xhr.status <= 299) {\r\n                this._status = LoaderStatus.kBuffering;\r\n\r\n                if (xhr.responseURL != undefined) {\r\n                    let redirectedURL = this._seekHandler.removeURLParameters(xhr.responseURL);\r\n                    if (xhr.responseURL !== this._currentRequestURL && redirectedURL !== this._currentRedirectedURL) {\r\n                        this._currentRedirectedURL = redirectedURL;\r\n                        if (this._onURLRedirect) {\r\n                            this._onURLRedirect(redirectedURL);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                let lengthHeader = xhr.getResponseHeader('Content-Length');\r\n                if (lengthHeader != null && this._contentLength == null) {\r\n                    let length = parseInt(lengthHeader);\r\n                    if (length > 0) {\r\n                        this._contentLength = length;\r\n                        if (this._onContentLengthKnown) {\r\n                            this._onContentLengthKnown(this._contentLength);\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                this._status = LoaderStatus.kError;\r\n                if (this._onError) {\r\n                    this._onError(LoaderErrors.HTTP_STATUS_CODE_INVALID, {code: xhr.status, msg: xhr.statusText});\r\n                } else {\r\n                    throw new RuntimeException('MSStreamLoader: Http code invalid, ' + xhr.status + ' ' + xhr.statusText);\r\n                }\r\n            }\r\n        } else if (xhr.readyState === 3) {  // LOADING\r\n            if (xhr.status >= 200 && xhr.status <= 299) {\r\n                this._status = LoaderStatus.kBuffering;\r\n\r\n                let msstream = xhr.response;\r\n                this._reader.readAsArrayBuffer(msstream);\r\n            }\r\n        }\r\n    }\r\n\r\n    _xhrOnError(e) {\r\n        this._status = LoaderStatus.kError;\r\n        let type = LoaderErrors.EXCEPTION;\r\n        let info = {code: -1, msg: e.constructor.name + ' ' + e.type};\r\n\r\n        if (this._onError) {\r\n            this._onError(type, info);\r\n        } else {\r\n            throw new RuntimeException(info.msg);\r\n        }\r\n    }\r\n\r\n    _msrOnProgress(e) {\r\n        let reader = e.target;\r\n        let bigbuffer = reader.result;\r\n        if (bigbuffer == null) {  // result may be null, workaround for buggy M$\r\n            this._doReconnectIfNeeded();\r\n            return;\r\n        }\r\n\r\n        let slice = bigbuffer.slice(this._lastTimeBufferSize);\r\n        this._lastTimeBufferSize = bigbuffer.byteLength;\r\n        let byteStart = this._totalRange.from + this._receivedLength;\r\n        this._receivedLength += slice.byteLength;\r\n\r\n        if (this._onDataArrival) {\r\n            this._onDataArrival(slice, byteStart, this._receivedLength);\r\n        }\r\n\r\n        if (bigbuffer.byteLength >= this._bufferLimit) {\r\n            Log.v(this.TAG, `MSStream buffer exceeded max size near ${byteStart + slice.byteLength}, reconnecting...`);\r\n            this._doReconnectIfNeeded();\r\n        }\r\n    }\r\n\r\n    _doReconnectIfNeeded() {\r\n        if (this._contentLength == null || this._receivedLength < this._contentLength) {\r\n            this._isReconnecting = true;\r\n            this._lastTimeBufferSize = 0;\r\n            this._internalAbort();\r\n\r\n            let range = {\r\n                from: this._totalRange.from + this._receivedLength,\r\n                to: -1\r\n            };\r\n            this._internalOpen(this._dataSource, range, true);\r\n        }\r\n    }\r\n\r\n    _msrOnLoad(e) {  // actually it is onComplete event\r\n        this._status = LoaderStatus.kComplete;\r\n        if (this._onComplete) {\r\n            this._onComplete(this._totalRange.from, this._totalRange.from + this._receivedLength - 1);\r\n        }\r\n    }\r\n\r\n    _msrOnError(e) {\r\n        this._status = LoaderStatus.kError;\r\n        let type = 0;\r\n        let info = null;\r\n\r\n        if (this._contentLength && this._receivedLength < this._contentLength) {\r\n            type = LoaderErrors.EARLY_EOF;\r\n            info = {code: -1, msg: 'MSStream meet Early-Eof'};\r\n        } else {\r\n            type = LoaderErrors.EARLY_EOF;\r\n            info = {code: -1, msg: e.constructor.name + ' ' + e.type};\r\n        }\r\n\r\n        if (this._onError) {\r\n            this._onError(type, info);\r\n        } else {\r\n            throw new RuntimeException(info.msg);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MSStreamLoader;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Log from '../utils/logger.js';\r\nimport SpeedSampler from './speed-sampler.js';\r\nimport {BaseLoader, LoaderStatus, LoaderErrors} from './loader.js';\r\nimport {RuntimeException} from '../utils/exception.js';\r\n\r\n// Universal IO Loader, implemented by adding Range header in xhr's request header\r\nclass RangeLoader extends BaseLoader {\r\n\r\n    static isSupported() {\r\n        try {\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.open('GET', 'https://example.com', true);\r\n            xhr.responseType = 'arraybuffer';\r\n            return (xhr.responseType === 'arraybuffer');\r\n        } catch (e) {\r\n            Log.w('RangeLoader', e.message);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    constructor(seekHandler, config) {\r\n        super('xhr-range-loader');\r\n        this.TAG = 'RangeLoader';\r\n\r\n        this._seekHandler = seekHandler;\r\n        this._config = config;\r\n        this._needStash = false;\r\n\r\n        this._chunkSizeKBList = [\r\n            128, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096, 5120, 6144, 7168, 8192\r\n        ];\r\n        this._currentChunkSizeKB = 384;\r\n        this._currentSpeedNormalized = 0;\r\n        this._zeroSpeedChunkCount = 0;\r\n\r\n        this._xhr = null;\r\n        this._speedSampler = new SpeedSampler();\r\n\r\n        this._requestAbort = false;\r\n        this._waitForTotalLength = false;\r\n        this._totalLengthReceived = false;\r\n\r\n        this._currentRequestURL = null;\r\n        this._currentRedirectedURL = null;\r\n        this._currentRequestRange = null;\r\n        this._totalLength = null;  // size of the entire file\r\n        this._contentLength = null;  // Content-Length of entire request range\r\n        this._receivedLength = 0;  // total received bytes\r\n        this._lastTimeLoaded = 0;  // received bytes of current request sub-range\r\n    }\r\n\r\n    destroy() {\r\n        if (this.isWorking()) {\r\n            this.abort();\r\n        }\r\n        if (this._xhr) {\r\n            this._xhr.onreadystatechange = null;\r\n            this._xhr.onprogress = null;\r\n            this._xhr.onload = null;\r\n            this._xhr.onerror = null;\r\n            this._xhr = null;\r\n        }\r\n        super.destroy();\r\n    }\r\n\r\n    get currentSpeed() {\r\n        return this._speedSampler.lastSecondKBps;\r\n    }\r\n\r\n    open(dataSource, range) {\r\n        this._dataSource = dataSource;\r\n        this._range = range;\r\n        this._status = LoaderStatus.kConnecting;\r\n\r\n        let useRefTotalLength = false;\r\n        if (this._dataSource.filesize != undefined && this._dataSource.filesize !== 0) {\r\n            useRefTotalLength = true;\r\n            this._totalLength = this._dataSource.filesize;\r\n        }\r\n\r\n        if (!this._totalLengthReceived && !useRefTotalLength) {\r\n            // We need total filesize\r\n            this._waitForTotalLength = true;\r\n            this._internalOpen(this._dataSource, {from: 0, to: -1});\r\n        } else {\r\n            // We have filesize, start loading\r\n            this._openSubRange();\r\n        }\r\n    }\r\n\r\n    _openSubRange() {\r\n        let chunkSize = this._currentChunkSizeKB * 1024;\r\n\r\n        let from = this._range.from + this._receivedLength;\r\n        let to = from + chunkSize;\r\n\r\n        if (this._contentLength != null) {\r\n            if (to - this._range.from >= this._contentLength) {\r\n                to = this._range.from + this._contentLength - 1;\r\n            }\r\n        }\r\n\r\n        this._currentRequestRange = {from, to};\r\n        this._internalOpen(this._dataSource, this._currentRequestRange);\r\n    }\r\n\r\n    _internalOpen(dataSource, range) {\r\n        this._lastTimeLoaded = 0;\r\n\r\n        let sourceURL = dataSource.url;\r\n        if (this._config.reuseRedirectedURL) {\r\n            if (this._currentRedirectedURL != undefined) {\r\n                sourceURL = this._currentRedirectedURL;\r\n            } else if (dataSource.redirectedURL != undefined) {\r\n                sourceURL = dataSource.redirectedURL;\r\n            }\r\n        }\r\n\r\n        let seekConfig = this._seekHandler.getConfig(sourceURL, range);\r\n        this._currentRequestURL = seekConfig.url;\r\n\r\n        let xhr = this._xhr = new XMLHttpRequest();\r\n        xhr.open('GET', seekConfig.url, true);\r\n        xhr.responseType = 'arraybuffer';\r\n        xhr.onreadystatechange = this._onReadyStateChange.bind(this);\r\n        xhr.onprogress = this._onProgress.bind(this);\r\n        xhr.onload = this._onLoad.bind(this);\r\n        xhr.onerror = this._onXhrError.bind(this);\r\n\r\n        if (dataSource.withCredentials) {\r\n            xhr.withCredentials = true;\r\n        }\r\n\r\n        if (typeof seekConfig.headers === 'object') {\r\n            let headers = seekConfig.headers;\r\n\r\n            for (let key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    xhr.setRequestHeader(key, headers[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        // add additional headers\r\n        if (typeof this._config.headers === 'object') {\r\n            let headers = this._config.headers;\r\n\r\n            for (let key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    xhr.setRequestHeader(key, headers[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        xhr.send();\r\n    }\r\n\r\n    abort() {\r\n        this._requestAbort = true;\r\n        this._internalAbort();\r\n        this._status = LoaderStatus.kComplete;\r\n    }\r\n\r\n    _internalAbort() {\r\n        if (this._xhr) {\r\n            this._xhr.onreadystatechange = null;\r\n            this._xhr.onprogress = null;\r\n            this._xhr.onload = null;\r\n            this._xhr.onerror = null;\r\n            this._xhr.abort();\r\n            this._xhr = null;\r\n        }\r\n    }\r\n\r\n    _onReadyStateChange(e) {\r\n        let xhr = e.target;\r\n\r\n        if (xhr.readyState === 2) {  // HEADERS_RECEIVED\r\n            if (xhr.responseURL != undefined) {  // if the browser support this property\r\n                let redirectedURL = this._seekHandler.removeURLParameters(xhr.responseURL);\r\n                if (xhr.responseURL !== this._currentRequestURL && redirectedURL !== this._currentRedirectedURL) {\r\n                    this._currentRedirectedURL = redirectedURL;\r\n                    if (this._onURLRedirect) {\r\n                        this._onURLRedirect(redirectedURL);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if ((xhr.status >= 200 && xhr.status <= 299)) {\r\n                if (this._waitForTotalLength) {\r\n                    return;\r\n                }\r\n                this._status = LoaderStatus.kBuffering;\r\n            } else {\r\n                this._status = LoaderStatus.kError;\r\n                if (this._onError) {\r\n                    this._onError(LoaderErrors.HTTP_STATUS_CODE_INVALID, {code: xhr.status, msg: xhr.statusText});\r\n                } else {\r\n                    throw new RuntimeException('RangeLoader: Http code invalid, ' + xhr.status + ' ' + xhr.statusText);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _onProgress(e) {\r\n        if (this._status === LoaderStatus.kError) {\r\n            // Ignore error response\r\n            return;\r\n        }\r\n\r\n        if (this._contentLength === null) {\r\n            let openNextRange = false;\r\n\r\n            if (this._waitForTotalLength) {\r\n                this._waitForTotalLength = false;\r\n                this._totalLengthReceived = true;\r\n                openNextRange = true;\r\n\r\n                let total = e.total;\r\n                this._internalAbort();\r\n                if (total != null & total !== 0) {\r\n                    this._totalLength = total;\r\n                }\r\n            }\r\n\r\n            // calculate currrent request range's contentLength\r\n            if (this._range.to === -1) {\r\n                this._contentLength = this._totalLength - this._range.from;\r\n            } else {  // to !== -1\r\n                this._contentLength = this._range.to - this._range.from + 1;\r\n            }\r\n\r\n            if (openNextRange) {\r\n                this._openSubRange();\r\n                return;\r\n            }\r\n            if (this._onContentLengthKnown) {\r\n                this._onContentLengthKnown(this._contentLength);\r\n            }\r\n        }\r\n\r\n        let delta = e.loaded - this._lastTimeLoaded;\r\n        this._lastTimeLoaded = e.loaded;\r\n        this._speedSampler.addBytes(delta);\r\n    }\r\n\r\n    _normalizeSpeed(input) {\r\n        let list = this._chunkSizeKBList;\r\n        let last = list.length - 1;\r\n        let mid = 0;\r\n        let lbound = 0;\r\n        let ubound = last;\r\n\r\n        if (input < list[0]) {\r\n            return list[0];\r\n        }\r\n\r\n        while (lbound <= ubound) {\r\n            mid = lbound + Math.floor((ubound - lbound) / 2);\r\n            if (mid === last || (input >= list[mid] && input < list[mid + 1])) {\r\n                return list[mid];\r\n            } else if (list[mid] < input) {\r\n                lbound = mid + 1;\r\n            } else {\r\n                ubound = mid - 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    _onLoad(e) {\r\n        if (this._status === LoaderStatus.kError) {\r\n            // Ignore error response\r\n            return;\r\n        }\r\n\r\n        if (this._waitForTotalLength) {\r\n            this._waitForTotalLength = false;\r\n            return;\r\n        }\r\n\r\n        this._lastTimeLoaded = 0;\r\n        let KBps = this._speedSampler.lastSecondKBps;\r\n        if (KBps === 0) {\r\n            this._zeroSpeedChunkCount++;\r\n            if (this._zeroSpeedChunkCount >= 3) {\r\n                // Try get currentKBps after 3 chunks\r\n                KBps = this._speedSampler.currentKBps;\r\n            }\r\n        }\r\n\r\n        if (KBps !== 0) {\r\n            let normalized = this._normalizeSpeed(KBps);\r\n            if (this._currentSpeedNormalized !== normalized) {\r\n                this._currentSpeedNormalized = normalized;\r\n                this._currentChunkSizeKB = normalized;\r\n            }\r\n        }\r\n\r\n        let chunk = e.target.response;\r\n        let byteStart = this._range.from + this._receivedLength;\r\n        this._receivedLength += chunk.byteLength;\r\n\r\n        let reportComplete = false;\r\n\r\n        if (this._contentLength != null && this._receivedLength < this._contentLength) {\r\n            // continue load next chunk\r\n            this._openSubRange();\r\n        } else {\r\n            reportComplete = true;\r\n        }\r\n\r\n        // dispatch received chunk\r\n        if (this._onDataArrival) {\r\n            this._onDataArrival(chunk, byteStart, this._receivedLength);\r\n        }\r\n\r\n        if (reportComplete) {\r\n            this._status = LoaderStatus.kComplete;\r\n            if (this._onComplete) {\r\n                this._onComplete(this._range.from, this._range.from + this._receivedLength - 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    _onXhrError(e) {\r\n        this._status = LoaderStatus.kError;\r\n        let type = 0;\r\n        let info = null;\r\n\r\n        if (this._contentLength && this._receivedLength > 0\r\n                                && this._receivedLength < this._contentLength) {\r\n            type = LoaderErrors.EARLY_EOF;\r\n            info = {code: -1, msg: 'RangeLoader meet Early-Eof'};\r\n        } else {\r\n            type = LoaderErrors.EXCEPTION;\r\n            info = {code: -1, msg: e.constructor.name + ' ' + e.type};\r\n        }\r\n\r\n        if (this._onError) {\r\n            this._onError(type, info);\r\n        } else {\r\n            throw new RuntimeException(info.msg);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default RangeLoader;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport EventEmitter from 'events';\r\nimport Log from '../utils/logger.js';\r\nimport Browser from '../utils/browser.js';\r\nimport PlayerEvents from './player-events.js';\r\nimport Transmuxer from '../core/transmuxer.js';\r\nimport TransmuxingEvents from '../core/transmuxing-events.js';\r\nimport MSEController from '../core/mse-controller.js';\r\nimport MSEEvents from '../core/mse-events.js';\r\nimport {ErrorTypes, ErrorDetails} from './player-errors.js';\r\nimport {createDefaultConfig} from '../config.js';\r\nimport {InvalidArgumentException, IllegalStateException} from '../utils/exception.js';\r\n\r\nclass FlvPlayer {\r\n\r\n    constructor(mediaDataSource, config) {\r\n        this.TAG = 'FlvPlayer';\r\n        this._type = 'FlvPlayer';\r\n        this._emitter = new EventEmitter();\r\n\r\n        this._config = createDefaultConfig();\r\n        if (typeof config === 'object') {\r\n            Object.assign(this._config, config);\r\n        }\r\n\r\n        if (mediaDataSource.type.toLowerCase() !== 'flv') {\r\n            throw new InvalidArgumentException('FlvPlayer requires an flv MediaDataSource input!');\r\n        }\r\n\r\n        if (mediaDataSource.isLive === true) {\r\n            this._config.isLive = true;\r\n        }\r\n\r\n        this.e = {\r\n            onvLoadedMetadata: this._onvLoadedMetadata.bind(this),\r\n            onvSeeking: this._onvSeeking.bind(this),\r\n            onvCanPlay: this._onvCanPlay.bind(this),\r\n            onvStalled: this._onvStalled.bind(this),\r\n            onvProgress: this._onvProgress.bind(this)\r\n        };\r\n\r\n        if (self.performance && self.performance.now) {\r\n            this._now = self.performance.now.bind(self.performance);\r\n        } else {\r\n            this._now = Date.now;\r\n        }\r\n\r\n        this._pendingSeekTime = null;  // in seconds\r\n        this._requestSetTime = false;\r\n        this._seekpointRecord = null;\r\n        this._progressChecker = null;\r\n\r\n        this._mediaDataSource = mediaDataSource;\r\n        this._mediaElement = null;\r\n        this._msectl = null;\r\n        this._transmuxer = null;\r\n\r\n        this._mseSourceOpened = false;\r\n        this._hasPendingLoad = false;\r\n        this._receivedCanPlay = false;\r\n\r\n        this._mediaInfo = null;\r\n        this._statisticsInfo = null;\r\n\r\n        let chromeNeedIDRFix = (Browser.chrome &&\r\n                               (Browser.version.major < 50 ||\r\n                               (Browser.version.major === 50 && Browser.version.build < 2661)));\r\n        this._alwaysSeekKeyframe = (chromeNeedIDRFix || Browser.msedge || Browser.msie) ? true : false;\r\n\r\n        if (this._alwaysSeekKeyframe) {\r\n            this._config.accurateSeek = false;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        if (this._progressChecker != null) {\r\n            window.clearInterval(this._progressChecker);\r\n            this._progressChecker = null;\r\n        }\r\n        if (this._transmuxer) {\r\n            this.unload();\r\n        }\r\n        if (this._mediaElement) {\r\n            this.detachMediaElement();\r\n        }\r\n        this.e = null;\r\n        this._mediaDataSource = null;\r\n\r\n        this._emitter.removeAllListeners();\r\n        this._emitter = null;\r\n    }\r\n\r\n    on(event, listener) {\r\n        if (event === PlayerEvents.MEDIA_INFO) {\r\n            if (this._mediaInfo != null) {\r\n                Promise.resolve().then(() => {\r\n                    this._emitter.emit(PlayerEvents.MEDIA_INFO, this.mediaInfo);\r\n                });\r\n            }\r\n        } else if (event === PlayerEvents.STATISTICS_INFO) {\r\n            if (this._statisticsInfo != null) {\r\n                Promise.resolve().then(() => {\r\n                    this._emitter.emit(PlayerEvents.STATISTICS_INFO, this.statisticsInfo);\r\n                });\r\n            }\r\n        }\r\n        this._emitter.addListener(event, listener);\r\n    }\r\n\r\n    off(event, listener) {\r\n        this._emitter.removeListener(event, listener);\r\n    }\r\n\r\n    attachMediaElement(mediaElement) {\r\n        this._mediaElement = mediaElement;\r\n        mediaElement.addEventListener('loadedmetadata', this.e.onvLoadedMetadata);\r\n        mediaElement.addEventListener('seeking', this.e.onvSeeking);\r\n        mediaElement.addEventListener('canplay', this.e.onvCanPlay);\r\n        mediaElement.addEventListener('stalled', this.e.onvStalled);\r\n        mediaElement.addEventListener('progress', this.e.onvProgress);\r\n\r\n        this._msectl = new MSEController(this._config);\r\n\r\n        this._msectl.on(MSEEvents.UPDATE_END, this._onmseUpdateEnd.bind(this));\r\n        this._msectl.on(MSEEvents.BUFFER_FULL, this._onmseBufferFull.bind(this));\r\n        this._msectl.on(MSEEvents.SOURCE_OPEN, () => {\r\n            this._mseSourceOpened = true;\r\n            if (this._hasPendingLoad) {\r\n                this._hasPendingLoad = false;\r\n                this.load();\r\n            }\r\n        });\r\n        this._msectl.on(MSEEvents.ERROR, (info) => {\r\n            this._emitter.emit(PlayerEvents.ERROR,\r\n                               ErrorTypes.MEDIA_ERROR,\r\n                               ErrorDetails.MEDIA_MSE_ERROR,\r\n                               info\r\n            );\r\n        });\r\n\r\n        this._msectl.attachMediaElement(mediaElement);\r\n\r\n        if (this._pendingSeekTime != null) {\r\n            try {\r\n                mediaElement.currentTime = this._pendingSeekTime;\r\n                this._pendingSeekTime = null;\r\n            } catch (e) {\r\n                // IE11 may throw InvalidStateError if readyState === 0\r\n                // We can defer set currentTime operation after loadedmetadata\r\n            }\r\n        }\r\n    }\r\n\r\n    detachMediaElement() {\r\n        if (this._mediaElement) {\r\n            this._msectl.detachMediaElement();\r\n            this._mediaElement.removeEventListener('loadedmetadata', this.e.onvLoadedMetadata);\r\n            this._mediaElement.removeEventListener('seeking', this.e.onvSeeking);\r\n            this._mediaElement.removeEventListener('canplay', this.e.onvCanPlay);\r\n            this._mediaElement.removeEventListener('stalled', this.e.onvStalled);\r\n            this._mediaElement.removeEventListener('progress', this.e.onvProgress);\r\n            this._mediaElement = null;\r\n        }\r\n        if (this._msectl) {\r\n            this._msectl.destroy();\r\n            this._msectl = null;\r\n        }\r\n    }\r\n\r\n    load() {\r\n        if (!this._mediaElement) {\r\n            throw new IllegalStateException('HTMLMediaElement must be attached before load()!');\r\n        }\r\n        if (this._transmuxer) {\r\n            throw new IllegalStateException('FlvPlayer.load() has been called, please call unload() first!');\r\n        }\r\n        if (this._hasPendingLoad) {\r\n            return;\r\n        }\r\n\r\n        if (this._config.deferLoadAfterSourceOpen && this._mseSourceOpened === false) {\r\n            this._hasPendingLoad = true;\r\n            return;\r\n        }\r\n\r\n        if (this._mediaElement.readyState > 0) {\r\n            this._requestSetTime = true;\r\n            // IE11 may throw InvalidStateError if readyState === 0\r\n            this._mediaElement.currentTime = 0;\r\n        }\r\n\r\n        this._transmuxer = new Transmuxer(this._mediaDataSource, this._config);\r\n\r\n        this._transmuxer.on(TransmuxingEvents.INIT_SEGMENT, (type, is) => {\r\n            this._msectl.appendInitSegment(is);\r\n        });\r\n        this._transmuxer.on(TransmuxingEvents.MEDIA_SEGMENT, (type, ms) => {\r\n            this._msectl.appendMediaSegment(ms);\r\n\r\n            // lazyLoad check\r\n            if (this._config.lazyLoad && !this._config.isLive) {\r\n                let currentTime = this._mediaElement.currentTime;\r\n                if (ms.info.endDts >= (currentTime + this._config.lazyLoadMaxDuration) * 1000) {\r\n                    if (this._progressChecker == null) {\r\n                        Log.v(this.TAG, 'Maximum buffering duration exceeded, suspend transmuxing task');\r\n                        this._suspendTransmuxer();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this._transmuxer.on(TransmuxingEvents.LOADING_COMPLETE, () => {\r\n            this._msectl.endOfStream();\r\n            this._emitter.emit(PlayerEvents.LOADING_COMPLETE);\r\n        });\r\n        this._transmuxer.on(TransmuxingEvents.RECOVERED_EARLY_EOF, () => {\r\n            this._emitter.emit(PlayerEvents.RECOVERED_EARLY_EOF);\r\n        });\r\n        this._transmuxer.on(TransmuxingEvents.IO_ERROR, (detail, info) => {\r\n            this._emitter.emit(PlayerEvents.ERROR, ErrorTypes.NETWORK_ERROR, detail, info);\r\n        });\r\n        this._transmuxer.on(TransmuxingEvents.DEMUX_ERROR, (detail, info) => {\r\n            this._emitter.emit(PlayerEvents.ERROR, ErrorTypes.MEDIA_ERROR, detail, {code: -1, msg: info});\r\n        });\r\n        this._transmuxer.on(TransmuxingEvents.MEDIA_INFO, (mediaInfo) => {\r\n            this._mediaInfo = mediaInfo;\r\n            this._emitter.emit(PlayerEvents.MEDIA_INFO, Object.assign({}, mediaInfo));\r\n        });\r\n        this._transmuxer.on(TransmuxingEvents.METADATA_ARRIVED, (metadata) => {\r\n            this._emitter.emit(PlayerEvents.METADATA_ARRIVED, metadata);\r\n        });\r\n        this._transmuxer.on(TransmuxingEvents.SCRIPTDATA_ARRIVED, (data) => {\r\n            this._emitter.emit(PlayerEvents.SCRIPTDATA_ARRIVED, data);\r\n        });\r\n        this._transmuxer.on(TransmuxingEvents.STATISTICS_INFO, (statInfo) => {\r\n            this._statisticsInfo = this._fillStatisticsInfo(statInfo);\r\n            this._emitter.emit(PlayerEvents.STATISTICS_INFO, Object.assign({}, this._statisticsInfo));\r\n        });\r\n        this._transmuxer.on(TransmuxingEvents.RECOMMEND_SEEKPOINT, (milliseconds) => {\r\n            if (this._mediaElement && !this._config.accurateSeek) {\r\n                this._requestSetTime = true;\r\n                this._mediaElement.currentTime = milliseconds / 1000;\r\n            }\r\n        });\r\n\r\n        this._transmuxer.open();\r\n    }\r\n\r\n    unload() {\r\n        if (this._mediaElement) {\r\n            this._mediaElement.pause();\r\n        }\r\n        if (this._msectl) {\r\n            this._msectl.seek(0);\r\n        }\r\n        if (this._transmuxer) {\r\n            this._transmuxer.close();\r\n            this._transmuxer.destroy();\r\n            this._transmuxer = null;\r\n        }\r\n    }\r\n\r\n    play() {\r\n        return this._mediaElement.play();\r\n    }\r\n\r\n    pause() {\r\n        this._mediaElement.pause();\r\n    }\r\n\r\n    get type() {\r\n        return this._type;\r\n    }\r\n\r\n    get buffered() {\r\n        return this._mediaElement.buffered;\r\n    }\r\n\r\n    get duration() {\r\n        return this._mediaElement.duration;\r\n    }\r\n\r\n    get volume() {\r\n        return this._mediaElement.volume;\r\n    }\r\n\r\n    set volume(value) {\r\n        this._mediaElement.volume = value;\r\n    }\r\n\r\n    get muted() {\r\n        return this._mediaElement.muted;\r\n    }\r\n\r\n    set muted(muted) {\r\n        this._mediaElement.muted = muted;\r\n    }\r\n\r\n    get currentTime() {\r\n        if (this._mediaElement) {\r\n            return this._mediaElement.currentTime;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    set currentTime(seconds) {\r\n        if (this._mediaElement) {\r\n            this._internalSeek(seconds);\r\n        } else {\r\n            this._pendingSeekTime = seconds;\r\n        }\r\n    }\r\n\r\n    get mediaInfo() {\r\n        return Object.assign({}, this._mediaInfo);\r\n    }\r\n\r\n    get statisticsInfo() {\r\n        if (this._statisticsInfo == null) {\r\n            this._statisticsInfo = {};\r\n        }\r\n        this._statisticsInfo = this._fillStatisticsInfo(this._statisticsInfo);\r\n        return Object.assign({}, this._statisticsInfo);\r\n    }\r\n\r\n    _fillStatisticsInfo(statInfo) {\r\n        statInfo.playerType = this._type;\r\n\r\n        if (!(this._mediaElement instanceof HTMLVideoElement)) {\r\n            return statInfo;\r\n        }\r\n\r\n        let hasQualityInfo = true;\r\n        let decoded = 0;\r\n        let dropped = 0;\r\n\r\n        if (this._mediaElement.getVideoPlaybackQuality) {\r\n            let quality = this._mediaElement.getVideoPlaybackQuality();\r\n            decoded = quality.totalVideoFrames;\r\n            dropped = quality.droppedVideoFrames;\r\n        } else if (this._mediaElement.webkitDecodedFrameCount != undefined) {\r\n            decoded = this._mediaElement.webkitDecodedFrameCount;\r\n            dropped = this._mediaElement.webkitDroppedFrameCount;\r\n        } else {\r\n            hasQualityInfo = false;\r\n        }\r\n\r\n        if (hasQualityInfo) {\r\n            statInfo.decodedFrames = decoded;\r\n            statInfo.droppedFrames = dropped;\r\n        }\r\n\r\n        return statInfo;\r\n    }\r\n\r\n    _onmseUpdateEnd() {\r\n        if (!this._config.lazyLoad || this._config.isLive) {\r\n            return;\r\n        }\r\n\r\n        let buffered = this._mediaElement.buffered;\r\n        let currentTime = this._mediaElement.currentTime;\r\n        let currentRangeStart = 0;\r\n        let currentRangeEnd = 0;\r\n\r\n        for (let i = 0; i < buffered.length; i++) {\r\n            let start = buffered.start(i);\r\n            let end = buffered.end(i);\r\n            if (start <= currentTime && currentTime < end) {\r\n                currentRangeStart = start;\r\n                currentRangeEnd = end;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (currentRangeEnd >= currentTime + this._config.lazyLoadMaxDuration && this._progressChecker == null) {\r\n            Log.v(this.TAG, 'Maximum buffering duration exceeded, suspend transmuxing task');\r\n            this._suspendTransmuxer();\r\n        }\r\n    }\r\n\r\n    _onmseBufferFull() {\r\n        Log.v(this.TAG, 'MSE SourceBuffer is full, suspend transmuxing task');\r\n        if (this._progressChecker == null) {\r\n            this._suspendTransmuxer();\r\n        }\r\n    }\r\n\r\n    _suspendTransmuxer() {\r\n        if (this._transmuxer) {\r\n            this._transmuxer.pause();\r\n\r\n            if (this._progressChecker == null) {\r\n                this._progressChecker = window.setInterval(this._checkProgressAndResume.bind(this), 1000);\r\n            }\r\n        }\r\n    }\r\n\r\n    _checkProgressAndResume() {\r\n        let currentTime = this._mediaElement.currentTime;\r\n        let buffered = this._mediaElement.buffered;\r\n\r\n        let needResume = false;\r\n\r\n        for (let i = 0; i < buffered.length; i++) {\r\n            let from = buffered.start(i);\r\n            let to = buffered.end(i);\r\n            if (currentTime >= from && currentTime < to) {\r\n                if (currentTime >= to - this._config.lazyLoadRecoverDuration) {\r\n                    needResume = true;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (needResume) {\r\n            window.clearInterval(this._progressChecker);\r\n            this._progressChecker = null;\r\n            if (needResume) {\r\n                Log.v(this.TAG, 'Continue loading from paused position');\r\n                this._transmuxer.resume();\r\n            }\r\n        }\r\n    }\r\n\r\n    _isTimepointBuffered(seconds) {\r\n        let buffered = this._mediaElement.buffered;\r\n\r\n        for (let i = 0; i < buffered.length; i++) {\r\n            let from = buffered.start(i);\r\n            let to = buffered.end(i);\r\n            if (seconds >= from && seconds < to) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    _internalSeek(seconds) {\r\n        let directSeek = this._isTimepointBuffered(seconds);\r\n\r\n        let directSeekBegin = false;\r\n        let directSeekBeginTime = 0;\r\n\r\n        if (seconds < 1.0 && this._mediaElement.buffered.length > 0) {\r\n            let videoBeginTime = this._mediaElement.buffered.start(0);\r\n            if ((videoBeginTime < 1.0 && seconds < videoBeginTime) || Browser.safari) {\r\n                directSeekBegin = true;\r\n                // also workaround for Safari: Seek to 0 may cause video stuck, use 0.1 to avoid\r\n                directSeekBeginTime = Browser.safari ? 0.1 : videoBeginTime;\r\n            }\r\n        }\r\n\r\n        if (directSeekBegin) {  // seek to video begin, set currentTime directly if beginPTS buffered\r\n            this._requestSetTime = true;\r\n            this._mediaElement.currentTime = directSeekBeginTime;\r\n        }  else if (directSeek) {  // buffered position\r\n            if (!this._alwaysSeekKeyframe) {\r\n                this._requestSetTime = true;\r\n                this._mediaElement.currentTime = seconds;\r\n            } else {\r\n                let idr = this._msectl.getNearestKeyframe(Math.floor(seconds * 1000));\r\n                this._requestSetTime = true;\r\n                if (idr != null) {\r\n                    this._mediaElement.currentTime = idr.dts / 1000;\r\n                } else {\r\n                    this._mediaElement.currentTime = seconds;\r\n                }\r\n            }\r\n            if (this._progressChecker != null) {\r\n                this._checkProgressAndResume();\r\n            }\r\n        } else {\r\n            if (this._progressChecker != null) {\r\n                window.clearInterval(this._progressChecker);\r\n                this._progressChecker = null;\r\n            }\r\n            this._msectl.seek(seconds);\r\n            this._transmuxer.seek(Math.floor(seconds * 1000));  // in milliseconds\r\n            // no need to set mediaElement.currentTime if non-accurateSeek,\r\n            // just wait for the recommend_seekpoint callback\r\n            if (this._config.accurateSeek) {\r\n                this._requestSetTime = true;\r\n                this._mediaElement.currentTime = seconds;\r\n            }\r\n        }\r\n    }\r\n\r\n    _checkAndApplyUnbufferedSeekpoint() {\r\n        if (this._seekpointRecord) {\r\n            if (this._seekpointRecord.recordTime <= this._now() - 100) {\r\n                let target = this._mediaElement.currentTime;\r\n                this._seekpointRecord = null;\r\n                if (!this._isTimepointBuffered(target)) {\r\n                    if (this._progressChecker != null) {\r\n                        window.clearTimeout(this._progressChecker);\r\n                        this._progressChecker = null;\r\n                    }\r\n                    // .currentTime is consists with .buffered timestamp\r\n                    // Chrome/Edge use DTS, while FireFox/Safari use PTS\r\n                    this._msectl.seek(target);\r\n                    this._transmuxer.seek(Math.floor(target * 1000));\r\n                    // set currentTime if accurateSeek, or wait for recommend_seekpoint callback\r\n                    if (this._config.accurateSeek) {\r\n                        this._requestSetTime = true;\r\n                        this._mediaElement.currentTime = target;\r\n                    }\r\n                }\r\n            } else {\r\n                window.setTimeout(this._checkAndApplyUnbufferedSeekpoint.bind(this), 50);\r\n            }\r\n        }\r\n    }\r\n\r\n    _checkAndResumeStuckPlayback(stalled) {\r\n        let media = this._mediaElement;\r\n        if (stalled || !this._receivedCanPlay || media.readyState < 2) {  // HAVE_CURRENT_DATA\r\n            let buffered = media.buffered;\r\n            if (buffered.length > 0 && media.currentTime < buffered.start(0)) {\r\n                Log.w(this.TAG, `Playback seems stuck at ${media.currentTime}, seek to ${buffered.start(0)}`);\r\n                this._requestSetTime = true;\r\n                this._mediaElement.currentTime = buffered.start(0);\r\n                this._mediaElement.removeEventListener('progress', this.e.onvProgress);\r\n            }\r\n        } else {\r\n            // Playback didn't stuck, remove progress event listener\r\n            this._mediaElement.removeEventListener('progress', this.e.onvProgress);\r\n        }\r\n    }\r\n\r\n    _onvLoadedMetadata(e) {\r\n        if (this._pendingSeekTime != null) {\r\n            this._mediaElement.currentTime = this._pendingSeekTime;\r\n            this._pendingSeekTime = null;\r\n        }\r\n    }\r\n\r\n    _onvSeeking(e) {  // handle seeking request from browser's progress bar\r\n        let target = this._mediaElement.currentTime;\r\n        let buffered = this._mediaElement.buffered;\r\n\r\n        if (this._requestSetTime) {\r\n            this._requestSetTime = false;\r\n            return;\r\n        }\r\n\r\n        if (target < 1.0 && buffered.length > 0) {\r\n            // seek to video begin, set currentTime directly if beginPTS buffered\r\n            let videoBeginTime = buffered.start(0);\r\n            if ((videoBeginTime < 1.0 && target < videoBeginTime) || Browser.safari) {\r\n                this._requestSetTime = true;\r\n                // also workaround for Safari: Seek to 0 may cause video stuck, use 0.1 to avoid\r\n                this._mediaElement.currentTime = Browser.safari ? 0.1 : videoBeginTime;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this._isTimepointBuffered(target)) {\r\n            if (this._alwaysSeekKeyframe) {\r\n                let idr = this._msectl.getNearestKeyframe(Math.floor(target * 1000));\r\n                if (idr != null) {\r\n                    this._requestSetTime = true;\r\n                    this._mediaElement.currentTime = idr.dts / 1000;\r\n                }\r\n            }\r\n            if (this._progressChecker != null) {\r\n                this._checkProgressAndResume();\r\n            }\r\n            return;\r\n        }\r\n\r\n        this._seekpointRecord = {\r\n            seekPoint: target,\r\n            recordTime: this._now()\r\n        };\r\n        window.setTimeout(this._checkAndApplyUnbufferedSeekpoint.bind(this), 50);\r\n    }\r\n\r\n    _onvCanPlay(e) {\r\n        this._receivedCanPlay = true;\r\n        this._mediaElement.removeEventListener('canplay', this.e.onvCanPlay);\r\n    }\r\n\r\n    _onvStalled(e) {\r\n        this._checkAndResumeStuckPlayback(true);\r\n    }\r\n\r\n    _onvProgress(e) {\r\n        this._checkAndResumeStuckPlayback();\r\n    }\r\n\r\n}\r\n\r\nexport default FlvPlayer;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport EventEmitter from 'events';\r\nimport PlayerEvents from './player-events.js';\r\nimport {createDefaultConfig} from '../config.js';\r\nimport {InvalidArgumentException, IllegalStateException} from '../utils/exception.js';\r\n\r\n// Player wrapper for browser's native player (HTMLVideoElement) without MediaSource src. \r\nclass NativePlayer {\r\n\r\n    constructor(mediaDataSource, config) {\r\n        this.TAG = 'NativePlayer';\r\n        this._type = 'NativePlayer';\r\n        this._emitter = new EventEmitter();\r\n\r\n        this._config = createDefaultConfig();\r\n        if (typeof config === 'object') {\r\n            Object.assign(this._config, config);\r\n        }\r\n\r\n        if (mediaDataSource.type.toLowerCase() === 'flv') {\r\n            throw new InvalidArgumentException('NativePlayer does\\'t support flv MediaDataSource input!');\r\n        }\r\n        if (mediaDataSource.hasOwnProperty('segments')) {\r\n            throw new InvalidArgumentException(`NativePlayer(${mediaDataSource.type}) doesn't support multipart playback!`);\r\n        }\r\n\r\n        this.e = {\r\n            onvLoadedMetadata: this._onvLoadedMetadata.bind(this)\r\n        };\r\n\r\n        this._pendingSeekTime = null;\r\n        this._statisticsReporter = null;\r\n\r\n        this._mediaDataSource = mediaDataSource;\r\n        this._mediaElement = null;\r\n    }\r\n\r\n    destroy() {\r\n        if (this._mediaElement) {\r\n            this.unload();\r\n            this.detachMediaElement();\r\n        }\r\n        this.e = null;\r\n        this._mediaDataSource = null;\r\n        this._emitter.removeAllListeners();\r\n        this._emitter = null;\r\n    }\r\n\r\n    on(event, listener) {\r\n        if (event === PlayerEvents.MEDIA_INFO) {\r\n            if (this._mediaElement != null && this._mediaElement.readyState !== 0) {  // HAVE_NOTHING\r\n                Promise.resolve().then(() => {\r\n                    this._emitter.emit(PlayerEvents.MEDIA_INFO, this.mediaInfo);\r\n                });\r\n            }\r\n        } else if (event === PlayerEvents.STATISTICS_INFO) {\r\n            if (this._mediaElement != null && this._mediaElement.readyState !== 0) {\r\n                Promise.resolve().then(() => {\r\n                    this._emitter.emit(PlayerEvents.STATISTICS_INFO, this.statisticsInfo);\r\n                });\r\n            }\r\n        }\r\n        this._emitter.addListener(event, listener);\r\n    }\r\n\r\n    off(event, listener) {\r\n        this._emitter.removeListener(event, listener);\r\n    }\r\n\r\n    attachMediaElement(mediaElement) {\r\n        this._mediaElement = mediaElement;\r\n        mediaElement.addEventListener('loadedmetadata', this.e.onvLoadedMetadata);\r\n\r\n        if (this._pendingSeekTime != null) {\r\n            try {\r\n                mediaElement.currentTime = this._pendingSeekTime;\r\n                this._pendingSeekTime = null;\r\n            } catch (e) {\r\n                // IE11 may throw InvalidStateError if readyState === 0\r\n                // Defer set currentTime operation after loadedmetadata\r\n            }\r\n        }\r\n    }\r\n\r\n    detachMediaElement() {\r\n        if (this._mediaElement) {\r\n            this._mediaElement.src = '';\r\n            this._mediaElement.removeAttribute('src');\r\n            this._mediaElement.removeEventListener('loadedmetadata', this.e.onvLoadedMetadata);\r\n            this._mediaElement = null;\r\n        }\r\n        if (this._statisticsReporter != null) {\r\n            window.clearInterval(this._statisticsReporter);\r\n            this._statisticsReporter = null;\r\n        }\r\n    }\r\n\r\n    load() {\r\n        if (!this._mediaElement) {\r\n            throw new IllegalStateException('HTMLMediaElement must be attached before load()!');\r\n        }\r\n        this._mediaElement.src = this._mediaDataSource.url;\r\n\r\n        if (this._mediaElement.readyState > 0) {\r\n            this._mediaElement.currentTime = 0;\r\n        }\r\n\r\n        this._mediaElement.preload = 'auto';\r\n        this._mediaElement.load();\r\n        this._statisticsReporter = window.setInterval(\r\n            this._reportStatisticsInfo.bind(this),\r\n        this._config.statisticsInfoReportInterval);\r\n    }\r\n\r\n    unload() {\r\n        if (this._mediaElement) {\r\n            this._mediaElement.src = '';\r\n            this._mediaElement.removeAttribute('src');\r\n        }\r\n        if (this._statisticsReporter != null) {\r\n            window.clearInterval(this._statisticsReporter);\r\n            this._statisticsReporter = null;\r\n        }\r\n    }\r\n\r\n    play() {\r\n        return this._mediaElement.play();\r\n    }\r\n\r\n    pause() {\r\n        this._mediaElement.pause();\r\n    }\r\n\r\n    get type() {\r\n        return this._type;\r\n    }\r\n\r\n    get buffered() {\r\n        return this._mediaElement.buffered;\r\n    }\r\n\r\n    get duration() {\r\n        return this._mediaElement.duration;\r\n    }\r\n\r\n    get volume() {\r\n        return this._mediaElement.volume;\r\n    }\r\n\r\n    set volume(value) {\r\n        this._mediaElement.volume = value;\r\n    }\r\n\r\n    get muted() {\r\n        return this._mediaElement.muted;\r\n    }\r\n\r\n    set muted(muted) {\r\n        this._mediaElement.muted = muted;\r\n    }\r\n\r\n    get currentTime() {\r\n        if (this._mediaElement) {\r\n            return this._mediaElement.currentTime;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    set currentTime(seconds) {\r\n        if (this._mediaElement) {\r\n            this._mediaElement.currentTime = seconds;\r\n        } else {\r\n            this._pendingSeekTime = seconds;\r\n        }\r\n    }\r\n\r\n    get mediaInfo() {\r\n        let mediaPrefix = (this._mediaElement instanceof HTMLAudioElement) ? 'audio/' : 'video/';\r\n        let info = {\r\n            mimeType: mediaPrefix + this._mediaDataSource.type\r\n        };\r\n        if (this._mediaElement) {\r\n            info.duration = Math.floor(this._mediaElement.duration * 1000);\r\n            if (this._mediaElement instanceof HTMLVideoElement) {\r\n                info.width = this._mediaElement.videoWidth;\r\n                info.height = this._mediaElement.videoHeight;\r\n            }\r\n        }\r\n        return info;\r\n    }\r\n\r\n    get statisticsInfo() {\r\n        let info = {\r\n            playerType: this._type,\r\n            url: this._mediaDataSource.url\r\n        };\r\n\r\n        if (!(this._mediaElement instanceof HTMLVideoElement)) {\r\n            return info;\r\n        }\r\n\r\n        let hasQualityInfo = true;\r\n        let decoded = 0;\r\n        let dropped = 0;\r\n\r\n        if (this._mediaElement.getVideoPlaybackQuality) {\r\n            let quality = this._mediaElement.getVideoPlaybackQuality();\r\n            decoded = quality.totalVideoFrames;\r\n            dropped = quality.droppedVideoFrames;\r\n        } else if (this._mediaElement.webkitDecodedFrameCount != undefined) {\r\n            decoded = this._mediaElement.webkitDecodedFrameCount;\r\n            dropped = this._mediaElement.webkitDroppedFrameCount;\r\n        } else {\r\n            hasQualityInfo = false;\r\n        }\r\n\r\n        if (hasQualityInfo) {\r\n            info.decodedFrames = decoded;\r\n            info.droppedFrames = dropped;\r\n        }\r\n        \r\n        return info;\r\n    }\r\n\r\n    _onvLoadedMetadata(e) {\r\n        if (this._pendingSeekTime != null) {\r\n            this._mediaElement.currentTime = this._pendingSeekTime;\r\n            this._pendingSeekTime = null;\r\n        }\r\n        this._emitter.emit(PlayerEvents.MEDIA_INFO, this.mediaInfo);\r\n    }\r\n\r\n    _reportStatisticsInfo() {\r\n        this._emitter.emit(PlayerEvents.STATISTICS_INFO, this.statisticsInfo);\r\n    }\r\n\r\n}\r\n\r\nexport default NativePlayer;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport {LoaderErrors} from '../io/loader.js';\r\nimport DemuxErrors from '../demux/demux-errors.js';\r\n\r\nexport const ErrorTypes = {\r\n    NETWORK_ERROR: 'NetworkError',\r\n    MEDIA_ERROR: 'MediaError',\r\n    OTHER_ERROR: 'OtherError'\r\n};\r\n\r\nexport const ErrorDetails = {\r\n    NETWORK_EXCEPTION: LoaderErrors.EXCEPTION,\r\n    NETWORK_STATUS_CODE_INVALID: LoaderErrors.HTTP_STATUS_CODE_INVALID,\r\n    NETWORK_TIMEOUT: LoaderErrors.CONNECTING_TIMEOUT,\r\n    NETWORK_UNRECOVERABLE_EARLY_EOF: LoaderErrors.UNRECOVERABLE_EARLY_EOF,\r\n\r\n    MEDIA_MSE_ERROR: 'MediaMSEError',\r\n\r\n    MEDIA_FORMAT_ERROR: DemuxErrors.FORMAT_ERROR,\r\n    MEDIA_FORMAT_UNSUPPORTED: DemuxErrors.FORMAT_UNSUPPORTED,\r\n    MEDIA_CODEC_UNSUPPORTED: DemuxErrors.CODEC_UNSUPPORTED\r\n};","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nconst PlayerEvents = {\r\n    ERROR: 'error',\r\n    LOADING_COMPLETE: 'loading_complete',\r\n    RECOVERED_EARLY_EOF: 'recovered_early_eof',\r\n    MEDIA_INFO: 'media_info',\r\n    METADATA_ARRIVED: 'metadata_arrived',\r\n    SCRIPTDATA_ARRIVED: 'scriptdata_arrived',\r\n    STATISTICS_INFO: 'statistics_info'\r\n};\r\n\r\nexport default PlayerEvents;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * This file is modified from dailymotion's hls.js library (hls.js/src/helper/aac.js)\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nclass AAC {\r\n\r\n    static getSilentFrame(codec, channelCount) {\r\n        if (codec === 'mp4a.40.2') {\r\n            // handle LC-AAC\r\n            if (channelCount === 1) {\r\n                return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);\r\n            } else if (channelCount === 2) {\r\n                return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80]);\r\n            } else if (channelCount === 3) {\r\n                return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e]);\r\n            } else if (channelCount === 4) {\r\n                return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38]);\r\n            } else if (channelCount === 5) {\r\n                return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38]);\r\n            } else if (channelCount === 6) {\r\n                return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0]);\r\n            }\r\n        } else {\r\n            // handle HE-AAC (mp4a.40.5 / mp4a.40.29)\r\n            if (channelCount === 1) {\r\n                // ffmpeg -y -f lavfi -i \"aevalsrc=0:d=0.05\" -c:a libfdk_aac -profile:a aac_he -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\r\n                return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\r\n            } else if (channelCount === 2) {\r\n                // ffmpeg -y -f lavfi -i \"aevalsrc=0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\r\n                return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\r\n            } else if (channelCount === 3) {\r\n                // ffmpeg -y -f lavfi -i \"aevalsrc=0|0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\r\n                return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\nexport default AAC;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * This file is derived from dailymotion's hls.js library (hls.js/src/remux/mp4-generator.js)\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n//  MP4 boxes generator for ISO BMFF (ISO Base Media File Format, defined in ISO/IEC 14496-12)\r\nclass MP4 {\r\n\r\n    static init() {\r\n        MP4.types = {\r\n            avc1: [], avcC: [], btrt: [], dinf: [],\r\n            dref: [], esds: [], ftyp: [], hdlr: [],\r\n            mdat: [], mdhd: [], mdia: [], mfhd: [],\r\n            minf: [], moof: [], moov: [], mp4a: [],\r\n            mvex: [], mvhd: [], sdtp: [], stbl: [],\r\n            stco: [], stsc: [], stsd: [], stsz: [],\r\n            stts: [], tfdt: [], tfhd: [], traf: [],\r\n            trak: [], trun: [], trex: [], tkhd: [],\r\n            vmhd: [], smhd: [], '.mp3': []\r\n        };\r\n\r\n        for (let name in MP4.types) {\r\n            if (MP4.types.hasOwnProperty(name)) {\r\n                MP4.types[name] = [\r\n                    name.charCodeAt(0),\r\n                    name.charCodeAt(1),\r\n                    name.charCodeAt(2),\r\n                    name.charCodeAt(3)\r\n                ];\r\n            }\r\n        }\r\n\r\n        let constants = MP4.constants = {};\r\n\r\n        constants.FTYP = new Uint8Array([\r\n            0x69, 0x73, 0x6F, 0x6D,  // major_brand: isom\r\n            0x0,  0x0,  0x0,  0x1,   // minor_version: 0x01\r\n            0x69, 0x73, 0x6F, 0x6D,  // isom\r\n            0x61, 0x76, 0x63, 0x31   // avc1\r\n        ]);\r\n\r\n        constants.STSD_PREFIX = new Uint8Array([\r\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\r\n            0x00, 0x00, 0x00, 0x01   // entry_count\r\n        ]);\r\n\r\n        constants.STTS = new Uint8Array([\r\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\r\n            0x00, 0x00, 0x00, 0x00   // entry_count\r\n        ]);\r\n\r\n        constants.STSC = constants.STCO = constants.STTS;\r\n\r\n        constants.STSZ = new Uint8Array([\r\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\r\n            0x00, 0x00, 0x00, 0x00,  // sample_size\r\n            0x00, 0x00, 0x00, 0x00   // sample_count\r\n        ]);\r\n\r\n        constants.HDLR_VIDEO = new Uint8Array([\r\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\r\n            0x00, 0x00, 0x00, 0x00,  // pre_defined\r\n            0x76, 0x69, 0x64, 0x65,  // handler_type: 'vide'\r\n            0x00, 0x00, 0x00, 0x00,  // reserved: 3 * 4 bytes\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x56, 0x69, 0x64, 0x65,\r\n            0x6F, 0x48, 0x61, 0x6E,\r\n            0x64, 0x6C, 0x65, 0x72, 0x00  // name: VideoHandler\r\n        ]);\r\n\r\n        constants.HDLR_AUDIO = new Uint8Array([\r\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\r\n            0x00, 0x00, 0x00, 0x00,  // pre_defined\r\n            0x73, 0x6F, 0x75, 0x6E,  // handler_type: 'soun'\r\n            0x00, 0x00, 0x00, 0x00,  // reserved: 3 * 4 bytes\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x53, 0x6F, 0x75, 0x6E,\r\n            0x64, 0x48, 0x61, 0x6E,\r\n            0x64, 0x6C, 0x65, 0x72, 0x00  // name: SoundHandler\r\n        ]);\r\n\r\n        constants.DREF = new Uint8Array([\r\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\r\n            0x00, 0x00, 0x00, 0x01,  // entry_count\r\n            0x00, 0x00, 0x00, 0x0C,  // entry_size\r\n            0x75, 0x72, 0x6C, 0x20,  // type 'url '\r\n            0x00, 0x00, 0x00, 0x01   // version(0) + flags\r\n        ]);\r\n\r\n        // Sound media header\r\n        constants.SMHD = new Uint8Array([\r\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\r\n            0x00, 0x00, 0x00, 0x00   // balance(2) + reserved(2)\r\n        ]);\r\n\r\n        // video media header\r\n        constants.VMHD = new Uint8Array([\r\n            0x00, 0x00, 0x00, 0x01,  // version(0) + flags\r\n            0x00, 0x00,              // graphicsmode: 2 bytes\r\n            0x00, 0x00, 0x00, 0x00,  // opcolor: 3 * 2 bytes\r\n            0x00, 0x00\r\n        ]);\r\n    }\r\n\r\n    // Generate a box\r\n    static box(type) {\r\n        let size = 8;\r\n        let result = null;\r\n        let datas = Array.prototype.slice.call(arguments, 1);\r\n        let arrayCount = datas.length;\r\n\r\n        for (let i = 0; i < arrayCount; i++) {\r\n            size += datas[i].byteLength;\r\n        }\r\n\r\n        result = new Uint8Array(size);\r\n        result[0] = (size >>> 24) & 0xFF;  // size\r\n        result[1] = (size >>> 16) & 0xFF;\r\n        result[2] = (size >>>  8) & 0xFF;\r\n        result[3] = (size) & 0xFF;\r\n\r\n        result.set(type, 4);  // type\r\n\r\n        let offset = 8;\r\n        for (let i = 0; i < arrayCount; i++) {  // data body\r\n            result.set(datas[i], offset);\r\n            offset += datas[i].byteLength;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // emit ftyp & moov\r\n    static generateInitSegment(meta) {\r\n        let ftyp = MP4.box(MP4.types.ftyp, MP4.constants.FTYP);\r\n        let moov = MP4.moov(meta);\r\n\r\n        let result = new Uint8Array(ftyp.byteLength + moov.byteLength);\r\n        result.set(ftyp, 0);\r\n        result.set(moov, ftyp.byteLength);\r\n        return result;\r\n    }\r\n\r\n    // Movie metadata box\r\n    static moov(meta) {\r\n        let mvhd = MP4.mvhd(meta.timescale, meta.duration);\r\n        let trak = MP4.trak(meta);\r\n        let mvex = MP4.mvex(meta);\r\n        return MP4.box(MP4.types.moov, mvhd, trak, mvex);\r\n    }\r\n\r\n    // Movie header box\r\n    static mvhd(timescale, duration) {\r\n        return MP4.box(MP4.types.mvhd, new Uint8Array([\r\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\r\n            0x00, 0x00, 0x00, 0x00,  // creation_time\r\n            0x00, 0x00, 0x00, 0x00,  // modification_time\r\n            (timescale >>> 24) & 0xFF,  // timescale: 4 bytes\r\n            (timescale >>> 16) & 0xFF,\r\n            (timescale >>>  8) & 0xFF,\r\n            (timescale) & 0xFF,\r\n            (duration >>> 24) & 0xFF,   // duration: 4 bytes\r\n            (duration >>> 16) & 0xFF,\r\n            (duration >>>  8) & 0xFF,\r\n            (duration) & 0xFF,\r\n            0x00, 0x01, 0x00, 0x00,  // Preferred rate: 1.0\r\n            0x01, 0x00, 0x00, 0x00,  // PreferredVolume(1.0, 2bytes) + reserved(2bytes)\r\n            0x00, 0x00, 0x00, 0x00,  // reserved: 4 + 4 bytes\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x01, 0x00, 0x00,  // ----begin composition matrix----\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x01, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x40, 0x00, 0x00, 0x00,  // ----end composition matrix----\r\n            0x00, 0x00, 0x00, 0x00,  // ----begin pre_defined 6 * 4 bytes----\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00,  // ----end pre_defined 6 * 4 bytes----\r\n            0xFF, 0xFF, 0xFF, 0xFF   // next_track_ID\r\n        ]));\r\n    }\r\n\r\n    // Track box\r\n    static trak(meta) {\r\n        return MP4.box(MP4.types.trak, MP4.tkhd(meta), MP4.mdia(meta));\r\n    }\r\n\r\n    // Track header box\r\n    static tkhd(meta) {\r\n        let trackId = meta.id, duration = meta.duration;\r\n        let width = meta.presentWidth, height = meta.presentHeight;\r\n\r\n        return MP4.box(MP4.types.tkhd, new Uint8Array([\r\n            0x00, 0x00, 0x00, 0x07,  // version(0) + flags\r\n            0x00, 0x00, 0x00, 0x00,  // creation_time\r\n            0x00, 0x00, 0x00, 0x00,  // modification_time\r\n            (trackId >>> 24) & 0xFF,  // track_ID: 4 bytes\r\n            (trackId >>> 16) & 0xFF,\r\n            (trackId >>>  8) & 0xFF,\r\n            (trackId) & 0xFF,\r\n            0x00, 0x00, 0x00, 0x00,  // reserved: 4 bytes\r\n            (duration >>> 24) & 0xFF, // duration: 4 bytes\r\n            (duration >>> 16) & 0xFF,\r\n            (duration >>>  8) & 0xFF,\r\n            (duration) & 0xFF,\r\n            0x00, 0x00, 0x00, 0x00,  // reserved: 2 * 4 bytes\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00,  // layer(2bytes) + alternate_group(2bytes)\r\n            0x00, 0x00, 0x00, 0x00,  // volume(2bytes) + reserved(2bytes)\r\n            0x00, 0x01, 0x00, 0x00,  // ----begin composition matrix----\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x01, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x40, 0x00, 0x00, 0x00,  // ----end composition matrix----\r\n            (width >>> 8) & 0xFF,    // width and height\r\n            (width) & 0xFF,\r\n            0x00, 0x00,\r\n            (height >>> 8) & 0xFF,\r\n            (height) & 0xFF,\r\n            0x00, 0x00\r\n        ]));\r\n    }\r\n\r\n    // Media Box\r\n    static mdia(meta) {\r\n        return MP4.box(MP4.types.mdia, MP4.mdhd(meta), MP4.hdlr(meta), MP4.minf(meta));\r\n    }\r\n\r\n    // Media header box\r\n    static mdhd(meta) {\r\n        let timescale = meta.timescale;\r\n        let duration = meta.duration;\r\n        return MP4.box(MP4.types.mdhd, new Uint8Array([\r\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\r\n            0x00, 0x00, 0x00, 0x00,  // creation_time\r\n            0x00, 0x00, 0x00, 0x00,  // modification_time\r\n            (timescale >>> 24) & 0xFF,  // timescale: 4 bytes\r\n            (timescale >>> 16) & 0xFF,\r\n            (timescale >>>  8) & 0xFF,\r\n            (timescale) & 0xFF,\r\n            (duration >>> 24) & 0xFF,   // duration: 4 bytes\r\n            (duration >>> 16) & 0xFF,\r\n            (duration >>>  8) & 0xFF,\r\n            (duration) & 0xFF,\r\n            0x55, 0xC4,             // language: und (undetermined)\r\n            0x00, 0x00              // pre_defined = 0\r\n        ]));\r\n    }\r\n\r\n    // Media handler reference box\r\n    static hdlr(meta) {\r\n        let data = null;\r\n        if (meta.type === 'audio') {\r\n            data = MP4.constants.HDLR_AUDIO;\r\n        } else {\r\n            data = MP4.constants.HDLR_VIDEO;\r\n        }\r\n        return MP4.box(MP4.types.hdlr, data);\r\n    }\r\n\r\n    // Media infomation box\r\n    static minf(meta) {\r\n        let xmhd = null;\r\n        if (meta.type === 'audio') {\r\n            xmhd = MP4.box(MP4.types.smhd, MP4.constants.SMHD);\r\n        } else {\r\n            xmhd = MP4.box(MP4.types.vmhd, MP4.constants.VMHD);\r\n        }\r\n        return MP4.box(MP4.types.minf, xmhd, MP4.dinf(), MP4.stbl(meta));\r\n    }\r\n\r\n    // Data infomation box\r\n    static dinf() {\r\n        let result = MP4.box(MP4.types.dinf,\r\n            MP4.box(MP4.types.dref, MP4.constants.DREF)\r\n        );\r\n        return result;\r\n    }\r\n\r\n    // Sample table box\r\n    static stbl(meta) {\r\n        let result = MP4.box(MP4.types.stbl,  // type: stbl\r\n            MP4.stsd(meta),  // Sample Description Table\r\n            MP4.box(MP4.types.stts, MP4.constants.STTS),  // Time-To-Sample\r\n            MP4.box(MP4.types.stsc, MP4.constants.STSC),  // Sample-To-Chunk\r\n            MP4.box(MP4.types.stsz, MP4.constants.STSZ),  // Sample size\r\n            MP4.box(MP4.types.stco, MP4.constants.STCO)   // Chunk offset\r\n        ); \r\n        return result; \r\n    }\r\n\r\n    // Sample description box\r\n    static stsd(meta) {\r\n        if (meta.type === 'audio') {\r\n            if (meta.codec === 'mp3') {\r\n                return MP4.box(MP4.types.stsd, MP4.constants.STSD_PREFIX, MP4.mp3(meta));\r\n            }\r\n            // else: aac -> mp4a\r\n            return MP4.box(MP4.types.stsd, MP4.constants.STSD_PREFIX, MP4.mp4a(meta));\r\n        } else {\r\n            return MP4.box(MP4.types.stsd, MP4.constants.STSD_PREFIX, MP4.avc1(meta));\r\n        }\r\n    }\r\n\r\n    static mp3(meta) {\r\n        let channelCount = meta.channelCount;\r\n        let sampleRate = meta.audioSampleRate;\r\n\r\n        let data = new Uint8Array([\r\n            0x00, 0x00, 0x00, 0x00,  // reserved(4)\r\n            0x00, 0x00, 0x00, 0x01,  // reserved(2) + data_reference_index(2)\r\n            0x00, 0x00, 0x00, 0x00,  // reserved: 2 * 4 bytes\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x00, channelCount,      // channelCount(2)\r\n            0x00, 0x10,              // sampleSize(2)\r\n            0x00, 0x00, 0x00, 0x00,  // reserved(4)\r\n            (sampleRate >>> 8) & 0xFF,  // Audio sample rate\r\n            (sampleRate) & 0xFF,\r\n            0x00, 0x00\r\n        ]);\r\n\r\n        return MP4.box(MP4.types['.mp3'], data);\r\n    }\r\n\r\n    static mp4a(meta) {\r\n        let channelCount = meta.channelCount;\r\n        let sampleRate = meta.audioSampleRate;\r\n\r\n        let data = new Uint8Array([\r\n            0x00, 0x00, 0x00, 0x00,  // reserved(4)\r\n            0x00, 0x00, 0x00, 0x01,  // reserved(2) + data_reference_index(2)\r\n            0x00, 0x00, 0x00, 0x00,  // reserved: 2 * 4 bytes\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x00, channelCount,      // channelCount(2)\r\n            0x00, 0x10,              // sampleSize(2)\r\n            0x00, 0x00, 0x00, 0x00,  // reserved(4)\r\n            (sampleRate >>> 8) & 0xFF,  // Audio sample rate\r\n            (sampleRate) & 0xFF,\r\n            0x00, 0x00\r\n        ]);\r\n\r\n        return MP4.box(MP4.types.mp4a, data, MP4.esds(meta));\r\n    }\r\n\r\n    static esds(meta) {\r\n        let config = meta.config || [];\r\n        let configSize = config.length;\r\n        let data = new Uint8Array([\r\n            0x00, 0x00, 0x00, 0x00,  // version 0 + flags\r\n\r\n            0x03,                    // descriptor_type\r\n            0x17 + configSize,       // length3\r\n            0x00, 0x01,              // es_id\r\n            0x00,                    // stream_priority\r\n\r\n            0x04,                    // descriptor_type\r\n            0x0F + configSize,       // length\r\n            0x40,                    // codec: mpeg4_audio\r\n            0x15,                    // stream_type: Audio\r\n            0x00, 0x00, 0x00,        // buffer_size\r\n            0x00, 0x00, 0x00, 0x00,  // maxBitrate\r\n            0x00, 0x00, 0x00, 0x00,  // avgBitrate\r\n\r\n            0x05                     // descriptor_type\r\n        ].concat([\r\n            configSize\r\n        ]).concat(\r\n            config\r\n        ).concat([\r\n            0x06, 0x01, 0x02         // GASpecificConfig\r\n        ]));\r\n        return MP4.box(MP4.types.esds, data);\r\n    }\r\n\r\n    static avc1(meta) {\r\n        let avcc = meta.avcc;\r\n        let width = meta.codecWidth, height = meta.codecHeight;\r\n\r\n        let data = new Uint8Array([\r\n            0x00, 0x00, 0x00, 0x00,  // reserved(4)\r\n            0x00, 0x00, 0x00, 0x01,  // reserved(2) + data_reference_index(2)\r\n            0x00, 0x00, 0x00, 0x00,  // pre_defined(2) + reserved(2)\r\n            0x00, 0x00, 0x00, 0x00,  // pre_defined: 3 * 4 bytes\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00,\r\n            (width >>> 8) & 0xFF,    // width: 2 bytes\r\n            (width) & 0xFF,\r\n            (height >>> 8) & 0xFF,   // height: 2 bytes\r\n            (height) & 0xFF,\r\n            0x00, 0x48, 0x00, 0x00,  // horizresolution: 4 bytes\r\n            0x00, 0x48, 0x00, 0x00,  // vertresolution: 4 bytes\r\n            0x00, 0x00, 0x00, 0x00,  // reserved: 4 bytes\r\n            0x00, 0x01,              // frame_count\r\n            0x0A,                    // strlen\r\n            0x78, 0x71, 0x71, 0x2F,  // compressorname: 32 bytes\r\n            0x66, 0x6C, 0x76, 0x2E,\r\n            0x6A, 0x73, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00, 0x00,\r\n            0x00, 0x00, 0x00,\r\n            0x00, 0x18,              // depth\r\n            0xFF, 0xFF               // pre_defined = -1\r\n        ]);\r\n        return MP4.box(MP4.types.avc1, data, MP4.box(MP4.types.avcC, avcc));\r\n    }\r\n\r\n    // Movie Extends box\r\n    static mvex(meta) {\r\n        return MP4.box(MP4.types.mvex, MP4.trex(meta));\r\n    }\r\n\r\n    // Track Extends box\r\n    static trex(meta) {\r\n        let trackId = meta.id;\r\n        let data = new Uint8Array([\r\n            0x00, 0x00, 0x00, 0x00,  // version(0) + flags\r\n            (trackId >>> 24) & 0xFF, // track_ID\r\n            (trackId >>> 16) & 0xFF,\r\n            (trackId >>>  8) & 0xFF,\r\n            (trackId) & 0xFF,\r\n            0x00, 0x00, 0x00, 0x01,  // default_sample_description_index\r\n            0x00, 0x00, 0x00, 0x00,  // default_sample_duration\r\n            0x00, 0x00, 0x00, 0x00,  // default_sample_size\r\n            0x00, 0x01, 0x00, 0x01   // default_sample_flags\r\n        ]);\r\n        return MP4.box(MP4.types.trex, data);\r\n    }\r\n\r\n    // Movie fragment box\r\n    static moof(track, baseMediaDecodeTime) {\r\n        return MP4.box(MP4.types.moof, MP4.mfhd(track.sequenceNumber), MP4.traf(track, baseMediaDecodeTime));\r\n    }\r\n\r\n    static mfhd(sequenceNumber) {\r\n        let data = new Uint8Array([\r\n            0x00, 0x00, 0x00, 0x00,\r\n            (sequenceNumber >>> 24) & 0xFF,  // sequence_number: int32\r\n            (sequenceNumber >>> 16) & 0xFF,\r\n            (sequenceNumber >>>  8) & 0xFF,\r\n            (sequenceNumber) & 0xFF\r\n        ]);\r\n        return MP4.box(MP4.types.mfhd, data);\r\n    }\r\n\r\n    // Track fragment box\r\n    static traf(track, baseMediaDecodeTime) {\r\n        let trackId = track.id;\r\n\r\n        // Track fragment header box\r\n        let tfhd = MP4.box(MP4.types.tfhd, new Uint8Array([\r\n            0x00, 0x00, 0x00, 0x00,  // version(0) & flags\r\n            (trackId >>> 24) & 0xFF, // track_ID\r\n            (trackId >>> 16) & 0xFF,\r\n            (trackId >>>  8) & 0xFF,\r\n            (trackId) & 0xFF\r\n        ]));\r\n        // Track Fragment Decode Time\r\n        let tfdt = MP4.box(MP4.types.tfdt, new Uint8Array([\r\n            0x00, 0x00, 0x00, 0x00,  // version(0) & flags\r\n            (baseMediaDecodeTime >>> 24) & 0xFF,  // baseMediaDecodeTime: int32\r\n            (baseMediaDecodeTime >>> 16) & 0xFF,\r\n            (baseMediaDecodeTime >>>  8) & 0xFF,\r\n            (baseMediaDecodeTime) & 0xFF\r\n        ]));\r\n        let sdtp = MP4.sdtp(track);\r\n        let trun = MP4.trun(track, sdtp.byteLength + 16 + 16 + 8 + 16 + 8 + 8);\r\n\r\n        return MP4.box(MP4.types.traf, tfhd, tfdt, trun, sdtp);\r\n    }\r\n\r\n    // Sample Dependency Type box\r\n    static sdtp(track) {\r\n        let samples = track.samples || [];\r\n        let sampleCount = samples.length;\r\n        let data = new Uint8Array(4 + sampleCount);\r\n        // 0~4 bytes: version(0) & flags\r\n        for (let i = 0; i < sampleCount; i++) {\r\n            let flags = samples[i].flags;\r\n            data[i + 4] = (flags.isLeading << 6)    // is_leading: 2 (bit)\r\n                        | (flags.dependsOn << 4)    // sample_depends_on\r\n                        | (flags.isDependedOn << 2) // sample_is_depended_on\r\n                        | (flags.hasRedundancy);    // sample_has_redundancy\r\n        }\r\n        return MP4.box(MP4.types.sdtp, data);\r\n    }\r\n\r\n    // Track fragment run box\r\n    static trun(track, offset) {\r\n        let samples = track.samples || [];\r\n        let sampleCount = samples.length;\r\n        let dataSize = 12 + 16 * sampleCount;\r\n        let data = new Uint8Array(dataSize);\r\n        offset += 8 + dataSize;\r\n\r\n        data.set([\r\n            0x00, 0x00, 0x0F, 0x01,      // version(0) & flags\r\n            (sampleCount >>> 24) & 0xFF, // sample_count\r\n            (sampleCount >>> 16) & 0xFF,\r\n            (sampleCount >>>  8) & 0xFF,\r\n            (sampleCount) & 0xFF,\r\n            (offset >>> 24) & 0xFF,      // data_offset\r\n            (offset >>> 16) & 0xFF,\r\n            (offset >>>  8) & 0xFF,\r\n            (offset) & 0xFF\r\n        ], 0);\r\n\r\n        for (let i = 0; i < sampleCount; i++) {\r\n            let duration = samples[i].duration;\r\n            let size = samples[i].size;\r\n            let flags = samples[i].flags;\r\n            let cts = samples[i].cts;\r\n            data.set([\r\n                (duration >>> 24) & 0xFF,  // sample_duration\r\n                (duration >>> 16) & 0xFF,\r\n                (duration >>>  8) & 0xFF,\r\n                (duration) & 0xFF,\r\n                (size >>> 24) & 0xFF,      // sample_size\r\n                (size >>> 16) & 0xFF,\r\n                (size >>>  8) & 0xFF,\r\n                (size) & 0xFF,\r\n                (flags.isLeading << 2) | flags.dependsOn,  // sample_flags\r\n                (flags.isDependedOn << 6) | (flags.hasRedundancy << 4) | flags.isNonSync,\r\n                0x00, 0x00,                // sample_degradation_priority\r\n                (cts >>> 24) & 0xFF,       // sample_composition_time_offset\r\n                (cts >>> 16) & 0xFF,\r\n                (cts >>>  8) & 0xFF,\r\n                (cts) & 0xFF\r\n            ], 12 + 16 * i);\r\n        }\r\n        return MP4.box(MP4.types.trun, data);\r\n    }\r\n\r\n    static mdat(data) {\r\n        return MP4.box(MP4.types.mdat, data);\r\n    }\r\n\r\n}\r\n\r\nMP4.init();\r\n\r\nexport default MP4;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport Log from '../utils/logger.js';\r\nimport MP4 from './mp4-generator.js';\r\nimport AAC from './aac-silent.js';\r\nimport Browser from '../utils/browser.js';\r\nimport {SampleInfo, MediaSegmentInfo, MediaSegmentInfoList} from '../core/media-segment-info.js';\r\nimport {IllegalStateException} from '../utils/exception.js';\r\n\r\n\r\n// Fragmented mp4 remuxer\r\nclass MP4Remuxer {\r\n\r\n    constructor(config) {\r\n        this.TAG = 'MP4Remuxer';\r\n\r\n        this._config = config;\r\n        this._isLive = (config.isLive === true) ? true : false;\r\n\r\n        this._dtsBase = -1;\r\n        this._dtsBaseInited = false;\r\n        this._audioDtsBase = Infinity;\r\n        this._videoDtsBase = Infinity;\r\n        this._audioNextDts = undefined;\r\n        this._videoNextDts = undefined;\r\n        this._audioStashedLastSample = null;\r\n        this._videoStashedLastSample = null;\r\n\r\n        this._audioMeta = null;\r\n        this._videoMeta = null;\r\n\r\n        this._audioSegmentInfoList = new MediaSegmentInfoList('audio');\r\n        this._videoSegmentInfoList = new MediaSegmentInfoList('video');\r\n\r\n        this._onInitSegment = null;\r\n        this._onMediaSegment = null;\r\n\r\n        // Workaround for chrome < 50: Always force first sample as a Random Access Point in media segment\r\n        // see https://bugs.chromium.org/p/chromium/issues/detail?id=229412\r\n        this._forceFirstIDR = (Browser.chrome &&\r\n                              (Browser.version.major < 50 ||\r\n                              (Browser.version.major === 50 && Browser.version.build < 2661))) ? true : false;\r\n\r\n        // Workaround for IE11/Edge: Fill silent aac frame after keyframe-seeking\r\n        // Make audio beginDts equals with video beginDts, in order to fix seek freeze\r\n        this._fillSilentAfterSeek = (Browser.msedge || Browser.msie);\r\n\r\n        // While only FireFox supports 'audio/mp4, codecs=\"mp3\"', use 'audio/mpeg' for chrome, safari, ...\r\n        this._mp3UseMpegAudio = !Browser.firefox;\r\n\r\n        this._fillAudioTimestampGap = this._config.fixAudioTimestampGap;\r\n    }\r\n\r\n    destroy() {\r\n        this._dtsBase = -1;\r\n        this._dtsBaseInited = false;\r\n        this._audioMeta = null;\r\n        this._videoMeta = null;\r\n        this._audioSegmentInfoList.clear();\r\n        this._audioSegmentInfoList = null;\r\n        this._videoSegmentInfoList.clear();\r\n        this._videoSegmentInfoList = null;\r\n        this._onInitSegment = null;\r\n        this._onMediaSegment = null;\r\n    }\r\n\r\n    bindDataSource(producer) {\r\n        producer.onDataAvailable = this.remux.bind(this);\r\n        producer.onTrackMetadata = this._onTrackMetadataReceived.bind(this);\r\n        return this;\r\n    }\r\n\r\n    /* prototype: function onInitSegment(type: string, initSegment: ArrayBuffer): void\r\n       InitSegment: {\r\n           type: string,\r\n           data: ArrayBuffer,\r\n           codec: string,\r\n           container: string\r\n       }\r\n    */\r\n    get onInitSegment() {\r\n        return this._onInitSegment;\r\n    }\r\n\r\n    set onInitSegment(callback) {\r\n        this._onInitSegment = callback;\r\n    }\r\n\r\n    /* prototype: function onMediaSegment(type: string, mediaSegment: MediaSegment): void\r\n       MediaSegment: {\r\n           type: string,\r\n           data: ArrayBuffer,\r\n           sampleCount: int32\r\n           info: MediaSegmentInfo\r\n       }\r\n    */\r\n    get onMediaSegment() {\r\n        return this._onMediaSegment;\r\n    }\r\n\r\n    set onMediaSegment(callback) {\r\n        this._onMediaSegment = callback;\r\n    }\r\n\r\n    insertDiscontinuity() {\r\n        this._audioNextDts = this._videoNextDts = undefined;\r\n    }\r\n\r\n    seek(originalDts) {\r\n        this._audioStashedLastSample = null;\r\n        this._videoStashedLastSample = null;\r\n        this._videoSegmentInfoList.clear();\r\n        this._audioSegmentInfoList.clear();\r\n    }\r\n\r\n    remux(audioTrack, videoTrack) {\r\n        if (!this._onMediaSegment) {\r\n            throw new IllegalStateException('MP4Remuxer: onMediaSegment callback must be specificed!');\r\n        }\r\n        if (!this._dtsBaseInited) {\r\n            this._calculateDtsBase(audioTrack, videoTrack);\r\n        }\r\n        this._remuxVideo(videoTrack);\r\n        this._remuxAudio(audioTrack);\r\n    }\r\n\r\n    _onTrackMetadataReceived(type, metadata) {\r\n        let metabox = null;\r\n\r\n        let container = 'mp4';\r\n        let codec = metadata.codec;\r\n\r\n        if (type === 'audio') {\r\n            this._audioMeta = metadata;\r\n            if (metadata.codec === 'mp3' && this._mp3UseMpegAudio) {\r\n                // 'audio/mpeg' for MP3 audio track\r\n                container = 'mpeg';\r\n                codec = '';\r\n                metabox = new Uint8Array();\r\n            } else {\r\n                // 'audio/mp4, codecs=\"codec\"'\r\n                metabox = MP4.generateInitSegment(metadata);\r\n            }\r\n        } else if (type === 'video') {\r\n            this._videoMeta = metadata;\r\n            metabox = MP4.generateInitSegment(metadata);\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        // dispatch metabox (Initialization Segment)\r\n        if (!this._onInitSegment) {\r\n            throw new IllegalStateException('MP4Remuxer: onInitSegment callback must be specified!');\r\n        }\r\n        this._onInitSegment(type, {\r\n            type: type,\r\n            data: metabox.buffer,\r\n            codec: codec,\r\n            container: `${type}/${container}`,\r\n            mediaDuration: metadata.duration  // in timescale 1000 (milliseconds)\r\n        });\r\n    }\r\n\r\n    _calculateDtsBase(audioTrack, videoTrack) {\r\n        if (this._dtsBaseInited) {\r\n            return;\r\n        }\r\n\r\n        if (audioTrack.samples && audioTrack.samples.length) {\r\n            this._audioDtsBase = audioTrack.samples[0].dts;\r\n        }\r\n        if (videoTrack.samples && videoTrack.samples.length) {\r\n            this._videoDtsBase = videoTrack.samples[0].dts;\r\n        }\r\n\r\n        this._dtsBase = Math.min(this._audioDtsBase, this._videoDtsBase);\r\n        this._dtsBaseInited = true;\r\n    }\r\n\r\n    flushStashedSamples() {\r\n        let videoSample = this._videoStashedLastSample;\r\n        let audioSample = this._audioStashedLastSample;\r\n\r\n        let videoTrack = {\r\n            type: 'video',\r\n            id: 1,\r\n            sequenceNumber: 0,\r\n            samples: [],\r\n            length: 0\r\n        };\r\n\r\n        if (videoSample != null) {\r\n            videoTrack.samples.push(videoSample);\r\n            videoTrack.length = videoSample.length;\r\n        }\r\n\r\n        let audioTrack = {\r\n            type: 'audio',\r\n            id: 2,\r\n            sequenceNumber: 0,\r\n            samples: [],\r\n            length: 0\r\n        };\r\n\r\n        if (audioSample != null) {\r\n            audioTrack.samples.push(audioSample);\r\n            audioTrack.length = audioSample.length;\r\n        }\r\n\r\n        this._videoStashedLastSample = null;\r\n        this._audioStashedLastSample = null;\r\n\r\n        this._remuxVideo(videoTrack, true);\r\n        this._remuxAudio(audioTrack, true);\r\n    }\r\n\r\n    _remuxAudio(audioTrack, force) {\r\n        if (this._audioMeta == null) {\r\n            return;\r\n        }\r\n\r\n        let track = audioTrack;\r\n        let samples = track.samples;\r\n        let dtsCorrection = undefined;\r\n        let firstDts = -1, lastDts = -1, lastPts = -1;\r\n        let refSampleDuration = this._audioMeta.refSampleDuration;\r\n\r\n        let mpegRawTrack = this._audioMeta.codec === 'mp3' && this._mp3UseMpegAudio;\r\n        let firstSegmentAfterSeek = this._dtsBaseInited && this._audioNextDts === undefined;\r\n\r\n        let insertPrefixSilentFrame = false;\r\n\r\n        if (!samples || samples.length === 0) {\r\n            return;\r\n        }\r\n        if (samples.length === 1 && !force) {\r\n            // If [sample count in current batch] === 1 && (force != true)\r\n            // Ignore and keep in demuxer's queue\r\n            return;\r\n        }  // else if (force === true) do remux\r\n\r\n        let offset = 0;\r\n        let mdatbox = null;\r\n        let mdatBytes = 0;\r\n\r\n        // calculate initial mdat size\r\n        if (mpegRawTrack) {\r\n            // for raw mpeg buffer\r\n            offset = 0;\r\n            mdatBytes = track.length;\r\n        } else {\r\n            // for fmp4 mdat box\r\n            offset = 8;  // size + type\r\n            mdatBytes = 8 + track.length;\r\n        }\r\n\r\n\r\n        let lastSample = null;\r\n\r\n        // Pop the lastSample and waiting for stash\r\n        if (samples.length > 1) {\r\n            lastSample = samples.pop();\r\n            mdatBytes -= lastSample.length;\r\n        }\r\n\r\n        // Insert [stashed lastSample in the previous batch] to the front\r\n        if (this._audioStashedLastSample != null) {\r\n            let sample = this._audioStashedLastSample;\r\n            this._audioStashedLastSample = null;\r\n            samples.unshift(sample);\r\n            mdatBytes += sample.length;\r\n        }\r\n\r\n        // Stash the lastSample of current batch, waiting for next batch\r\n        if (lastSample != null) {\r\n            this._audioStashedLastSample = lastSample;\r\n        }\r\n\r\n\r\n        let firstSampleOriginalDts = samples[0].dts - this._dtsBase;\r\n\r\n        // calculate dtsCorrection\r\n        if (this._audioNextDts) {\r\n            dtsCorrection = firstSampleOriginalDts - this._audioNextDts;\r\n        } else {  // this._audioNextDts == undefined\r\n            if (this._audioSegmentInfoList.isEmpty()) {\r\n                dtsCorrection = 0;\r\n                if (this._fillSilentAfterSeek && !this._videoSegmentInfoList.isEmpty()) {\r\n                    if (this._audioMeta.originalCodec !== 'mp3') {\r\n                        insertPrefixSilentFrame = true;\r\n                    }\r\n                }\r\n            } else {\r\n                let lastSample = this._audioSegmentInfoList.getLastSampleBefore(firstSampleOriginalDts);\r\n                if (lastSample != null) {\r\n                    let distance = (firstSampleOriginalDts - (lastSample.originalDts + lastSample.duration));\r\n                    if (distance <= 3) {\r\n                        distance = 0;\r\n                    }\r\n                    let expectedDts = lastSample.dts + lastSample.duration + distance;\r\n                    dtsCorrection = firstSampleOriginalDts - expectedDts;\r\n                } else { // lastSample == null, cannot found\r\n                    dtsCorrection = 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (insertPrefixSilentFrame) {\r\n            // align audio segment beginDts to match with current video segment's beginDts\r\n            let firstSampleDts = firstSampleOriginalDts - dtsCorrection;\r\n            let videoSegment = this._videoSegmentInfoList.getLastSegmentBefore(firstSampleOriginalDts);\r\n            if (videoSegment != null && videoSegment.beginDts < firstSampleDts) {\r\n                let silentUnit = AAC.getSilentFrame(this._audioMeta.originalCodec, this._audioMeta.channelCount);\r\n                if (silentUnit) {\r\n                    let dts = videoSegment.beginDts;\r\n                    let silentFrameDuration = firstSampleDts - videoSegment.beginDts;\r\n                    Log.v(this.TAG, `InsertPrefixSilentAudio: dts: ${dts}, duration: ${silentFrameDuration}`);\r\n                    samples.unshift({unit: silentUnit, dts: dts, pts: dts});\r\n                    mdatBytes += silentUnit.byteLength;\r\n                }  // silentUnit == null: Cannot generate, skip\r\n            } else {\r\n                insertPrefixSilentFrame = false;\r\n            }\r\n        }\r\n\r\n        let mp4Samples = [];\r\n\r\n        // Correct dts for each sample, and calculate sample duration. Then output to mp4Samples\r\n        for (let i = 0; i < samples.length; i++) {\r\n            let sample = samples[i];\r\n            let unit = sample.unit;\r\n            let originalDts = sample.dts - this._dtsBase;\r\n            let dts = originalDts - dtsCorrection;\r\n\r\n            if (firstDts === -1) {\r\n                firstDts = dts;\r\n            }\r\n\r\n            let sampleDuration = 0;\r\n\r\n            if (i !== samples.length - 1) {\r\n                let nextDts = samples[i + 1].dts - this._dtsBase - dtsCorrection;\r\n                sampleDuration = nextDts - dts;\r\n            } else {  // the last sample\r\n                if (lastSample != null) {  // use stashed sample's dts to calculate sample duration\r\n                    let nextDts = lastSample.dts - this._dtsBase - dtsCorrection;\r\n                    sampleDuration = nextDts - dts;\r\n                } else if (mp4Samples.length >= 1) {  // use second last sample duration\r\n                    sampleDuration = mp4Samples[mp4Samples.length - 1].duration;\r\n                } else {  // the only one sample, use reference sample duration\r\n                    sampleDuration = Math.floor(refSampleDuration);\r\n                }\r\n            }\r\n\r\n            let needFillSilentFrames = false;\r\n            let silentFrames = null;\r\n\r\n            // Silent frame generation, if large timestamp gap detected && config.fixAudioTimestampGap\r\n            if (sampleDuration > refSampleDuration * 1.5 && this._audioMeta.codec !== 'mp3' && this._fillAudioTimestampGap && !Browser.safari) {\r\n                // We need to insert silent frames to fill timestamp gap\r\n                needFillSilentFrames = true;\r\n                let delta = Math.abs(sampleDuration - refSampleDuration);\r\n                let frameCount = Math.ceil(delta / refSampleDuration);\r\n                let currentDts = dts + refSampleDuration;  // Notice: in float\r\n\r\n                Log.w(this.TAG, 'Large audio timestamp gap detected, may cause AV sync to drift. ' +\r\n                                'Silent frames will be generated to avoid unsync.\\n' +\r\n                                `dts: ${dts + sampleDuration} ms, expected: ${dts + Math.round(refSampleDuration)} ms, ` +\r\n                                `delta: ${Math.round(delta)} ms, generate: ${frameCount} frames`);\r\n\r\n                let silentUnit = AAC.getSilentFrame(this._audioMeta.originalCodec, this._audioMeta.channelCount);\r\n                if (silentUnit == null) {\r\n                    Log.w(this.TAG, 'Unable to generate silent frame for ' +\r\n                                    `${this._audioMeta.originalCodec} with ${this._audioMeta.channelCount} channels, repeat last frame`);\r\n                    // Repeat last frame\r\n                    silentUnit = unit;\r\n                }\r\n                silentFrames = [];\r\n\r\n                for (let j = 0; j < frameCount; j++) {\r\n                    let intDts = Math.round(currentDts);  // round to integer\r\n                    if (silentFrames.length > 0) {\r\n                        // Set previous frame sample duration\r\n                        let previousFrame = silentFrames[silentFrames.length - 1];\r\n                        previousFrame.duration = intDts - previousFrame.dts;\r\n                    }\r\n                    let frame = {\r\n                        dts: intDts,\r\n                        pts: intDts,\r\n                        cts: 0,\r\n                        unit: silentUnit,\r\n                        size: silentUnit.byteLength,\r\n                        duration: 0,  // wait for next sample\r\n                        originalDts: originalDts,\r\n                        flags: {\r\n                            isLeading: 0,\r\n                            dependsOn: 1,\r\n                            isDependedOn: 0,\r\n                            hasRedundancy: 0\r\n                        }\r\n                    };\r\n                    silentFrames.push(frame);\r\n                    mdatBytes += frame.size;\r\n                    currentDts += refSampleDuration;\r\n                }\r\n\r\n                // last frame: align end time to next frame dts\r\n                let lastFrame = silentFrames[silentFrames.length - 1];\r\n                lastFrame.duration = dts + sampleDuration - lastFrame.dts;\r\n\r\n                // silentFrames.forEach((frame) => {\r\n                //     Log.w(this.TAG, `SilentAudio: dts: ${frame.dts}, duration: ${frame.duration}`);\r\n                // });\r\n\r\n                // Set correct sample duration for current frame\r\n                sampleDuration = Math.round(refSampleDuration);\r\n            }\r\n\r\n            mp4Samples.push({\r\n                dts: dts,\r\n                pts: dts,\r\n                cts: 0,\r\n                unit: sample.unit,\r\n                size: sample.unit.byteLength,\r\n                duration: sampleDuration,\r\n                originalDts: originalDts,\r\n                flags: {\r\n                    isLeading: 0,\r\n                    dependsOn: 1,\r\n                    isDependedOn: 0,\r\n                    hasRedundancy: 0\r\n                }\r\n            });\r\n\r\n            if (needFillSilentFrames) {\r\n                // Silent frames should be inserted after wrong-duration frame\r\n                mp4Samples.push.apply(mp4Samples, silentFrames);\r\n            }\r\n        }\r\n\r\n        // allocate mdatbox\r\n        if (mpegRawTrack) {\r\n            // allocate for raw mpeg buffer\r\n            mdatbox = new Uint8Array(mdatBytes);\r\n        } else {\r\n            // allocate for fmp4 mdat box\r\n            mdatbox = new Uint8Array(mdatBytes);\r\n            // size field\r\n            mdatbox[0] = (mdatBytes >>> 24) & 0xFF;\r\n            mdatbox[1] = (mdatBytes >>> 16) & 0xFF;\r\n            mdatbox[2] = (mdatBytes >>>  8) & 0xFF;\r\n            mdatbox[3] = (mdatBytes) & 0xFF;\r\n            // type field (fourCC)\r\n            mdatbox.set(MP4.types.mdat, 4);\r\n        }\r\n\r\n        // Write samples into mdatbox\r\n        for (let i = 0; i < mp4Samples.length; i++) {\r\n            let unit = mp4Samples[i].unit;\r\n            mdatbox.set(unit, offset);\r\n            offset += unit.byteLength;\r\n        }\r\n\r\n        let latest = mp4Samples[mp4Samples.length - 1];\r\n        lastDts = latest.dts + latest.duration;\r\n        this._audioNextDts = lastDts;\r\n\r\n        // fill media segment info & add to info list\r\n        let info = new MediaSegmentInfo();\r\n        info.beginDts = firstDts;\r\n        info.endDts = lastDts;\r\n        info.beginPts = firstDts;\r\n        info.endPts = lastDts;\r\n        info.originalBeginDts = mp4Samples[0].originalDts;\r\n        info.originalEndDts = latest.originalDts + latest.duration;\r\n        info.firstSample = new SampleInfo(mp4Samples[0].dts,\r\n                                          mp4Samples[0].pts,\r\n                                          mp4Samples[0].duration,\r\n                                          mp4Samples[0].originalDts,\r\n                                          false);\r\n        info.lastSample = new SampleInfo(latest.dts,\r\n                                         latest.pts,\r\n                                         latest.duration,\r\n                                         latest.originalDts,\r\n                                         false);\r\n        if (!this._isLive) {\r\n            this._audioSegmentInfoList.append(info);\r\n        }\r\n\r\n        track.samples = mp4Samples;\r\n        track.sequenceNumber++;\r\n\r\n        let moofbox = null;\r\n\r\n        if (mpegRawTrack) {\r\n            // Generate empty buffer, because useless for raw mpeg\r\n            moofbox = new Uint8Array();\r\n        } else {\r\n            // Generate moof for fmp4 segment\r\n            moofbox = MP4.moof(track, firstDts);\r\n        }\r\n\r\n        track.samples = [];\r\n        track.length = 0;\r\n\r\n        let segment = {\r\n            type: 'audio',\r\n            data: this._mergeBoxes(moofbox, mdatbox).buffer,\r\n            sampleCount: mp4Samples.length,\r\n            info: info\r\n        };\r\n\r\n        if (mpegRawTrack && firstSegmentAfterSeek) {\r\n            // For MPEG audio stream in MSE, if seeking occurred, before appending new buffer\r\n            // We need explicitly set timestampOffset to the desired point in timeline for mpeg SourceBuffer.\r\n            segment.timestampOffset = firstDts;\r\n        }\r\n\r\n        this._onMediaSegment('audio', segment);\r\n    }\r\n\r\n    _remuxVideo(videoTrack, force) {\r\n        if (this._videoMeta == null) {\r\n            return;\r\n        }\r\n\r\n        let track = videoTrack;\r\n        let samples = track.samples;\r\n        let dtsCorrection = undefined;\r\n        let firstDts = -1, lastDts = -1;\r\n        let firstPts = -1, lastPts = -1;\r\n\r\n        if (!samples || samples.length === 0) {\r\n            return;\r\n        }\r\n        if (samples.length === 1 && !force) {\r\n            // If [sample count in current batch] === 1 && (force != true)\r\n            // Ignore and keep in demuxer's queue\r\n            return;\r\n        }  // else if (force === true) do remux\r\n\r\n        let offset = 8;\r\n        let mdatbox = null;\r\n        let mdatBytes = 8 + videoTrack.length;\r\n\r\n\r\n        let lastSample = null;\r\n\r\n        // Pop the lastSample and waiting for stash\r\n        if (samples.length > 1) {\r\n            lastSample = samples.pop();\r\n            mdatBytes -= lastSample.length;\r\n        }\r\n\r\n        // Insert [stashed lastSample in the previous batch] to the front\r\n        if (this._videoStashedLastSample != null) {\r\n            let sample = this._videoStashedLastSample;\r\n            this._videoStashedLastSample = null;\r\n            samples.unshift(sample);\r\n            mdatBytes += sample.length;\r\n        }\r\n\r\n        // Stash the lastSample of current batch, waiting for next batch\r\n        if (lastSample != null) {\r\n            this._videoStashedLastSample = lastSample;\r\n        }\r\n\r\n\r\n        let firstSampleOriginalDts = samples[0].dts - this._dtsBase;\r\n\r\n        // calculate dtsCorrection\r\n        if (this._videoNextDts) {\r\n            dtsCorrection = firstSampleOriginalDts - this._videoNextDts;\r\n        } else {  // this._videoNextDts == undefined\r\n            if (this._videoSegmentInfoList.isEmpty()) {\r\n                dtsCorrection = 0;\r\n            } else {\r\n                let lastSample = this._videoSegmentInfoList.getLastSampleBefore(firstSampleOriginalDts);\r\n                if (lastSample != null) {\r\n                    let distance = (firstSampleOriginalDts - (lastSample.originalDts + lastSample.duration));\r\n                    if (distance <= 3) {\r\n                        distance = 0;\r\n                    }\r\n                    let expectedDts = lastSample.dts + lastSample.duration + distance;\r\n                    dtsCorrection = firstSampleOriginalDts - expectedDts;\r\n                } else { // lastSample == null, cannot found\r\n                    dtsCorrection = 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        let info = new MediaSegmentInfo();\r\n        let mp4Samples = [];\r\n\r\n        // Correct dts for each sample, and calculate sample duration. Then output to mp4Samples\r\n        for (let i = 0; i < samples.length; i++) {\r\n            let sample = samples[i];\r\n            let originalDts = sample.dts - this._dtsBase;\r\n            let isKeyframe = sample.isKeyframe;\r\n            let dts = originalDts - dtsCorrection;\r\n            let cts = sample.cts;\r\n            let pts = dts + cts;\r\n\r\n            if (firstDts === -1) {\r\n                firstDts = dts;\r\n                firstPts = pts;\r\n            }\r\n\r\n            let sampleDuration = 0;\r\n\r\n            if (i !== samples.length - 1) {\r\n                let nextDts = samples[i + 1].dts - this._dtsBase - dtsCorrection;\r\n                sampleDuration = nextDts - dts;\r\n            } else {  // the last sample\r\n                if (lastSample != null) {  // use stashed sample's dts to calculate sample duration\r\n                    let nextDts = lastSample.dts - this._dtsBase - dtsCorrection;\r\n                    sampleDuration = nextDts - dts;\r\n                } else if (mp4Samples.length >= 1) {  // use second last sample duration\r\n                    sampleDuration = mp4Samples[mp4Samples.length - 1].duration;\r\n                } else {  // the only one sample, use reference sample duration\r\n                    sampleDuration = Math.floor(this._videoMeta.refSampleDuration);\r\n                }\r\n            }\r\n\r\n            if (isKeyframe) {\r\n                let syncPoint = new SampleInfo(dts, pts, sampleDuration, sample.dts, true);\r\n                syncPoint.fileposition = sample.fileposition;\r\n                info.appendSyncPoint(syncPoint);\r\n            }\r\n\r\n            mp4Samples.push({\r\n                dts: dts,\r\n                pts: pts,\r\n                cts: cts,\r\n                units: sample.units,\r\n                size: sample.length,\r\n                isKeyframe: isKeyframe,\r\n                duration: sampleDuration,\r\n                originalDts: originalDts,\r\n                flags: {\r\n                    isLeading: 0,\r\n                    dependsOn: isKeyframe ? 2 : 1,\r\n                    isDependedOn: isKeyframe ? 1 : 0,\r\n                    hasRedundancy: 0,\r\n                    isNonSync: isKeyframe ? 0 : 1\r\n                }\r\n            });\r\n        }\r\n\r\n        // allocate mdatbox\r\n        mdatbox = new Uint8Array(mdatBytes);\r\n        mdatbox[0] = (mdatBytes >>> 24) & 0xFF;\r\n        mdatbox[1] = (mdatBytes >>> 16) & 0xFF;\r\n        mdatbox[2] = (mdatBytes >>>  8) & 0xFF;\r\n        mdatbox[3] = (mdatBytes) & 0xFF;\r\n        mdatbox.set(MP4.types.mdat, 4);\r\n\r\n        // Write samples into mdatbox\r\n        for (let i = 0; i < mp4Samples.length; i++) {\r\n            let units = mp4Samples[i].units;\r\n            while (units.length) {\r\n                let unit = units.shift();\r\n                let data = unit.data;\r\n                mdatbox.set(data, offset);\r\n                offset += data.byteLength;\r\n            }\r\n        }\r\n\r\n        let latest = mp4Samples[mp4Samples.length - 1];\r\n        lastDts = latest.dts + latest.duration;\r\n        lastPts = latest.pts + latest.duration;\r\n        this._videoNextDts = lastDts;\r\n\r\n        // fill media segment info & add to info list\r\n        info.beginDts = firstDts;\r\n        info.endDts = lastDts;\r\n        info.beginPts = firstPts;\r\n        info.endPts = lastPts;\r\n        info.originalBeginDts = mp4Samples[0].originalDts;\r\n        info.originalEndDts = latest.originalDts + latest.duration;\r\n        info.firstSample = new SampleInfo(mp4Samples[0].dts,\r\n                                          mp4Samples[0].pts,\r\n                                          mp4Samples[0].duration,\r\n                                          mp4Samples[0].originalDts,\r\n                                          mp4Samples[0].isKeyframe);\r\n        info.lastSample = new SampleInfo(latest.dts,\r\n                                         latest.pts,\r\n                                         latest.duration,\r\n                                         latest.originalDts,\r\n                                         latest.isKeyframe);\r\n        if (!this._isLive) {\r\n            this._videoSegmentInfoList.append(info);\r\n        }\r\n\r\n        track.samples = mp4Samples;\r\n        track.sequenceNumber++;\r\n\r\n        // workaround for chrome < 50: force first sample as a random access point\r\n        // see https://bugs.chromium.org/p/chromium/issues/detail?id=229412\r\n        if (this._forceFirstIDR) {\r\n            let flags = mp4Samples[0].flags;\r\n            flags.dependsOn = 2;\r\n            flags.isNonSync = 0;\r\n        }\r\n\r\n        let moofbox = MP4.moof(track, firstDts);\r\n        track.samples = [];\r\n        track.length = 0;\r\n\r\n        this._onMediaSegment('video', {\r\n            type: 'video',\r\n            data: this._mergeBoxes(moofbox, mdatbox).buffer,\r\n            sampleCount: mp4Samples.length,\r\n            info: info\r\n        });\r\n    }\r\n\r\n    _mergeBoxes(moof, mdat) {\r\n        let result = new Uint8Array(moof.byteLength + mdat.byteLength);\r\n        result.set(moof, 0);\r\n        result.set(mdat, moof.byteLength);\r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nexport default MP4Remuxer;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nlet Browser = {};\r\n\r\nfunction detect() {\r\n    // modified from jquery-browser-plugin\r\n\r\n    let ua = self.navigator.userAgent.toLowerCase();\r\n\r\n    let match = /(edge)\\/([\\w.]+)/.exec(ua) ||\r\n        /(opr)[\\/]([\\w.]+)/.exec(ua) ||\r\n        /(chrome)[ \\/]([\\w.]+)/.exec(ua) ||\r\n        /(iemobile)[\\/]([\\w.]+)/.exec(ua) ||\r\n        /(version)(applewebkit)[ \\/]([\\w.]+).*(safari)[ \\/]([\\w.]+)/.exec(ua) ||\r\n        /(webkit)[ \\/]([\\w.]+).*(version)[ \\/]([\\w.]+).*(safari)[ \\/]([\\w.]+)/.exec(ua) ||\r\n        /(webkit)[ \\/]([\\w.]+)/.exec(ua) ||\r\n        /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(ua) ||\r\n        /(msie) ([\\w.]+)/.exec(ua) ||\r\n        ua.indexOf('trident') >= 0 && /(rv)(?::| )([\\w.]+)/.exec(ua) ||\r\n        ua.indexOf('compatible') < 0 && /(firefox)[ \\/]([\\w.]+)/.exec(ua) ||\r\n        [];\r\n\r\n    let platform_match = /(ipad)/.exec(ua) ||\r\n        /(ipod)/.exec(ua) ||\r\n        /(windows phone)/.exec(ua) ||\r\n        /(iphone)/.exec(ua) ||\r\n        /(kindle)/.exec(ua) ||\r\n        /(android)/.exec(ua) ||\r\n        /(windows)/.exec(ua) ||\r\n        /(mac)/.exec(ua) ||\r\n        /(linux)/.exec(ua) ||\r\n        /(cros)/.exec(ua) ||\r\n        [];\r\n\r\n    let matched = {\r\n        browser: match[5] || match[3] || match[1] || '',\r\n        version: match[2] || match[4] || '0',\r\n        majorVersion: match[4] || match[2] || '0',\r\n        platform: platform_match[0] || ''\r\n    };\r\n\r\n    let browser = {};\r\n    if (matched.browser) {\r\n        browser[matched.browser] = true;\r\n\r\n        let versionArray = matched.majorVersion.split('.');\r\n        browser.version = {\r\n            major: parseInt(matched.majorVersion, 10),\r\n            string: matched.version\r\n        };\r\n        if (versionArray.length > 1) {\r\n            browser.version.minor = parseInt(versionArray[1], 10);\r\n        }\r\n        if (versionArray.length > 2) {\r\n            browser.version.build = parseInt(versionArray[2], 10);\r\n        }\r\n    }\r\n\r\n    if (matched.platform) {\r\n        browser[matched.platform] = true;\r\n    }\r\n\r\n    if (browser.chrome || browser.opr || browser.safari) {\r\n        browser.webkit = true;\r\n    }\r\n\r\n    // MSIE. IE11 has 'rv' identifer\r\n    if (browser.rv || browser.iemobile) {\r\n        if (browser.rv) {\r\n            delete browser.rv;\r\n        }\r\n        let msie = 'msie';\r\n        matched.browser = msie;\r\n        browser[msie] = true;\r\n    }\r\n\r\n    // Microsoft Edge\r\n    if (browser.edge) {\r\n        delete browser.edge;\r\n        let msedge = 'msedge';\r\n        matched.browser = msedge;\r\n        browser[msedge] = true;\r\n    }\r\n\r\n    // Opera 15+\r\n    if (browser.opr) {\r\n        let opera = 'opera';\r\n        matched.browser = opera;\r\n        browser[opera] = true;\r\n    }\r\n\r\n    // Stock android browsers are marked as Safari\r\n    if (browser.safari && browser.android) {\r\n        let android = 'android';\r\n        matched.browser = android;\r\n        browser[android] = true;\r\n    }\r\n\r\n    browser.name = matched.browser;\r\n    browser.platform = matched.platform;\r\n\r\n    for (let key in Browser) {\r\n        if (Browser.hasOwnProperty(key)) {\r\n            delete Browser[key];\r\n        }\r\n    }\r\n    Object.assign(Browser, browser);\r\n}\r\n\r\ndetect();\r\n\r\nexport default Browser;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport class RuntimeException {\r\n\r\n    constructor(message) {\r\n        this._message = message;\r\n    }\r\n\r\n    get name() {\r\n        return 'RuntimeException';\r\n    }\r\n\r\n    get message() {\r\n        return this._message;\r\n    }\r\n\r\n    toString() {\r\n        return this.name + ': ' + this.message;\r\n    }\r\n\r\n}\r\n\r\nexport class IllegalStateException extends RuntimeException {\r\n\r\n    constructor(message) {\r\n        super(message);\r\n    }\r\n\r\n    get name() {\r\n        return 'IllegalStateException';\r\n    }\r\n\r\n}\r\n\r\nexport class InvalidArgumentException extends RuntimeException {\r\n\r\n    constructor(message) {\r\n        super(message);\r\n    }\r\n\r\n    get name() {\r\n        return 'InvalidArgumentException';\r\n    }\r\n\r\n}\r\n\r\nexport class NotImplementedException extends RuntimeException {\r\n\r\n    constructor(message) {\r\n        super(message);\r\n    }\r\n\r\n    get name() {\r\n        return 'NotImplementedException';\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport EventEmitter from 'events';\r\n\r\nclass Log {\r\n\r\n    static e(tag, msg) {\r\n        if (!tag || Log.FORCE_GLOBAL_TAG)\r\n            tag = Log.GLOBAL_TAG;\r\n\r\n        let str = `[${tag}] > ${msg}`;\r\n\r\n        if (Log.ENABLE_CALLBACK) {\r\n            Log.emitter.emit('log', 'error', str);\r\n        }\r\n\r\n        if (!Log.ENABLE_ERROR) {\r\n            return;\r\n        }\r\n\r\n        if (console.error) {\r\n            console.error(str);\r\n        } else if (console.warn) {\r\n            console.warn(str);\r\n        } else {\r\n            console.log(str);\r\n        }\r\n    }\r\n\r\n    static i(tag, msg) {\r\n        if (!tag || Log.FORCE_GLOBAL_TAG)\r\n            tag = Log.GLOBAL_TAG;\r\n\r\n        let str = `[${tag}] > ${msg}`;\r\n\r\n        if (Log.ENABLE_CALLBACK) {\r\n            Log.emitter.emit('log', 'info', str);\r\n        }\r\n\r\n        if (!Log.ENABLE_INFO) {\r\n            return;\r\n        }\r\n\r\n        if (console.info) {\r\n            console.info(str);\r\n        } else {\r\n            console.log(str);\r\n        }\r\n    }\r\n\r\n    static w(tag, msg) {\r\n        if (!tag || Log.FORCE_GLOBAL_TAG)\r\n            tag = Log.GLOBAL_TAG;\r\n\r\n        let str = `[${tag}] > ${msg}`;\r\n\r\n        if (Log.ENABLE_CALLBACK) {\r\n            Log.emitter.emit('log', 'warn', str);\r\n        }\r\n\r\n        if (!Log.ENABLE_WARN) {\r\n            return;\r\n        }\r\n\r\n        if (console.warn) {\r\n            console.warn(str);\r\n        } else {\r\n            console.log(str);\r\n        }\r\n    }\r\n\r\n    static d(tag, msg) {\r\n        if (!tag || Log.FORCE_GLOBAL_TAG)\r\n            tag = Log.GLOBAL_TAG;\r\n\r\n        let str = `[${tag}] > ${msg}`;\r\n\r\n        if (Log.ENABLE_CALLBACK) {\r\n            Log.emitter.emit('log', 'debug', str);\r\n        }\r\n\r\n        if (!Log.ENABLE_DEBUG) {\r\n            return;\r\n        }\r\n\r\n        if (console.debug) {\r\n            console.debug(str);\r\n        } else {\r\n            console.log(str);\r\n        }\r\n    }\r\n\r\n    static v(tag, msg) {\r\n        if (!tag || Log.FORCE_GLOBAL_TAG)\r\n            tag = Log.GLOBAL_TAG;\r\n\r\n        let str = `[${tag}] > ${msg}`;\r\n\r\n        if (Log.ENABLE_CALLBACK) {\r\n            Log.emitter.emit('log', 'verbose', str);\r\n        }\r\n\r\n        if (!Log.ENABLE_VERBOSE) {\r\n            return;\r\n        }\r\n\r\n        console.log(str);\r\n    }\r\n\r\n}\r\n\r\nLog.GLOBAL_TAG = 'flv.js';\r\nLog.FORCE_GLOBAL_TAG = false;\r\nLog.ENABLE_ERROR = true;\r\nLog.ENABLE_INFO = true;\r\nLog.ENABLE_WARN = true;\r\nLog.ENABLE_DEBUG = true;\r\nLog.ENABLE_VERBOSE = true;\r\n\r\nLog.ENABLE_CALLBACK = false;\r\n\r\nLog.emitter = new EventEmitter();\r\n\r\nexport default Log;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport EventEmitter from 'events';\r\nimport Log from './logger.js';\r\n\r\nclass LoggingControl {\r\n\r\n    static get forceGlobalTag() {\r\n        return Log.FORCE_GLOBAL_TAG;\r\n    }\r\n\r\n    static set forceGlobalTag(enable) {\r\n        Log.FORCE_GLOBAL_TAG = enable;\r\n        LoggingControl._notifyChange();\r\n    }\r\n\r\n    static get globalTag() {\r\n        return Log.GLOBAL_TAG;\r\n    }\r\n\r\n    static set globalTag(tag) {\r\n        Log.GLOBAL_TAG = tag;\r\n        LoggingControl._notifyChange();\r\n    }\r\n\r\n    static get enableAll() {\r\n        return Log.ENABLE_VERBOSE\r\n            && Log.ENABLE_DEBUG\r\n            && Log.ENABLE_INFO\r\n            && Log.ENABLE_WARN\r\n            && Log.ENABLE_ERROR;\r\n    }\r\n\r\n    static set enableAll(enable) {\r\n        Log.ENABLE_VERBOSE = enable;\r\n        Log.ENABLE_DEBUG = enable;\r\n        Log.ENABLE_INFO = enable;\r\n        Log.ENABLE_WARN = enable;\r\n        Log.ENABLE_ERROR = enable;\r\n        LoggingControl._notifyChange();\r\n    }\r\n\r\n    static get enableDebug() {\r\n        return Log.ENABLE_DEBUG;\r\n    }\r\n\r\n    static set enableDebug(enable) {\r\n        Log.ENABLE_DEBUG = enable;\r\n        LoggingControl._notifyChange();\r\n    }\r\n\r\n    static get enableVerbose() {\r\n        return Log.ENABLE_VERBOSE;\r\n    }\r\n\r\n    static set enableVerbose(enable) {\r\n        Log.ENABLE_VERBOSE = enable;\r\n        LoggingControl._notifyChange();\r\n    }\r\n\r\n    static get enableInfo() {\r\n        return Log.ENABLE_INFO;\r\n    }\r\n\r\n    static set enableInfo(enable) {\r\n        Log.ENABLE_INFO = enable;\r\n        LoggingControl._notifyChange();\r\n    }\r\n\r\n    static get enableWarn() {\r\n        return Log.ENABLE_WARN;\r\n    }\r\n\r\n    static set enableWarn(enable) {\r\n        Log.ENABLE_WARN = enable;\r\n        LoggingControl._notifyChange();\r\n    }\r\n\r\n    static get enableError() {\r\n        return Log.ENABLE_ERROR;\r\n    }\r\n\r\n    static set enableError(enable) {\r\n        Log.ENABLE_ERROR = enable;\r\n        LoggingControl._notifyChange();\r\n    }\r\n\r\n    static getConfig() {\r\n        return {\r\n            globalTag: Log.GLOBAL_TAG,\r\n            forceGlobalTag: Log.FORCE_GLOBAL_TAG,\r\n            enableVerbose: Log.ENABLE_VERBOSE,\r\n            enableDebug: Log.ENABLE_DEBUG,\r\n            enableInfo: Log.ENABLE_INFO,\r\n            enableWarn: Log.ENABLE_WARN,\r\n            enableError: Log.ENABLE_ERROR,\r\n            enableCallback: Log.ENABLE_CALLBACK\r\n        };\r\n    }\r\n\r\n    static applyConfig(config) {\r\n        Log.GLOBAL_TAG = config.globalTag;\r\n        Log.FORCE_GLOBAL_TAG = config.forceGlobalTag;\r\n        Log.ENABLE_VERBOSE = config.enableVerbose;\r\n        Log.ENABLE_DEBUG = config.enableDebug;\r\n        Log.ENABLE_INFO = config.enableInfo;\r\n        Log.ENABLE_WARN = config.enableWarn;\r\n        Log.ENABLE_ERROR = config.enableError;\r\n        Log.ENABLE_CALLBACK = config.enableCallback;\r\n    }\r\n\r\n    static _notifyChange() {\r\n        let emitter = LoggingControl.emitter;\r\n\r\n        if (emitter.listenerCount('change') > 0) {\r\n            let config = LoggingControl.getConfig();\r\n            emitter.emit('change', config);\r\n        }\r\n    }\r\n\r\n    static registerListener(listener) {\r\n        LoggingControl.emitter.addListener('change', listener);\r\n    }\r\n\r\n    static removeListener(listener) {\r\n        LoggingControl.emitter.removeListener('change', listener);\r\n    }\r\n\r\n    static addLogListener(listener) {\r\n        Log.emitter.addListener('log', listener);\r\n        if (Log.emitter.listenerCount('log') > 0) {\r\n            Log.ENABLE_CALLBACK = true;\r\n            LoggingControl._notifyChange();\r\n        }\r\n    }\r\n\r\n    static removeLogListener(listener) {\r\n        Log.emitter.removeListener('log', listener);\r\n        if (Log.emitter.listenerCount('log') === 0) {\r\n            Log.ENABLE_CALLBACK = false;\r\n            LoggingControl._notifyChange();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nLoggingControl.emitter = new EventEmitter();\r\n\r\nexport default LoggingControl;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nclass Polyfill {\r\n\r\n    static install() {\r\n        // ES6 Object.setPrototypeOf\r\n        Object.setPrototypeOf = Object.setPrototypeOf || function (obj, proto) {\r\n            obj.__proto__ = proto;\r\n            return obj;\r\n        };\r\n\r\n        // ES6 Object.assign\r\n        Object.assign = Object.assign || function (target) {\r\n            if (target === undefined || target === null) {\r\n                throw new TypeError('Cannot convert undefined or null to object');\r\n            }\r\n\r\n            let output = Object(target);\r\n            for (let i = 1; i < arguments.length; i++) {\r\n                let source = arguments[i];\r\n                if (source !== undefined && source !== null) {\r\n                    for (let key in source) {\r\n                        if (source.hasOwnProperty(key)) {\r\n                            output[key] = source[key];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return output;\r\n        };\r\n\r\n        // ES6 Promise (missing support in IE11)\r\n        if (typeof self.Promise !== 'function') {\r\n            require('es6-promise').polyfill();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nPolyfill.install();\r\n\r\nexport default Polyfill;","/*\r\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\r\n *\r\n * This file is derived from C++ project libWinTF8 (https://github.com/m13253/libWinTF8)\r\n * @author zheng qian <xqq@xqq.im>\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nfunction checkContinuation(uint8array, start, checkLength) {\r\n    let array = uint8array;\r\n    if (start + checkLength < array.length) {\r\n        while (checkLength--) {\r\n            if ((array[++start] & 0xC0) !== 0x80)\r\n                return false;\r\n        }\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction decodeUTF8(uint8array) {\r\n    let out = [];\r\n    let input = uint8array;\r\n    let i = 0;\r\n    let length = uint8array.length;\r\n\r\n    while (i < length) {\r\n        if (input[i] < 0x80) {\r\n            out.push(String.fromCharCode(input[i]));\r\n            ++i;\r\n            continue;\r\n        } else if (input[i] < 0xC0) {\r\n            // fallthrough\r\n        } else if (input[i] < 0xE0) {\r\n            if (checkContinuation(input, i, 1)) {\r\n                let ucs4 = (input[i] & 0x1F) << 6 | (input[i + 1] & 0x3F);\r\n                if (ucs4 >= 0x80) {\r\n                    out.push(String.fromCharCode(ucs4 & 0xFFFF));\r\n                    i += 2;\r\n                    continue;\r\n                }\r\n            }\r\n        } else if (input[i] < 0xF0) {\r\n            if (checkContinuation(input, i, 2)) {\r\n                let ucs4 = (input[i] & 0xF) << 12 | (input[i + 1] & 0x3F) << 6 | input[i + 2] & 0x3F;\r\n                if (ucs4 >= 0x800 && (ucs4 & 0xF800) !== 0xD800) {\r\n                    out.push(String.fromCharCode(ucs4 & 0xFFFF));\r\n                    i += 3;\r\n                    continue;\r\n                }\r\n            }\r\n        } else if (input[i] < 0xF8) {\r\n            if (checkContinuation(input, i, 3)) {\r\n                let ucs4 = (input[i] & 0x7) << 18 | (input[i + 1] & 0x3F) << 12\r\n                         | (input[i + 2] & 0x3F) << 6 | (input[i + 3] & 0x3F);\r\n                if (ucs4 > 0x10000 && ucs4 < 0x110000) {\r\n                    ucs4 -= 0x10000;\r\n                    out.push(String.fromCharCode((ucs4 >>> 10) | 0xD800));\r\n                    out.push(String.fromCharCode((ucs4 & 0x3FF) | 0xDC00));\r\n                    i += 4;\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n        out.push(String.fromCharCode(0xFFFD));\r\n        ++i;\r\n    }\r\n\r\n    return out.join('');\r\n}\r\n\r\nexport default decodeUTF8;"]}